{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":15,"endLine":15,"endCol":45,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["lq_anf$##7205759403792801941","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":64,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["$dFormatTime_a22y","{v : (Data.Time.Format.FormatTime a) | v == $dFormatTime_a22y}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":69,"startCol":61,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Data.Text.Show.unpack","x1:Data.Text.Internal.Text -> {v : [GHC.Types.Char] | len v == tlen x1}"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":11,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.dateFormat","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":21,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.shortPrettyPrintTime","forall a .\n(Data.Time.Format.FormatTime<[]> a) =>\na -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":47,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Data.Time.Format.Locale.defaultTimeLocale","{v : Data.Time.Format.Locale.TimeLocale | v == defaultTimeLocale}"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":46,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["lq_anf$##7205759403792801942","{v : (GHC.Maybe.Maybe [GHC.Types.Char]) | isJust v <=> true}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":29,"startCol":24,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not v\n                      && v == False}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":61,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["lq_anf$##7205759403792801944","Data.Time.Clock.Internal.UTCTime.UTCTime -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":46,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Data.Time.Format.Locale.iso8601DateFormat","(GHC.Maybe.Maybe [GHC.Types.Char]) -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":69,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["GHC.Base..","forall a\n       b\n       c <r :: c b -> Bool, q :: c c -> Bool, p :: c b -> Bool> .\n{xcmp :: c, wcmp :: {VV : c<q xcmp> | true} |- {VV : b<p wcmp> | true} <: {VV : b<r xcmp> | true}} =>\n(ycmp:c -> {VV : b<p ycmp> | true}) -> (zcmp:c -> {VV : c<q zcmp> | true}) -> xcmp:c -> {VV : b<r xcmp> | true}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":80,"startCol":66,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Data.Time.Clock.POSIX.getCurrentTime","{v : (GHC.Types.IO Data.Time.Clock.Internal.UTCTime.UTCTime) | v == getCurrentTime}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":50,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Data.Time.Format.Locale.defaultTimeLocale","{v : Data.Time.Format.Locale.TimeLocale | v == defaultTimeLocale}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":19,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.getCurrentTimeText","(GHC.Types.IO [GHC.Types.Char])"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":61,"startCol":51,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.dateFormat","{v : [GHC.Types.Char] | len v >= 0\n                        && v == dateFormat}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":9,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.readDate","Data.Text.Internal.Text -> (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":80,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["GHC.Base.$fFunctorIO","{v : (GHC.Base.Functor GHC.Types.IO) | v == $fFunctorIO}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":58,"startCol":48,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.dateFormat","{v : [GHC.Types.Char] | len v >= 0\n                        && v == dateFormat}"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":64,"startCol":53,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["lq_anf$##7205759403792801946","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":58,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["lq_anf$##7205759403792801943","[GHC.Types.Char] -> (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":52,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Data.Time.Format.Locale.defaultTimeLocale","{v : Data.Time.Format.Locale.TimeLocale | v == defaultTimeLocale}"]]]],"o_templs":[[{"spanInfo":{"startLine":15,"endLine":15,"endCol":45,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["lq_anf$##7205759403792801941","{lq_tmp$x##788 : [GHC.Types.Char] | lq_tmp$x##788 ~~ lq_anf$##7205759403792801940##d2aw\n                                    && len lq_tmp$x##788 == strLen lq_anf$##7205759403792801940##d2aw}"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":64,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["$dFormatTime_a22y","{lq_tmp$x##1094 : (Data.Time.Format.FormatTime t) | lq_tmp$x##1094 == $dFormatTime_a22y}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":69,"startCol":61,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Data.Text.Show.unpack","lq_tmp$x##963:Data.Text.Internal.Text -> {lq_tmp$x##961 : [GHC.Types.Char] | len lq_tmp$x##961 == tlen lq_tmp$x##963}"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":11,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.dateFormat","{VV##779 : [{VV##772 : GHC.Types.Char^\"lq_tmp$x##774\" | $k_##773}]<\\lq_tmp$x##775 VV -> {VV##776 : GHC.Types.Char^\"lq_tmp$x##778\" | $k_##777}>^\"lq_tmp$x##781\" | $k_##780}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.$trModule","{VV##1103 : GHC.Types.Module^\"lq_tmp$x##1105\" | $k_##1104}"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":21,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.shortPrettyPrintTime","forall t .\n(Data.Time.Format.FormatTime<[]> t) =>\nlq_tmp$x##1053:t -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":47,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Data.Time.Format.Locale.defaultTimeLocale","{lq_tmp$x##883 : Data.Time.Format.Locale.TimeLocale^\"lq_tmp$x##55\" | lq_tmp$x##883 == Data.Time.Format.Locale.defaultTimeLocale}"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":46,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["lq_anf$##7205759403792801942","{lq_tmp$x##796 : (GHC.Maybe.Maybe {lq_tmp$x##812 : [{lq_tmp$x##809 : GHC.Types.Char^\"lq_tmp$x##801\" | $k_##800[VV##799:=lq_tmp$x##809][VV##806:=lq_tmp$x##812][lq_tmp$x##798:=lq_anf$##7205759403792801941##d2ax]}]<\\lq_tmp$x##810 VV -> {lq_tmp$x##811 : GHC.Types.Char^\"lq_tmp$x##805\" | $k_##804[VV##803:=lq_tmp$x##811][VV##806:=lq_tmp$x##812][lq_tmp$x##798:=lq_anf$##7205759403792801941##d2ax][lq_tmp$x##802:=lq_tmp$x##810]}>^\"lq_tmp$x##808\" | $k_##807[VV##806:=lq_tmp$x##812][lq_tmp$x##798:=lq_anf$##7205759403792801941##d2ax]}) | fromJust lq_tmp$x##796 == lq_anf$##7205759403792801941##d2ax\nisJust lq_tmp$x##796 <=> true)}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":29,"startCol":24,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["GHC.Types.False","{lq_tmp$x##882 : GHC.Types.Bool | not lq_tmp$x##882\n                                  && lq_tmp$x##882 == GHC.Types.False}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":61,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["lq_anf$##7205759403792801944","lq_tmp$x##987:Data.Time.Clock.Internal.UTCTime.UTCTime -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":46,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Data.Time.Format.Locale.iso8601DateFormat","lq_tmp$x##830:(GHC.Maybe.Maybe [GHC.Types.Char]) -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":69,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["GHC.Base..","forall b\n       c\n       a <r :: a c -> Bool, q :: a b -> Bool, p :: b c -> Bool> .\n{xcmp :: a, wcmp :: {VV : b<q xcmp> | true} |- {VV : c<p wcmp> | true} <: {VV : c<r xcmp> | true}} =>\nlq_tmp$db##14:(ycmp:b -> {VV : c<p ycmp> | true}) -> lq_tmp$db##16:(zcmp:a -> {VV : b<q zcmp> | true}) -> xcmp:a -> {VV : c<r xcmp> | true}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":80,"startCol":66,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Data.Time.Clock.POSIX.getCurrentTime","{lq_tmp$x##1050 : (GHC.Types.IO Data.Time.Clock.Internal.UTCTime.UTCTime)^\"lq_tmp$x##41\" | lq_tmp$x##1050 == Data.Time.Clock.POSIX.getCurrentTime}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":50,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Data.Time.Format.Locale.defaultTimeLocale","{lq_tmp$x##994 : Data.Time.Format.Locale.TimeLocale^\"lq_tmp$x##55\" | lq_tmp$x##994 == Data.Time.Format.Locale.defaultTimeLocale}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":19,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.getCurrentTimeText","(GHC.Types.IO [GHC.Types.Char])"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":61,"startCol":51,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.dateFormat","{lq_tmp$x##998 : [{lq_tmp$x##995 : GHC.Types.Char^\"lq_tmp$x##774\" | $k_##773[VV##772:=lq_tmp$x##995][VV##779:=lq_tmp$x##998]}]<\\lq_tmp$x##999 VV -> {lq_tmp$x##997 : GHC.Types.Char^\"lq_tmp$x##778\" | $k_##777[VV##776:=lq_tmp$x##997][VV##779:=lq_tmp$x##998][lq_tmp$x##775:=lq_tmp$x##999][lq_tmp$x##996:=lq_tmp$x##999]}>^\"lq_tmp$x##781\" | $k_##780[VV##779:=lq_tmp$x##998]\n                                                                                                                                                                                                                                                                                                                                               && len lq_tmp$x##998 >= 0\n                                                                                                                                                                                                                                                                                                                                               && lq_tmp$x##998 == Date.dateFormat}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":9,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.readDate","lq_tmp$x##840:Data.Text.Internal.Text -> (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":80,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["GHC.Base.$fFunctorIO","{lq_tmp$x##1040 : (GHC.Base.Functor GHC.Types.IO) | lq_tmp$x##1040 == GHC.Base.$fFunctorIO}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":58,"startCol":48,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Date.dateFormat","{lq_tmp$x##887 : [{lq_tmp$x##884 : GHC.Types.Char^\"lq_tmp$x##774\" | $k_##773[VV##772:=lq_tmp$x##884][VV##779:=lq_tmp$x##887]}]<\\lq_tmp$x##888 VV -> {lq_tmp$x##886 : GHC.Types.Char^\"lq_tmp$x##778\" | $k_##777[VV##776:=lq_tmp$x##886][VV##779:=lq_tmp$x##887][lq_tmp$x##775:=lq_tmp$x##888][lq_tmp$x##885:=lq_tmp$x##888]}>^\"lq_tmp$x##781\" | $k_##780[VV##779:=lq_tmp$x##887]\n                                                                                                                                                                                                                                                                                                                                               && len lq_tmp$x##887 >= 0\n                                                                                                                                                                                                                                                                                                                                               && lq_tmp$x##887 == Date.dateFormat}"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":64,"startCol":53,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["lq_anf$##7205759403792801946","{lq_tmp$x##1062 : [GHC.Types.Char] | lq_tmp$x##1062 ~~ lq_anf$##7205759403792801945##d2aB\n                                     && len lq_tmp$x##1062 == strLen lq_anf$##7205759403792801945##d2aB}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":58,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["lq_anf$##7205759403792801943","lq_tmp$x##871:[GHC.Types.Char] -> (GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":52,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Date.hs"},"realSpan":true},[["Data.Time.Format.Locale.defaultTimeLocale","{lq_tmp$x##1095 : Data.Time.Format.Locale.TimeLocale^\"lq_tmp$x##55\" | lq_tmp$x##1095 == Data.Time.Format.Locale.defaultTimeLocale}"]]]],"o_bots":[],"o_result":{"tag":"Safe"}}