{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":115,"endLine":115,"endCol":19,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Time.Clock.Internal.UTCTime.utctDay","Data.Time.Clock.Internal.UTCTime.UTCTime -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":73,"startCol":72,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824671","{v : GHC.Types.Double | v == 2.0}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":58,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824643","Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":49,"startCol":37,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824550","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":63,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824629","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":151,"endLine":151,"endCol":44,"startCol":37,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["entries","{v : [Main.Entry] | len v >= 0\n                    && v == entries}"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":9,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.entryDay","Main.Entry -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":134,"endLine":134,"endCol":13,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.displayLastN","GHC.Types.Int -> [Main.Entry] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":40,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824533","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":67,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$","forall a b c . (c -> c) -> c -> c"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":48,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824586","(GHC.Base.Semigroup [GHC.Types.Char])"]]],[{"spanInfo":{"startLine":147,"endLine":147,"endCol":19,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["entries","[Main.Entry]"]]],[{"spanInfo":{"startLine":131,"endLine":131,"endCol":38,"startCol":31,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","{v : [GHC.Types.Char] | len v >= 0\n                        && v == heading}"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":39,"startCol":19,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824706","[Turtle.Line.Line] -> [Main.Entry]"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":33,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["path","{v : Filesystem.Path.Internal.FilePath | v == path}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":24,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824531","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":39,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824687","[GHC.Types.Char] -> (GHC.Maybe.Maybe GHC.Types.Double)"]]],[{"spanInfo":{"startLine":151,"endLine":151,"endCol":52,"startCol":45,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["allDays","{v : [Data.Time.Calendar.Days.Day] | len v > 0\n                                     && len v >= 0\n                                     && v == allDays}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":67,"startCol":65,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["ds","{v : [GHC.Types.Double] | len v > 0\n                          && len v >= 0\n                          && v == ds}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":11,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["ds","{ds : [GHC.Types.Double] | len ds > 0}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":22,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.displayMovingAverages","{weeks : GHC.Types.Int | weeks > 0} -> [(Data.Time.Calendar.Days.Day, Main.Weight)] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":96,"endLine":96,"endCol":31,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824524","GHC.Types.Double"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":72,"startCol":55,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824698","(GHC.Maybe.Maybe Main.Weight)"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":28,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["weeks","{weeks : GHC.Types.Int | weeks > 0}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":65,"startCol":53,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824552","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":29,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["showSavedWeight","Main.Weight -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":69,"startCol":60,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824670","GHC.Types.Double"]]],[{"spanInfo":{"startLine":241,"endLine":241,"endCol":28,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824702","Main.Entry -> (Turtle.Shell.Shell Main.Entry)"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":37,"startCol":31,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Text.pack","x1:[GHC.Types.Char] -> {v : Data.Text.Internal.Text | tlen v == len x1}"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":28,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Turtle.Line.unsafeTextToLine","Data.Text.Internal.Text -> Turtle.Line.Line"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":18,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["w","Main.Weight"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":29,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.Weight","GHC.Types.Double -> Main.Weight"]]],[{"spanInfo":{"startLine":55,"endLine":55,"endCol":35,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["savedWeights","{v : [Main.Entry] | len v >= 0\n                    && v == savedWeights}"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":17,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windowSize","{v : GHC.Types.Int | v == week * n}"]]],[{"spanInfo":{"startLine":130,"endLine":130,"endCol":19,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","{v : [GHC.Types.Char] | len v >= 0\n                        && v == heading}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":44,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Bool> .\nx1:a -> x2:{VV : b<p2 x1> | true} -> {v : (a, b)<\\x5 VV -> {VV : b<p2 x5> | true}> | x_Tuple22 v == x2\n                                                                                     && x_Tuple21 v == x1\n                                                                                     && snd v == x2\n                                                                                     && fst v == x1}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":57,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824667","GHC.Types.Double -> (GHC.Maybe.Maybe (Data.Time.Calendar.Days.Day, Main.Weight))"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":86,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(Options.Applicative.Types.Parser (GHC.Maybe.Maybe GHC.Types.Double))"]]],[{"spanInfo":{"startLine":120,"endLine":121,"endCol":54,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.List.filter","forall a .\n(a -> GHC.Types.Bool) -> x3:[a] -> {v : [a] | len v <= len x3}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":88,"startCol":70,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["allDaysWithWeights","{v : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len v >= 0\n                                                    && v == allDaysWithWeights}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":25,"startCol":24,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824602","GHC.Types.Int"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":73,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$","forall a b c . (c -> c) -> c -> c"]]],[{"spanInfo":{"startLine":150,"endLine":150,"endCol":60,"startCol":49,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["latestEntry","{v : Main.Entry | v == latestEntry}"]]],[{"spanInfo":{"startLine":110,"endLine":110,"endCol":46,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824561","(GHC.Base.Semigroup [GHC.Types.Char])"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":23,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","[Main.Entry]"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":53,"startCol":19,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824572","Main.Entry -> GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":57,"startCol":51,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.Weight","GHC.Types.Double -> Main.Weight"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":40,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824534","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":26,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["window","{VV : [(a, Main.Weight)] | (not (n >= 0) => len VV == 0)\n                           && len VV >= 0}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":54,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Float.$fFractionalDouble","{v : (GHC.Real.Fractional GHC.Types.Double) | v == $fFractionalDouble}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":46,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["window","{v : [(a, Main.Weight)] | (not (n >= 0) => len v == 0)\n                          && len v >= 0\n                          && v == window}"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":50,"startCol":46,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["date","{v : Data.Text.Internal.Text | tlen v == stringlen v\n                               && 0 <= tlen v\n                               && v == date}"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":24,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["week","{v : GHC.Types.Int | v == week}"]]],[{"spanInfo":{"startLine":223,"endLine":223,"endCol":11,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["week","GHC.Types.Int"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":89,"startCol":45,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824720","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":39,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.lineToEntry","Turtle.Line.Line -> (GHC.Maybe.Maybe Main.Entry)"]]],[{"spanInfo":{"startLine":246,"endLine":246,"endCol":12,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.lineToEntry","Turtle.Line.Line -> (GHC.Maybe.Maybe Main.Entry)"]]],[{"spanInfo":{"startLine":148,"endLine":154,"endCol":51,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Maybe.catMaybes","forall a . [(GHC.Maybe.Maybe a)] -> [a]"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":34,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","{v : GHC.Types.Int | v == n}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":26,"startCol":25,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["l","{v : Turtle.Line.Line | v == l}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":26,"startCol":24,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","[Main.Entry]"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":53,"startCol":34,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824571","Main.Entry -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":152,"endLine":152,"endCol":51,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{v : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len v == len filledDays}"]]],[{"spanInfo":{"startLine":126,"endLine":126,"endCol":40,"startCol":24,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.prettyPrintEntry","Main.Entry -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":25,"startCol":18,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","{v : [GHC.Types.Char] | len v >= 0\n                        && v == heading}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":47,"startCol":34,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824609","{v : (a, Main.Weight) | v == head window}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":45,"startCol":41,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824595","GHC.Types.Double"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":58,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{v : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len v == len filledDays}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":47,"startCol":43,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824636","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":13,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["leftFolder","(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) -> (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) -> (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":43,"startCol":42,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["w","{v : (GHC.Maybe.Maybe Main.Weight) | v == w}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":8,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["today","Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":40,"startCol":39,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d","{v : Data.Time.Calendar.Days.Day | v == d}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":25,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["filename","{v : Filesystem.Path.Internal.FilePath | v == filename}"]]],[{"spanInfo":{"startLine":137,"endLine":137,"endCol":28,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","{v : [GHC.Types.Char] | len v >= 0\n                        && v == heading}"]]],[{"spanInfo":{"startLine":148,"endLine":148,"endCol":63,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"Main.Entry"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":62,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824704","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":16,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.createEntryLine","Main.Weight -> (GHC.Types.IO Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":9,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["zipper","(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) -> (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) -> (GHC.Maybe.Maybe (Data.Time.Calendar.Days.Day, Main.Weight))"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":64,"startCol":56,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["filename","{v : Filesystem.Path.Internal.FilePath | v == filename}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":105,"startCol":68,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824616","GHC.Types.Double"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":43,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824716","GHC.Types.Int"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":92,"startCol":36,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824556","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":207,"endLine":207,"endCol":34,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824630","[(Data.Time.Calendar.Days.Day, Data.Time.Calendar.Days.Day, GHC.Types.Double)]"]]],[{"spanInfo":{"startLine":162,"endLine":165,"endCol":73,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824661","{v : GHC.Prim.Addr# | v == \"/Users/matt/dev/haskell/weight-tracker/src/Main.hs:(162,3)-(165,72)|function zipper\"}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":60,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824639","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":27,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824686","(GHC.Maybe.Maybe GHC.Types.Double) -> (GHC.Maybe.Maybe Main.Weight)"]]],[{"spanInfo":{"startLine":222,"endLine":222,"endCol":17,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","{n : GHC.Types.Int | n > 0}"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":50,"startCol":41,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["rightFold","{v : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len v == len filledDays\n                                                                      && len v >= 0\n                                                                      && v == rightFold}"]]],[{"spanInfo":{"startLine":240,"endLine":240,"endCol":24,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.lineToEntry","Turtle.Line.Line -> (GHC.Maybe.Maybe Main.Entry)"]]],[{"spanInfo":{"startLine":207,"endLine":207,"endCol":33,"startCol":31,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{v : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len v >= 0\n                                                    && v == es}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":48,"startCol":42,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{v : (Data.Time.Calendar.Days.Day, Main.Weight) | x_Tuple21 v == d1\n                                                  && fst v == d1}"]]],[{"spanInfo":{"startLine":207,"endLine":208,"endCol":61,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824631","(Data.Time.Calendar.Days.Day, Data.Time.Calendar.Days.Day, GHC.Types.Double)"]]],[{"spanInfo":{"startLine":233,"endLine":233,"endCol":21,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["earliest","Main.Entry"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":92,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824557","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":158,"endLine":159,"endCol":44,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824680","{v : GHC.Prim.Addr# | v == \"/Users/matt/dev/haskell/weight-tracker/src/Main.hs:(158,3)-(159,43)|function leftFolder\"}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":65,"startCol":59,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["window","{v : [(a, Main.Weight)] | (not (n >= 0) => len v == 0)\n                          && len v >= 0\n                          && v == window}"]]],[{"spanInfo":{"startLine":110,"endLine":110,"endCol":28,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824562","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":42,"startCol":37,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["weeks","{v : GHC.Types.Int | v > 0\n                     && v == weeks}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":24,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["w","Main.Weight"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":105,"startCol":96,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.blankLine","{v : (GHC.Types.IO ()) | v == blankLine}"]]],[{"spanInfo":{"startLine":151,"endLine":151,"endCol":17,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["filledDays","{v : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len v == len allDays}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":28,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d","{v : Data.Time.Calendar.Days.Day | v == d}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":10,"startCol":8,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d1","{v : Data.Time.Calendar.Days.Day | v == d1}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":25,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824603","GHC.Types.Double -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":207,"endLine":208,"endCol":61,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824641","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":73,"startCol":5,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824663","{v : GHC.Types.Bool | v <=> d1 /= d2}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":11,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.fromWeight","Main.Weight -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":31,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.entryDate","Main.Entry -> Data.Time.Clock.Internal.UTCTime.UTCTime"]]],[{"spanInfo":{"startLine":120,"endLine":120,"endCol":20,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["day","Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":228,"endLine":228,"endCol":30,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windows","{v : [[(Data.Time.Calendar.Days.Day, Main.Weight)]] | len v >= 0\n                                                      && v == windows}"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":21,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a b . (a -> b) -> (GHC.Maybe.Maybe a) -> (GHC.Maybe.Maybe b)"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":55,"startCol":44,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824604","{v : GHC.Types.Int | v >= 0\n                     && v == len ds}"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":44,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["last8Days","{v : [Main.Entry] | len v >= 0\n                    && v == last8Days}"]]],[{"spanInfo":{"startLine":137,"endLine":137,"endCol":34,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lastN","{v : [Main.Entry] | (not (n >= 0) => len v == 0)\n                    && len v >= 0\n                    && v == lastN}"]]],[{"spanInfo":{"startLine":247,"endLine":250,"endCol":34,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824695","{v : [Data.Text.Internal.Text] | len v >= 0}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":43,"startCol":41,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824594","{v : GHC.Types.Double | v == 10.0}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":86,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824518","(Options.Applicative.Types.Parser GHC.Types.Double)"]]],[{"spanInfo":{"startLine":110,"endLine":110,"endCol":46,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824567","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":72,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fApplicativeMaybe","{v : (GHC.Base.Applicative GHC.Maybe.Maybe) | v == $fApplicativeMaybe}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":10,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["tup","[(GHC.Types.Int, Main.Weight)]"]]],[{"spanInfo":{"startLine":224,"endLine":224,"endCol":30,"startCol":26,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int | v == week}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":45,"startCol":34,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["maybeWeight","{v : (GHC.Maybe.Maybe Main.Weight) | v == maybeWeight}"]]],[{"spanInfo":{"startLine":126,"endLine":126,"endCol":21,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["System.IO.putStrLn","[GHC.Types.Char] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":241,"endLine":241,"endCol":14,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a . (Turtle.Shell.Shell a)"]]],[{"spanInfo":{"startLine":96,"endLine":96,"endCol":11,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.showWeight","Main.Weight -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":62,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824608","[GHC.Types.Double] -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":148,"endLine":148,"endCol":54,"startCol":46,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.entryDay","Main.Entry -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":37,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824527","[GHC.Types.Char] -> (GHC.Types.IO Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":234,"endLine":234,"endCol":49,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":131,"endLine":131,"endCol":43,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824576","{v : GHC.Types.Char | v == (lit \"61\" Char)}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":5,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[":Main.main","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":42,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windowSize","{v : GHC.Types.Int | v == week * n\n                     && v == windowSize}"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":48,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824592","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":38,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(GHC.Types.IO Data.Time.Calendar.Days.Day)"]]],[{"spanInfo":{"startLine":150,"endLine":150,"endCol":14,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["allDays","{v : [Data.Time.Calendar.Days.Day] | len v > 0}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":31,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","[(Data.Time.Calendar.Days.Day, Main.Weight)]"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":27,"startCol":18,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{v : (GHC.Types.IO (GHC.Maybe.Maybe Main.Weight)) | v == parseArgs}"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":28,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int | v == week * n}"]]],[{"spanInfo":{"startLine":55,"endLine":55,"endCol":35,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824710","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":50,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824688","Data.Text.Internal.Text -> (GHC.Maybe.Maybe GHC.Types.Double)"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":50,"startCol":44,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["parser","{v : (Options.Applicative.Types.Parser (GHC.Maybe.Maybe Main.Weight)) | v == parser}"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":14,"startCol":10,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a b .\n(a -> b) -> (Options.Applicative.Types.Parser a) -> (Options.Applicative.Types.Parser b)"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":104,"startCol":98,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["window","{v : [(a, Main.Weight)] | (not (n >= 0) => len v == 0)\n                          && len v >= 0\n                          && v == window}"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":10,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.blankLine","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":51,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824685","{v : [(GHC.Maybe.Maybe (Data.Time.Calendar.Days.Day, Main.Weight))] | len v <= len leftFold\n                                                                      && len v <= len rightFold}"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":45,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.displayEntries","[GHC.Types.Char] -> [Main.Entry] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":34,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824590","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":62,"startCol":46,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824626","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":52,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824546","(GHC.Maybe.Maybe (GHC.Types.IO ()))"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":46,"startCol":36,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824596","GHC.Types.Double"]]],[{"spanInfo":{"startLine":126,"endLine":126,"endCol":41,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824581","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":56,"startCol":55,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["e","{v : Main.Entry | v == e}"]]],[{"spanInfo":{"startLine":233,"endLine":233,"endCol":12,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.fillEntries","Main.Entry -> Main.Entry -> {ds : [Data.Time.Calendar.Days.Day] | len ds > 0}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":21,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["orig","{v : (Turtle.Shell.Shell Turtle.Line.Line) | v == orig}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":31,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["day","{v : Data.Time.Calendar.Days.Day | v == day}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":58,"startCol":26,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Bool> .\nx1:a -> x2:{VV : b<p2 x1> | true} -> {v : (a, b)<\\x5 VV -> {VV : b<p2 x5> | true}> | x_Tuple22 v == x2\n                                                                                     && x_Tuple21 v == x1\n                                                                                     && snd v == x2\n                                                                                     && fst v == x1}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":12,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.blankLine","{v : (GHC.Types.IO ()) | v == blankLine}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":39,"startCol":15,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824633","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":31,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base..","forall a\n       b\n       c <r :: c b -> Bool, q :: c c -> Bool, p :: c b -> Bool> .\n{xcmp :: c, wcmp :: {VV : c<q xcmp> | true} |- {VV : b<p wcmp> | true} <: {VV : b<r xcmp> | true}} =>\n(ycmp:c -> {VV : b<p ycmp> | true}) -> (zcmp:c -> {VV : c<q zcmp> | true}) -> xcmp:c -> {VV : b<r xcmp> | true}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":34,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824711","{v : GHC.Types.Int | v >= 0\n                     && v == len allDaysWithWeights}"]]],[{"spanInfo":{"startLine":149,"endLine":149,"endCol":18,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["latestEntry","Main.Entry"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":59,"startCol":43,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824638","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":131,"endLine":131,"endCol":44,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824578","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":105,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{v : (GHC.Base.Monad GHC.Types.IO) | v == $fMonadIO}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":20,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.displayFromLastWeek","[Main.Entry] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":149,"endLine":149,"endCol":63,"startCol":56,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["entries","{v : [Main.Entry] | len v >= 0\n                    && v == entries}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":63,"startCol":25,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824618","[[(Data.Time.Calendar.Days.Day, Main.Weight)]]"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":73,"startCol":72,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["e","{v : Main.Entry | v == e}"]]],[{"spanInfo":{"startLine":110,"endLine":110,"endCol":36,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824565","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":25,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["allDaysWithWeights","[(Data.Time.Calendar.Days.Day, Main.Weight)]"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":69,"startCol":68,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824719","GHC.Types.Int"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":66,"startCol":49,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824612","a"]]],[{"spanInfo":{"startLine":126,"endLine":126,"endCol":11,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{v : [Main.Entry] | len v >= 0\n                    && v == es}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":75,"startCol":18,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Bool> .\nx1:a -> x2:{VV : b<p2 x1> | true} -> {v : (a, b)<\\x5 VV -> {VV : b<p2 x5> | true}> | x_Tuple22 v == x2\n                                                                                     && x_Tuple21 v == x1\n                                                                                     && snd v == x2\n                                                                                     && fst v == x1}"]]],[{"spanInfo":{"startLine":110,"endLine":110,"endCol":28,"startCol":24,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["time","{v : Data.Time.Clock.Internal.UTCTime.UTCTime | v == time}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":47,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824610","a"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":40,"startCol":39,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["w","{v : Main.Weight | v == w}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":43,"startCol":42,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824715","GHC.Types.Int"]]],[{"spanInfo":{"startLine":148,"endLine":148,"endCol":55,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824683","Main.Entry -> Main.Entry -> GHC.Types.Ordering"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":50,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Control.Monad.IO.Class.$fMonadIOIO","{v : (Control.Monad.IO.Class.MonadIO GHC.Types.IO) | v == $fMonadIOIO}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":52,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824647","GHC.Types.Int"]]],[{"spanInfo":{"startLine":151,"endLine":151,"endCol":52,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{v : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len v == len allDays}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":17,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.prettyPrintEntry","Main.Entry -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":39,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824675","{v : (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) | v == a}"]]],[{"spanInfo":{"startLine":246,"endLine":246,"endCol":14,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["l","Turtle.Line.Line"]]],[{"spanInfo":{"startLine":150,"endLine":150,"endCol":48,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["earliestEntry","{v : Main.Entry | v == earliestEntry}"]]],[{"spanInfo":{"startLine":67,"endLine":67,"endCol":17,"startCol":15,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["fp","Filesystem.Path.Internal.FilePath"]]],[{"spanInfo":{"startLine":233,"endLine":233,"endCol":28,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["latest","Main.Entry"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":58,"startCol":48,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["filledDays","{v : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len v == len allDays\n                                                                      && len v >= 0\n                                                                      && v == filledDays}"]]],[{"spanInfo":{"startLine":195,"endLine":195,"endCol":35,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["ds","{v : [Data.Time.Calendar.Days.Day] | len v >= 0\n                                     && v == ds}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":51,"startCol":50,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d","{v : Data.Time.Calendar.Days.Day | v == d}"]]],[{"spanInfo":{"startLine":180,"endLine":180,"endCol":22,"startCol":19,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["tup","{v : [(GHC.Types.Int, Main.Weight)] | len v >= 0\n                                      && v == tup}"]]],[{"spanInfo":{"startLine":239,"endLine":239,"endCol":15,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.linesToEntries","(Turtle.Shell.Shell Turtle.Line.Line) -> (Turtle.Shell.Shell Main.Entry)"]]],[{"spanInfo":{"startLine":178,"endLine":180,"endCol":22,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Hashable.Class.$fHashableInt","{v : (Data.Hashable.Class.Hashable GHC.Types.Int) | v == $fHashableInt}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":43,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824523","Turtle.Options.Description"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":57,"startCol":26,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824536","(Turtle.Shell.Shell Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":16,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["dayWithWeight","(Data.HashMap.Base.HashMap GHC.Types.Int Main.Weight) -> Data.Time.Calendar.Days.Day -> (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))"]]],[{"spanInfo":{"startLine":248,"endLine":248,"endCol":25,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824691","Data.Text.Internal.Text"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":39,"startCol":36,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["end","{v : Data.Time.Calendar.Days.Day | v == end}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":23,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824579","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":195,"endLine":195,"endCol":28,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["entryMap","{v : (Data.HashMap.Base.HashMap GHC.Types.Int Main.Weight) | v == entryMap}"]]],[{"spanInfo":{"startLine":150,"endLine":150,"endCol":60,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{v : [Data.Time.Calendar.Days.Day] | len v > 0}"]]],[{"spanInfo":{"startLine":235,"endLine":235,"endCol":47,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824650","Data.Time.Clock.Internal.UTCTime.UTCTime"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":23,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":24,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824511","{v : [GHC.Types.Char] | len v == 0}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":27,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(Turtle.Shell.Shell Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":126,"endLine":126,"endCol":41,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824580","Main.Entry -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":26,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"Data.Text.Internal.Text"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":87,"startCol":77,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.fromWeight","Main.Weight -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":48,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824593","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":15,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["savedWeights","[Main.Entry]"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":16,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["rightFold","{v : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len v == len filledDays}"]]],[{"spanInfo":{"startLine":194,"endLine":195,"endCol":35,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fFunctor[]","{v : (GHC.Base.Functor []) | v == $fFunctor[]}"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":42,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824624","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":109,"endLine":110,"endCol":46,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824560","Main.Entry"]]],[{"spanInfo":{"startLine":240,"endLine":240,"endCol":35,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(Turtle.Shell.Shell (GHC.Maybe.Maybe Main.Entry))"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":40,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824540","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":74,"endLine":78,"endCol":33,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{v : (GHC.Base.Monad GHC.Types.IO) | v == $fMonadIO}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":57,"startCol":53,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["dMap","{v : (Data.HashMap.Base.HashMap GHC.Types.Int Main.Weight) | v == dMap}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":17,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["now","{v : [GHC.Types.Char] | len v >= 0\n                        && v == now}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":21,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["dMap","(Data.HashMap.Base.HashMap GHC.Types.Int Main.Weight)"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":15,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["entryMap","(Data.HashMap.Base.HashMap GHC.Types.Int Main.Weight)"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":43,"startCol":41,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{v : [Main.Entry] | len v >= 0\n                    && v == es}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":46,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":47,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["parserMaybeDouble","{v : (Options.Applicative.Types.Parser (GHC.Maybe.Maybe GHC.Types.Double)) | v == parserMaybeDouble}"]]],[{"spanInfo":{"startLine":136,"endLine":136,"endCol":33,"startCol":31,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{v : [Main.Entry] | len v >= 0\n                    && v == es}"]]],[{"spanInfo":{"startLine":228,"endLine":228,"endCol":18,"startCol":6,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a .\n{v : [(a, Main.Weight)] | (not (n >= 0) => len v == 0)\n                          && len v >= 0} -> (a, a, GHC.Types.Double)"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":24,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824588","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":25,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824705","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":59,"startCol":43,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windowEveryNDays","{v : GHC.Types.Int | v == week\n                     && v == windowEveryNDays}"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":76,"startCol":66,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a . (Control.Foldl.Fold a [a])"]]],[{"spanInfo":{"startLine":134,"endLine":134,"endCol":18,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","[Main.Entry]"]]],[{"spanInfo":{"startLine":240,"endLine":240,"endCol":35,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["sLines","{v : (Turtle.Shell.Shell Turtle.Line.Line) | v == sLines}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":47,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824598","GHC.Types.Double"]]],[{"spanInfo":{"startLine":130,"endLine":130,"endCol":19,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824574","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":93,"startCol":90,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a b . x1:(a, b) -> {VV : b | VV == snd x1}"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":28,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","{v : GHC.Types.Int | v > 0\n                     && v == n}"]]],[{"spanInfo":{"startLine":235,"endLine":235,"endCol":14,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lastDay","Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":12,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.blankLine","{v : (GHC.Types.IO ()) | v == blankLine}"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":9,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a . a -> (GHC.Types.IO a)"]]],[{"spanInfo":{"startLine":222,"endLine":222,"endCol":20,"startCol":18,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{ts : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len ts >= n * 7}"]]],[{"spanInfo":{"startLine":120,"endLine":120,"endCol":14,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.fromLastNDays","GHC.Integer.Type.Integer -> Data.Time.Calendar.Days.Day -> [Main.Entry] -> [Main.Entry]"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":40,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["today","{v : Data.Time.Calendar.Days.Day | v == today}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":51,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"[(Data.Time.Calendar.Days.Day, Main.Weight)]"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":54,"startCol":10,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824573","Main.Entry -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":34,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824583","{v : GHC.Integer.Type.Integer | v == 8}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":14,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windows","[[(Data.Time.Calendar.Days.Day, Main.Weight)]]"]]],[{"spanInfo":{"startLine":149,"endLine":149,"endCol":54,"startCol":46,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.entryDay","Main.Entry -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":12,"startCol":11,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["i","GHC.Types.Int"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":14,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":120,"endLine":120,"endCol":16,"startCol":15,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":148,"endLine":148,"endCol":20,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["earliestEntry","Main.Entry"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":28,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824622","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":36,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(Data.HashMap.Base.HashMap GHC.Types.Int Main.Weight)"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":16,"startCol":8,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824662","{v : GHC.Types.Bool | v <=> d1 /= d2}"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":19,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Time.Clock.Internal.UTCTime.utctDay","Data.Time.Clock.Internal.UTCTime.UTCTime -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":38,"startCol":24,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Time.Clock.POSIX.getCurrentTime","{v : (GHC.Types.IO Data.Time.Clock.Internal.UTCTime.UTCTime) | v == getCurrentTime}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":11,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["text","Data.Text.Internal.Text"]]],[{"spanInfo":{"startLine":235,"endLine":235,"endCol":46,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["latest","{v : Main.Entry | v == latest}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":50,"startCol":42,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Text.Show.unpack","x1:Data.Text.Internal.Text -> {v : [GHC.Types.Char] | len v == tlen x1}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":27,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.Weight","GHC.Types.Double -> Main.Weight"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":37,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824526","[GHC.Types.Char] -> Turtle.Line.Line"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":17,"startCol":15,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","[Main.Entry]"]]],[{"spanInfo":{"startLine":250,"endLine":250,"endCol":34,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a . {v : (GHC.Maybe.Maybe a) | isJust v <=> false}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":45,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a . {v : (GHC.Maybe.Maybe a) | isJust v <=> false}"]]],[{"spanInfo":{"startLine":131,"endLine":131,"endCol":39,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824575","{v : GHC.Types.Int | v >= 0\n                     && v == len heading}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":57,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824648","(GHC.Maybe.Maybe Main.Weight)"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":57,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(Turtle.Shell.Shell Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":46,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824558","(GHC.Maybe.Maybe (GHC.Types.IO ()))"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":57,"startCol":42,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824666","GHC.Types.Double -> (Data.Time.Calendar.Days.Day, Main.Weight)"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":43,"startCol":19,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"[Main.Entry]"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":105,"startCol":76,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824615","[GHC.Types.Double]"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":76,"startCol":44,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824709","(GHC.Types.IO [Turtle.Line.Line])"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":106,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Tuple.(,,)","forall a b c <p3 :: b-> a c -> Bool, p2 :: a b -> Bool> .\nx1:a -> x2:{VV : b<p2 x1> | true} -> x3:{VV : c<p3 x2 x1> | true} -> {v : (a, b, c)<\\x8 VV -> {VV : b<p2 x8> | true}, \\x8 x8 VV -> {VV : c<p3 x8 x8> | true}> | x_Tuple33 v == x3\n                                                                                                                                                                && x_Tuple32 v == x2\n                                                                                                                                                                && x_Tuple31 v == x1}"]]],[{"spanInfo":{"startLine":124,"endLine":126,"endCol":41,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{v : (GHC.Base.Monad GHC.Types.IO) | v == $fMonadIO}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":91,"startCol":69,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824554","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":54,"startCol":52,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["ds","{v : [GHC.Types.Double] | len v > 0\n                          && len v >= 0\n                          && v == ds}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":55,"startCol":31,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"GHC.Types.Double"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":19,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.updateSavedWeights","Filesystem.Path.Internal.FilePath -> Main.Weight -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":66,"startCol":53,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824611","(a, Main.Weight)"]]],[{"spanInfo":{"startLine":223,"endLine":223,"endCol":15,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824617","{v : GHC.Prim.Int# | v == 7}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":57,"startCol":44,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824642","Data.Time.Clock.Internal.UTCTime.UTCTime"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":29,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a . {v : (GHC.Maybe.Maybe a) | isJust v <=> false}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":73,"startCol":60,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824645","Main.Weight"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":62,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824607","[GHC.Types.Double] -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":91,"startCol":53,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824555","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":17,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["filename","Filesystem.Path.Internal.FilePath"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":57,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824535","(GHC.Types.IO Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":41,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824514","Turtle.Options.ArgName"]]],[{"spanInfo":{"startLine":67,"endLine":71,"endCol":46,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824559","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":222,"endLine":222,"endCol":15,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.movingAverages","x1:{n : GHC.Types.Int | n > 0} -> {ts : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len ts >= x1 * 7} -> [(Data.Time.Calendar.Days.Day, Data.Time.Calendar.Days.Day, GHC.Types.Double)]"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":9,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["parser","(Options.Applicative.Types.Parser (GHC.Maybe.Maybe Main.Weight))"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":10,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.parseArgs","(GHC.Types.IO (GHC.Maybe.Maybe Main.Weight))"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":24,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["path","Filesystem.Path.Internal.FilePath"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":51,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["maybeWeight","{v : (GHC.Maybe.Maybe Main.Weight) | v == maybeWeight}"]]],[{"spanInfo":{"startLine":67,"endLine":67,"endCol":14,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.saveWeightArg","Filesystem.Path.Internal.FilePath -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":76,"startCol":19,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(GHC.Types.IO [Main.Entry])"]]],[{"spanInfo":{"startLine":236,"endLine":236,"endCol":29,"startCol":18,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["earliestDay","{v : Data.Time.Calendar.Days.Day | v == earliestDay}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":8,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.average","{ds : [GHC.Types.Double] | len ds > 0} -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":32,"startCol":10,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824539","Filesystem.Path.Internal.FilePath"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":44,"startCol":8,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824717","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":136,"endLine":136,"endCol":34,"startCol":15,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{v : [Main.Entry] | not (n >= 0) => len v == 0}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":40,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824532","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":31,"startCol":19,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824570","Data.Time.Calendar.Days.Day -> GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":85,"startCol":42,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824517","(Data.Optional.Optional Turtle.Options.HelpMessage)"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":89,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":14,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["updated","(Turtle.Shell.Shell Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":149,"endLine":149,"endCol":63,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"Main.Entry"]]],[{"spanInfo":{"startLine":205,"endLine":208,"endCol":61,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{v : (GHC.Base.Monad GHC.Types.IO) | v == $fMonadIO}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":20,"startCol":18,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["ds","[Data.Time.Calendar.Days.Day]"]]],[{"spanInfo":{"startLine":222,"endLine":228,"endCol":30,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824619","{v : [(Data.Time.Calendar.Days.Day, Main.Weight)] | (not (n >= 0) => len v == 0)\n                                                    && len v >= 0} -> (Data.Time.Calendar.Days.Day, Data.Time.Calendar.Days.Day, GHC.Types.Double)"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":50,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"Data.Text.Internal.Text -> (GHC.Maybe.Maybe Main.Weight)"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":65,"startCol":64,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["w","{v : Main.Weight | v == w}"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":14,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":32,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.Entry","Data.Time.Clock.Internal.UTCTime.UTCTime -> Main.Weight -> Main.Entry"]]],[{"spanInfo":{"startLine":152,"endLine":152,"endCol":51,"startCol":41,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["filledDays","{v : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len v == len allDays\n                                                                      && len v >= 0\n                                                                      && v == filledDays}"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":62,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824627","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":47,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824597","GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":36,"startCol":34,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{v : [Main.Entry] | len v >= 0\n                    && v == es}"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":47,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824684","(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) -> (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) -> (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))"]]],[{"spanInfo":{"startLine":178,"endLine":178,"endCol":16,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","[Main.Entry]"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":65,"startCol":49,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824707","(Turtle.Shell.Shell Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":234,"endLine":234,"endCol":49,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824651","Data.Time.Clock.Internal.UTCTime.UTCTime"]]],[{"spanInfo":{"startLine":248,"endLine":248,"endCol":30,"startCol":26,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["text","{v : Data.Text.Internal.Text | tlen v == stringlen v\n                               && 0 <= tlen v\n                               && v == text}"]]],[{"spanInfo":{"startLine":178,"endLine":178,"endCol":13,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.dayWeightMap","[Main.Entry] -> (Data.HashMap.Base.HashMap GHC.Types.Int Main.Weight)"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":52,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824547","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":136,"endLine":136,"endCol":34,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824585","{v : [Main.Entry] | len v == len es}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":15,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.displayEntries","[GHC.Types.Char] -> [Main.Entry] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":53,"startCol":44,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.entryDate","Main.Entry -> Data.Time.Clock.Internal.UTCTime.UTCTime"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":51,"startCol":39,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["savedWeights","{v : [Main.Entry] | len v >= 0\n                    && v == savedWeights}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":16,"startCol":11,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"GHC.Types.Bool"]]],[{"spanInfo":{"startLine":110,"endLine":110,"endCol":46,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824568","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":56,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824605","GHC.Types.Double -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":14,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.fillKnownDays","[Main.Entry] -> x2:[Data.Time.Calendar.Days.Day] -> {rs : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len rs == len x2}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":35,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824545","Main.Weight -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":45,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a . {v : (GHC.Maybe.Maybe a) | isJust v <=> false}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":15,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","{v : GHC.Integer.Type.Integer | v == n}"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":28,"startCol":6,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824543","Filesystem.Path.Internal.FilePath"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":45,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824582","{v : GHC.Prim.Addr# | v == \"Entries from the past week\"}"]]],[{"spanInfo":{"startLine":82,"endLine":82,"endCol":28,"startCol":10,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{v : (GHC.Types.IO [GHC.Types.Char]) | v == getCurrentTimeText}"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":50,"startCol":37,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824696","(GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":54,"startCol":50,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824600","GHC.Types.Double"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":73,"startCol":60,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824672","GHC.Types.Double"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":62,"startCol":60,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{v : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len v >= n * 7\n                                                    && len v >= 0\n                                                    && v == es}"]]],[{"spanInfo":{"startLine":240,"endLine":240,"endCol":9,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["mEntry","(GHC.Maybe.Maybe Main.Entry)"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":16,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["last8Days","[Main.Entry]"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":13,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["readWeight","Data.Text.Internal.Text -> (GHC.Maybe.Maybe Main.Weight)"]]],[{"spanInfo":{"startLine":82,"endLine":82,"endCol":6,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["now","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":34,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["allDaysWithWeights","{v : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len v >= 0\n                                                    && v == allDaysWithWeights}"]]],[{"spanInfo":{"startLine":241,"endLine":241,"endCol":21,"startCol":15,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a . a -> (Turtle.Shell.Shell a)"]]],[{"spanInfo":{"startLine":136,"endLine":136,"endCol":21,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","{v : GHC.Types.Int | v == n}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":19,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windowResult","forall a .\n{VV : [(a, Main.Weight)] | (not (n >= 0) => len VV == 0)\n                           && len VV >= 0} -> (a, a, GHC.Types.Double)"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":22,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["showSavedWeight","Main.Weight -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":11,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["orig","(Turtle.Shell.Shell Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":45,"startCol":44,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["i","{v : GHC.Types.Int | v == i}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":45,"startCol":43,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d1","{v : Data.Time.Calendar.Days.Day | v == d1}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":27,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["path","{v : Filesystem.Path.Internal.FilePath | v == path}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":10,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.precision","GHC.Types.Int -> GHC.Types.Double -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":136,"endLine":136,"endCol":12,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lastN","{v : [Main.Entry] | not (n >= 0) => len v == 0}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":54,"startCol":53,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["i","{v : GHC.Types.Int | v == i}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":78,"startCol":76,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{v : [Main.Entry] | len v >= 0\n                    && v == es}"]]],[{"spanInfo":{"startLine":239,"endLine":239,"endCol":22,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["sLines","(Turtle.Shell.Shell Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":44,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$","forall a b c . (c -> c) -> c -> c"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":63,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824628","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":14,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","GHC.Types.Double"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":93,"startCol":77,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824614","(a, Main.Weight) -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":38,"startCol":37,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","{v : GHC.Types.Double | v == n}"]]],[{"spanInfo":{"startLine":234,"endLine":234,"endCol":18,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["earliestDay","Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":195,"endLine":195,"endCol":28,"startCol":6,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824649","Data.Time.Calendar.Days.Day -> (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":35,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["fp","{v : Filesystem.Path.Internal.FilePath | v == fp}"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":50,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824697","(GHC.Maybe.Maybe Main.Weight -> Main.Entry)"]]],[{"spanInfo":{"startLine":224,"endLine":224,"endCol":23,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windowEveryNDays","{v : GHC.Types.Int | v == week}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":21,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["e","Main.Entry"]]],[{"spanInfo":{"startLine":248,"endLine":248,"endCol":30,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824692","[Data.Text.Internal.Text]"]]],[{"spanInfo":{"startLine":129,"endLine":129,"endCol":21,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":31,"startCol":25,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["zipper","(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) -> (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) -> (GHC.Maybe.Maybe (Data.Time.Calendar.Days.Day, Main.Weight))"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":40,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["leftFold","{v : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len v == len filledDays\n                                                                      && len v >= 0\n                                                                      && v == leftFold}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":41,"startCol":34,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Time.Clock.Internal.UTCTime.utctDay","Data.Time.Clock.Internal.UTCTime.UTCTime -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":152,"endLine":152,"endCol":15,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["leftFold","{v : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len v == len filledDays}"]]],[{"spanInfo":{"startLine":129,"endLine":131,"endCol":44,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{v : (GHC.Base.Monad GHC.Types.IO) | v == $fMonadIO}"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":24,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0}"]]],[{"spanInfo":{"startLine":234,"endLine":234,"endCol":48,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["earliest","{v : Main.Entry | v == earliest}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":56,"startCol":50,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["weight","{v : Main.Weight | v == weight}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":23,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","{v : [GHC.Types.Char] | len v >= 0\n                        && v == heading}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":63,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"[[(Data.Time.Calendar.Days.Day, Main.Weight)]]"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":78,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824646","Main.Entry -> (GHC.Types.Int, Main.Weight)"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":45,"startCol":26,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824584","{v : [Main.Entry] | len v == len last8Days}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":59,"startCol":51,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824637","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":33,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824544","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":26,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["parserMaybeDouble","(Options.Applicative.Types.Parser (GHC.Maybe.Maybe GHC.Types.Double))"]]],[{"spanInfo":{"startLine":152,"endLine":152,"endCol":40,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["leftFolder","(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) -> (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) -> (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":39,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824713","GHC.Types.Int"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":31,"startCol":25,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["weight","Main.Weight"]]],[{"spanInfo":{"startLine":207,"endLine":207,"endCol":30,"startCol":25,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["weeks","{v : GHC.Types.Int | v > 0\n                     && v == weeks}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":52,"startCol":50,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824599","{v : GHC.Types.Double | v == 10.0}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":40,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["updated","{v : (Turtle.Shell.Shell Turtle.Line.Line) | v == updated}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":22,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["a","(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))"]]],[{"spanInfo":{"startLine":233,"endLine":236,"endCol":37,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Time.Calendar.Days.$fEnumDay","{v : (GHC.Enum.Enum Data.Time.Calendar.Days.Day) | v == $fEnumDay}"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":72,"startCol":66,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["weight","{v : Data.Text.Internal.Text | tlen v == stringlen v\n                               && 0 <= tlen v\n                               && v == weight}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":39,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a .\nx1:a -> {v : (GHC.Maybe.Maybe a) | fromJust v == x1\n                                   && (isJust v <=> true)}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":23,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d","Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":59,"startCol":56,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["avg","{v : GHC.Types.Double | v == avg}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":62,"startCol":59,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824606","[GHC.Types.Double] -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":14,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["maybeWeight","(GHC.Maybe.Maybe Main.Weight)"]]],[{"spanInfo":{"startLine":129,"endLine":129,"endCol":13,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.printHeading","[GHC.Types.Char] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":134,"endLine":137,"endCol":34,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.displayEntries","[GHC.Types.Char] -> [Main.Entry] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":241,"endLine":241,"endCol":28,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["mEntry","{v : (GHC.Maybe.Maybe Main.Entry) | v == mEntry}"]]],[{"spanInfo":{"startLine":148,"endLine":148,"endCol":63,"startCol":56,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["entries","{v : [Main.Entry] | len v >= 0\n                    && v == entries}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":60,"startCol":5,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["System.IO.putStrLn","[GHC.Types.Char] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":16,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d2","{v : Data.Time.Calendar.Days.Day | v == d2}"]]],[{"spanInfo":{"startLine":134,"endLine":134,"endCol":15,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":46,"startCol":36,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["leftFolder","(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) -> (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight)) -> (Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))"]]],[{"spanInfo":{"startLine":147,"endLine":147,"endCol":11,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.filledDays","[Main.Entry] -> [(Data.Time.Calendar.Days.Day, Main.Weight)]"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":58,"startCol":26,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824644","GHC.Types.Int"]]],[{"spanInfo":{"startLine":131,"endLine":131,"endCol":44,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824577","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":91,"endLine":93,"endCol":47,"startCol":5,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824520","(GHC.Types.Double -> Main.Weight) -> (GHC.Maybe.Maybe GHC.Types.Double) -> (GHC.Maybe.Maybe Main.Weight)"]]],[{"spanInfo":{"startLine":235,"endLine":235,"endCol":47,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":236,"endLine":236,"endCol":37,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lastDay","{v : Data.Time.Calendar.Days.Day | v == lastDay}"]]],[{"spanInfo":{"startLine":50,"endLine":59,"endCol":89,"startCol":8,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824724","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":149,"endLine":149,"endCol":55,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824682","Main.Entry -> Main.Entry -> GHC.Types.Ordering"]]]],"o_templs":[[{"spanInfo":{"startLine":115,"endLine":115,"endCol":19,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Time.Clock.Internal.UTCTime.utctDay","lq_tmp$x##4856:Data.Time.Clock.Internal.UTCTime.UTCTime -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":73,"startCol":72,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824671","{lq_tmp$x##8345 : GHC.Types.Double | lq_tmp$x##8345 == 2.0}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":58,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824643","Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":49,"startCol":37,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824550","{lq_tmp$x##3844 : [GHC.Types.Char] | lq_tmp$x##3844 ~~ lq_anf$##7205759403792824549##d83b\n                                     && len lq_tmp$x##3844 == strLen lq_anf$##7205759403792824549##d83b}"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":63,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824629","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":151,"endLine":151,"endCol":44,"startCol":37,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["entries","{lq_tmp$x##8969 : [Main.Entry]^\"lq_tmp$x##1303\" | len lq_tmp$x##8969 >= 0\n                                                  && lq_tmp$x##8969 == entries##a64z}"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":9,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.entryDay","lq_tmp$x##4107:Main.Entry -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":134,"endLine":134,"endCol":13,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.displayLastN","lq_tmp$x##4948:GHC.Types.Int -> lq_tmp$x##4949:[Main.Entry] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":40,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824533","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":67,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$","forall r a b .\nlq_tmp$x##5539:(lq_tmp$x##5538:a -> b) -> lq_tmp$x##5540:a -> b"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":48,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824586","(GHC.Base.Semigroup [GHC.Types.Char])"]]],[{"spanInfo":{"startLine":147,"endLine":147,"endCol":19,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["entries","[Main.Entry]"]]],[{"spanInfo":{"startLine":131,"endLine":131,"endCol":38,"startCol":31,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","{lq_tmp$x##4542 : [GHC.Types.Char]^\"lq_tmp$x##1261\" | len lq_tmp$x##4542 >= 0\n                                                      && lq_tmp$x##4542 == heading##a64u}"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":39,"startCol":19,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824706","lq_tmp$x##10231:[{lq_tmp$x##10237 : Turtle.Line.Line^\"lq_tmp$x##10236\" \"lq_tmp$x##678\" | $k_##10235[VV##10234:=lq_tmp$x##10237][lq_tmp$x##10230:=Main.lineToEntry]}] -> [{lq_tmp$x##10241 : Main.Entry^\"lq_tmp$x##10240\" \"lq_tmp$x##681\" | $k_##10239[VV##10238:=lq_tmp$x##10241][lq_tmp$x##10230:=Main.lineToEntry]}]"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":33,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["path","{lq_tmp$x##3686 : Filesystem.Path.Internal.FilePath^\"lq_tmp$x##1230\" | lq_tmp$x##3686 == path##a5yK}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":24,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824531","{lq_tmp$x##3371 : [GHC.Types.Char] | lq_tmp$x##3371 ~~ lq_anf$##7205759403792824530##d82S\n                                     && len lq_tmp$x##3371 == strLen lq_anf$##7205759403792824530##d82S}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":39,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824687","lq_tmp$x##9567:[GHC.Types.Char] -> (GHC.Maybe.Maybe GHC.Types.Double)"]]],[{"spanInfo":{"startLine":151,"endLine":151,"endCol":52,"startCol":45,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["allDays","{lq_tmp$x##8974 : [Data.Time.Calendar.Days.Day] | len lq_tmp$x##8974 > 0\n                                                  && len lq_tmp$x##8974 >= 0\n                                                  && lq_tmp$x##8974 == allDays##a6dp}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":67,"startCol":65,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["ds","{lq_tmp$x##5575 : [GHC.Types.Double] | len lq_tmp$x##5575 > 0\n                                       && len lq_tmp$x##5575 >= 0\n                                       && lq_tmp$x##5575 == ds##a6dv}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":11,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["ds","{ds : [GHC.Types.Double] | len ds > 0}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":22,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.displayMovingAverages","lq_tmp$x##6437:{weeks : GHC.Types.Int | weeks > 0} -> lq_tmp$x##6438:[(Data.Time.Calendar.Days.Day, Main.Weight)] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":96,"endLine":96,"endCol":31,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824524","{VV : GHC.Types.Double^\"lq_tmp$x##3175\" | VV ~~ ds_d81a}"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":72,"startCol":55,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824698","{lq_tmp$x##9969 : (GHC.Maybe.Maybe {lq_tmp$x##9968 : Main.Weight^\"lq_tmp$x##9661\" \"lq_tmp$x##9673\" | $k_##9660[VV##9659:=lq_tmp$x##9968][VV##9662:=lq_tmp$x##9969][VV##9671:=lq_tmp$x##9968][VV##9674:=lq_tmp$x##9969][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q][lq_tmp$x##9665:=lq_tmp$x##9968][lq_tmp$x##9666:=lq_tmp$x##9969][lq_tmp$x##9971:=weight##a6v1][xcmp:=weight##a6v1]\n                                                                                                     && $k_##9672[VV##9671:=lq_tmp$x##9968][VV##9674:=lq_tmp$x##9969][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q][lq_tmp$x##9665:=lq_tmp$x##9968][lq_tmp$x##9666:=lq_tmp$x##9969][lq_tmp$x##9677:=weight##a6v1][lq_tmp$x##9971:=weight##a6v1][xcmp:=weight##a6v1]})^\"lq_tmp$x##9664\" \"lq_tmp$x##9676\" | $k_##9663[VV##9662:=lq_tmp$x##9969][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q][lq_tmp$x##9666:=lq_tmp$x##9969][lq_tmp$x##9971:=weight##a6v1][xcmp:=weight##a6v1]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && $k_##9675[VV##9674:=lq_tmp$x##9969][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q][lq_tmp$x##9666:=lq_tmp$x##9969][lq_tmp$x##9677:=weight##a6v1][lq_tmp$x##9971:=weight##a6v1][xcmp:=weight##a6v1]}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":28,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["weeks","{weeks : GHC.Types.Int | weeks > 0}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":65,"startCol":53,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824552","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":29,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["showSavedWeight","lq_tmp$x##4037:{lq_tmp$x##4033 : Main.Weight^\"lq_tmp$x##3821\" | $k_##3820[VV##3819:=lq_tmp$x##4033]} -> {lq_tmp$x##4035 : (GHC.Types.IO {lq_tmp$x##4034 : ()^\"lq_tmp$x##3825\" | $k_##3824[VV##3823:=lq_tmp$x##4034][VV##3826:=lq_tmp$x##4035][w##a5yJ:=lq_tmp$x##4037]})^\"lq_tmp$x##3828\" | $k_##3827[VV##3826:=lq_tmp$x##4035][w##a5yJ:=lq_tmp$x##4037]}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":69,"startCol":60,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824670","{lq_tmp$x##8338 : GHC.Types.Double^\"lq_tmp$x##8337\" | lq_tmp$x##8338 == lq_anf$##7205759403792824668##d856 + lq_anf$##7205759403792824669##d857}"]]],[{"spanInfo":{"startLine":241,"endLine":241,"endCol":28,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824702","lq_tmp$x##99:{lq_tmp$x##10134 : Main.Entry^\"lq_tmp$x##10133\" \"lq_tmp$x##100\" | $k_##10132[VV##10131:=lq_tmp$x##10134]} -> (Turtle.Shell.Shell {lq_tmp$x##10134 : Main.Entry^\"lq_tmp$x##10133\" \"lq_tmp$x##102\" | $k_##10132[VV##10131:=lq_tmp$x##10134]})"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":37,"startCol":31,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Text.pack","lq_tmp$x##3279:[{lq_tmp$x##3272 : GHC.Types.Char | $HOLE[VV:=lq_tmp$x##3272][str:=lq_tmp$x##3272]}] -> {lq_tmp$x##3276 : Data.Text.Internal.Text | tlen lq_tmp$x##3276 == len lq_tmp$x##3279}"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":28,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Turtle.Line.unsafeTextToLine","lq_tmp$x##3271:Data.Text.Internal.Text -> Turtle.Line.Line"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":18,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["w","Main.Weight"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":29,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.Weight","lq_tmp$x##3101:GHC.Types.Double -> Main.Weight"]]],[{"spanInfo":{"startLine":55,"endLine":55,"endCol":35,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["savedWeights","{lq_tmp$x##10404 : [{lq_tmp$x##10401 : Main.Entry^\"lq_tmp$x##10351\" | $k_##10350[VV##10349:=lq_tmp$x##10401][VV##10356:=lq_tmp$x##10404][lq_tmp$x##10330:=GHC.Base.$fFunctorIO][lq_tmp$x##10331:=lq_anf$##7205759403792824706##d85I][lq_tmp$x##10332:=lq_anf$##7205759403792824709##d85L][lq_tmp$x##10359:=lq_tmp$x##10401][lq_tmp$x##10362:=lq_tmp$x##10404]}]<\\lq_tmp$x##10405 VV -> {lq_tmp$x##10403 : Main.Entry^\"lq_tmp$x##10355\" | $k_##10354[VV##10353:=lq_tmp$x##10403][VV##10356:=lq_tmp$x##10404][lq_tmp$x##10330:=GHC.Base.$fFunctorIO][lq_tmp$x##10331:=lq_anf$##7205759403792824706##d85I][lq_tmp$x##10332:=lq_anf$##7205759403792824709##d85L][lq_tmp$x##10352:=lq_tmp$x##10405][lq_tmp$x##10360:=lq_tmp$x##10405][lq_tmp$x##10361:=lq_tmp$x##10403][lq_tmp$x##10362:=lq_tmp$x##10404][lq_tmp$x##10402:=lq_tmp$x##10405]}>^\"lq_tmp$x##10358\" \"lq_tmp$x##207\" | $k_##10357[VV##10356:=lq_tmp$x##10404][lq_tmp$x##10330:=GHC.Base.$fFunctorIO][lq_tmp$x##10331:=lq_anf$##7205759403792824706##d85I][lq_tmp$x##10332:=lq_anf$##7205759403792824709##d85L][lq_tmp$x##10362:=lq_tmp$x##10404]\nlen lq_tmp$x##10404 >= 0\nlq_tmp$x##10404 == savedWeights##a49E}"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":17,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windowSize","{lq_tmp$x##6027 : GHC.Types.Int^\"lq_tmp$x##6026\" | lq_tmp$x##6027 == week##a6o5 * n##a6o3}"]]],[{"spanInfo":{"startLine":130,"endLine":130,"endCol":19,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","{lq_tmp$x##4513 : [GHC.Types.Char]^\"lq_tmp$x##1261\" | len lq_tmp$x##4513 >= 0\n                                                      && lq_tmp$x##4513 == heading##a64u}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":44,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Bool> .\nlq_tmp$x##8661:a -> lq_tmp$x##8662:{lq_tmp$x##8653 : b<p2 lq_tmp$x##8661> | true} -> {lq_tmp$x##8658 : (a, b)<\\lq_tmp$x##8663 VV -> {lq_tmp$x##8657 : b<p2 lq_tmp$x##8663> | true}> | x_Tuple22 lq_tmp$x##8658 == lq_tmp$x##8662\n                                                                                                                                                                                      && x_Tuple21 lq_tmp$x##8658 == lq_tmp$x##8661\n                                                                                                                                                                                      && snd lq_tmp$x##8658 == lq_tmp$x##8662\n                                                                                                                                                                                      && fst lq_tmp$x##8658 == lq_tmp$x##8661}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":57,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824667","xcmp:{lq_tmp$x##8242 : GHC.Types.Double^\"lq_tmp$x##8241\" | $k_##8240[VV##8239:=lq_tmp$x##8242][lq_tmp$db##14:=lq_anf$##7205759403792824664##d852][lq_tmp$db##16:=lq_anf$##7205759403792824666##d854]} -> {lq_tmp$x##8238 : (GHC.Maybe.Maybe {lq_tmp$x##8237 : ({lq_tmp$x##8233 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8219\" \"lq_tmp$x##8245\" | $k_##8218[VV##8217:=lq_tmp$x##8233][VV##8227:=lq_tmp$x##8237][VV##8230:=lq_tmp$x##8238][VV##8243:=lq_tmp$x##8233][VV##8246:=lq_tmp$x##8234][VV##8250:=lq_tmp$x##8236][VV##8253:=lq_tmp$x##8237][VV##8256:=lq_tmp$x##8238][lq_tmp$db##14:=lq_anf$##7205759403792824664##d852][lq_tmp$db##16:=lq_anf$##7205759403792824666##d854]\n                                                                                                                                                                                                                                                                                                                                                 && $k_##8244[VV##8243:=lq_tmp$x##8233][VV##8246:=lq_tmp$x##8234][VV##8250:=lq_tmp$x##8236][VV##8253:=lq_tmp$x##8237][VV##8256:=lq_tmp$x##8238][lq_tmp$db##14:=lq_anf$##7205759403792824664##d852][lq_tmp$db##16:=lq_anf$##7205759403792824666##d854][lq_tmp$x##8259:=xcmp]}, {lq_tmp$x##8234 : Main.Weight^\"lq_tmp$x##8222\" \"lq_tmp$x##8248\" | $k_##8221[VV##8220:=lq_tmp$x##8234][VV##8227:=lq_tmp$x##8237][VV##8230:=lq_tmp$x##8238][VV##8243:=lq_tmp$x##8233][VV##8246:=lq_tmp$x##8234][VV##8250:=lq_tmp$x##8236][VV##8253:=lq_tmp$x##8237][VV##8256:=lq_tmp$x##8238][lq_tmp$db##14:=lq_anf$##7205759403792824664##d852][lq_tmp$db##16:=lq_anf$##7205759403792824666##d854]\nk_##8247[VV##8243:=lq_tmp$x##8233][VV##8246:=lq_tmp$x##8234][VV##8250:=lq_tmp$x##8236][VV##8253:=lq_tmp$x##8237][VV##8256:=lq_tmp$x##8238][lq_tmp$db##14:=lq_anf$##7205759403792824664##d852][lq_tmp$db##16:=lq_anf$##7205759403792824666##d854][lq_tmp$x##8259:=xcmp]})<\\lq_tmp$x##8235 VV -> {lq_tmp$x##8236 : Main.Weight^\"lq_tmp$x##8226\" \"lq_tmp$x##8252\" | $k_##8225[VV##8224:=lq_tmp$x##8236][VV##8227:=lq_tmp$x##8237][VV##8230:=lq_tmp$x##8238][VV##8243:=lq_tmp$x##8233][VV##8246:=lq_tmp$x##8234][VV##8250:=lq_tmp$x##8236][VV##8253:=lq_tmp$x##8237][VV##8256:=lq_tmp$x##8238][lq_tmp$db##14:=lq_anf$##7205759403792824664##d852][lq_tmp$db##16:=lq_anf$##7205759403792824666##d854][lq_tmp$x##8223:=lq_tmp$x##8235]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     && $k_##8251[VV##8243:=lq_tmp$x##8233][VV##8246:=lq_tmp$x##8234][VV##8250:=lq_tmp$x##8236][VV##8253:=lq_tmp$x##8237][VV##8256:=lq_tmp$x##8238][lq_tmp$db##14:=lq_anf$##7205759403792824664##d852][lq_tmp$db##16:=lq_anf$##7205759403792824666##d854][lq_tmp$x##8249:=lq_tmp$x##8235][lq_tmp$x##8259:=xcmp]}>^\"lq_tmp$x##8229\" \"lq_tmp$x##8255\" | $k_##8228[VV##8227:=lq_tmp$x##8237][VV##8230:=lq_tmp$x##8238][VV##8243:=lq_tmp$x##8233][VV##8246:=lq_tmp$x##8234][VV##8250:=lq_tmp$x##8236][VV##8253:=lq_tmp$x##8237][VV##8256:=lq_tmp$x##8238][lq_tmp$db##14:=lq_anf$##7205759403792824664##d852][lq_tmp$db##16:=lq_anf$##7205759403792824666##d854]\nk_##8254[VV##8243:=lq_tmp$x##8233][VV##8246:=lq_tmp$x##8234][VV##8250:=lq_tmp$x##8236][VV##8253:=lq_tmp$x##8237][VV##8256:=lq_tmp$x##8238][lq_tmp$db##14:=lq_anf$##7205759403792824664##d852][lq_tmp$db##16:=lq_anf$##7205759403792824666##d854][lq_tmp$x##8259:=xcmp]})^\"lq_tmp$x##8232\" \"lq_tmp$x##8258\" | $k_##8231[VV##8230:=lq_tmp$x##8238][lq_tmp$db##14:=lq_anf$##7205759403792824664##d852][lq_tmp$db##16:=lq_anf$##7205759403792824666##d854]\nk_##8257[VV##8256:=lq_tmp$x##8238][lq_tmp$db##14:=lq_anf$##7205759403792824664##d852][lq_tmp$db##16:=lq_anf$##7205759403792824666##d854][lq_tmp$x##8259:=xcmp]}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":86,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(Options.Applicative.Types.Parser (GHC.Maybe.Maybe {lq_tmp$x##2886 : GHC.Types.Double^\"lq_tmp$x##2885\" \"lq_tmp$x##709\" | $k_##2884[VV##2883:=lq_tmp$x##2886][lq_tmp$x##2879:=Options.Applicative.Types.$fAlternativeParser][lq_tmp$x##2880:=lq_anf$##7205759403792824518##d82G]}))"]]],[{"spanInfo":{"startLine":120,"endLine":121,"endCol":54,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.List.filter","forall a .\nlq_tmp$x##4480:(lq_tmp$x##4478:a -> GHC.Types.Bool) -> lq_tmp$x##4481:[a] -> {lq_tmp$x##4475 : [a] | len lq_tmp$x##4475 <= len lq_tmp$x##4481}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":88,"startCol":70,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["allDaysWithWeights","{lq_tmp$x##10588 : [(Data.Time.Calendar.Days.Day, Main.Weight)]^\"lq_tmp$x##1312\" | len lq_tmp$x##10588 >= 0\n                                                                                   && lq_tmp$x##10588 == allDaysWithWeights##a49F}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":25,"startCol":24,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824602","{lq_tmp$x##5309 : GHC.Types.Int | lq_tmp$x##5309 == lq_anf$##7205759403792824601##d841}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":73,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$","forall r a b .\nlq_tmp$x##8376:(lq_tmp$x##8375:a -> b) -> lq_tmp$x##8377:a -> b"]]],[{"spanInfo":{"startLine":150,"endLine":150,"endCol":60,"startCol":49,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["latestEntry","{lq_tmp$x##8929 : Main.Entry^\"lq_tmp$x##8819\" \"lq_tmp$x##635\" | $k_##8818[VV##8817:=lq_tmp$x##8929][lq_tmp$x##8809:=Data.Foldable.$36$fFoldable$91$$93$][lq_tmp$x##8810:=lq_anf$##7205759403792824682##d85k][lq_tmp$x##8811:=entries##a64z][lq_tmp$x##8820:=lq_tmp$x##8929]\n                                                                && lq_tmp$x##8929 == latestEntry##a6do}"]]],[{"spanInfo":{"startLine":110,"endLine":110,"endCol":46,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824561","(GHC.Base.Semigroup [GHC.Types.Char])"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":23,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","[Main.Entry]"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":53,"startCol":19,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824572","xcmp:{lq_tmp$x##4399 : Main.Entry^\"lq_tmp$x##4398\" | $k_##4397[VV##4396:=lq_tmp$x##4399][lq_tmp$db##14:=lq_anf$##7205759403792824570##d83w][lq_tmp$db##16:=lq_anf$##7205759403792824571##d83x]} -> {lq_tmp$x##4395 : GHC.Integer.Type.Integer^\"lq_tmp$x##4394\" \"lq_tmp$x##4402\" | $k_##4393[VV##4392:=lq_tmp$x##4395][lq_tmp$db##14:=lq_anf$##7205759403792824570##d83w][lq_tmp$db##16:=lq_anf$##7205759403792824571##d83x]\n                                                                                                                                                                                                                                                                                  && $k_##4401[VV##4400:=lq_tmp$x##4395][lq_tmp$db##14:=lq_anf$##7205759403792824570##d83w][lq_tmp$db##16:=lq_anf$##7205759403792824571##d83x][lq_tmp$x##4403:=xcmp]}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":57,"startCol":51,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.Weight","lq_tmp$x##8196:GHC.Types.Double -> Main.Weight"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":40,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824534","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":26,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["window","{VV##5626 : [{VV##5609 : ({VV##5599 : a^\"lq_tmp$x##5601\" | $k_##5600}, {VV##5602 : Main.Weight^\"lq_tmp$x##5604\" | $k_##5603})<\\lq_tmp$x##5605 VV -> {VV##5606 : Main.Weight^\"lq_tmp$x##5608\" | $k_##5607}>^\"lq_tmp$x##5611\" | $k_##5610}]<\\lq_tmp$x##5612 VV -> {VV##5623 : ({VV##5613 : a^\"lq_tmp$x##5615\" | $k_##5614}, {VV##5616 : Main.Weight^\"lq_tmp$x##5618\" | $k_##5617})<\\lq_tmp$x##5619 VV -> {VV##5620 : Main.Weight^\"lq_tmp$x##5622\" | $k_##5621}>^\"lq_tmp$x##5625\" | $k_##5624}>^\"lq_tmp$x##5628\" | $k_##5627}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":54,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Float.$fFractionalDouble","{lq_tmp$x##5297 : (GHC.Real.Fractional GHC.Types.Double) | lq_tmp$x##5297 == GHC.Float.$fFractionalDouble}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":46,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["window","{lq_tmp$x##5689 : [{lq_tmp$x##5682 : ({lq_tmp$x##5678 : a^\"lq_tmp$x##5601\" | $k_##5600[VV##5599:=lq_tmp$x##5678][VV##5609:=lq_tmp$x##5682][VV##5626:=lq_tmp$x##5689]}, {lq_tmp$x##5679 : Main.Weight^\"lq_tmp$x##5604\" | $k_##5603[VV##5602:=lq_tmp$x##5679][VV##5609:=lq_tmp$x##5682][VV##5626:=lq_tmp$x##5689]})<\\lq_tmp$x##5690 VV -> {lq_tmp$x##5681 : Main.Weight^\"lq_tmp$x##5608\" | $k_##5607[VV##5606:=lq_tmp$x##5681][VV##5609:=lq_tmp$x##5682][VV##5626:=lq_tmp$x##5689][lq_tmp$x##5605:=lq_tmp$x##5690][lq_tmp$x##5680:=lq_tmp$x##5690]}>^\"lq_tmp$x##5611\" | $k_##5610[VV##5609:=lq_tmp$x##5682][VV##5626:=lq_tmp$x##5689]}]<\\lq_tmp$x##5692 VV -> {lq_tmp$x##5688 : ({lq_tmp$x##5684 : a^\"lq_tmp$x##5615\" | $k_##5614[VV##5613:=lq_tmp$x##5684][VV##5623:=lq_tmp$x##5688][VV##5626:=lq_tmp$x##5689][lq_tmp$x##5612:=lq_tmp$x##5692][lq_tmp$x##5683:=lq_tmp$x##5692]}, {lq_tmp$x##5685 : Main.Weight^\"lq_tmp$x##5618\" | $k_##5617[VV##5616:=lq_tmp$x##5685][VV##5623:=lq_tmp$x##5688][VV##5626:=lq_tmp$x##5689][lq_tmp$x##5612:=lq_tmp$x##5692][lq_tmp$x##5683:=lq_tmp$x##5692]})<\\lq_tmp$x##5691 VV -> {lq_tmp$x##5687 : Main.Weight^\"lq_tmp$x##5622\" | $k_##5621[VV##5620:=lq_tmp$x##5687][VV##5623:=lq_tmp$x##5688][VV##5626:=lq_tmp$x##5689][lq_tmp$x##5612:=lq_tmp$x##5692][lq_tmp$x##5619:=lq_tmp$x##5691][lq_tmp$x##5683:=lq_tmp$x##5692][lq_tmp$x##5686:=lq_tmp$x##5691]}>^\"lq_tmp$x##5625\" | $k_##5624[VV##5623:=lq_tmp$x##5688][VV##5626:=lq_tmp$x##5689][lq_tmp$x##5612:=lq_tmp$x##5692][lq_tmp$x##5683:=lq_tmp$x##5692]}>^\"lq_tmp$x##5628\" | $k_##5627[VV##5626:=lq_tmp$x##5689]\nlen lq_tmp$x##5689 >= 0\nlq_tmp$x##5689 == window##a6uA}"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":50,"startCol":46,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["date","{lq_tmp$x##9919 : Data.Text.Internal.Text^\"lq_tmp$x##467\" | tlen lq_tmp$x##9919 == stringlen lq_tmp$x##9919\n                                                            && 0 <= tlen lq_tmp$x##9919\n                                                            && lq_tmp$x##9919 == date##a6v0}"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":24,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["week","{lq_tmp$x##6030 : GHC.Types.Int | lq_tmp$x##6030 == lq_anf$##7205759403792824617##d84h\n                                  && lq_tmp$x##6030 == week##a6o5}"]]],[{"spanInfo":{"startLine":223,"endLine":223,"endCol":11,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["week","{lq_tmp$x##6008 : GHC.Types.Int | lq_tmp$x##6008 == lq_anf$##7205759403792824617##d84h}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":89,"startCol":45,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824720","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":39,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.lineToEntry","lq_tmp$x##10246:Turtle.Line.Line -> (GHC.Maybe.Maybe Main.Entry)"]]],[{"spanInfo":{"startLine":246,"endLine":246,"endCol":12,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.lineToEntry","lq_tmp$x##9521:Turtle.Line.Line -> (GHC.Maybe.Maybe Main.Entry)"]]],[{"spanInfo":{"startLine":148,"endLine":154,"endCol":51,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Maybe.catMaybes","forall a . lq_tmp$x##9482:[(GHC.Maybe.Maybe a)] -> [a]"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":34,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","{lq_tmp$x##5049 : GHC.Types.Int^\"lq_tmp$x##1281\" | lq_tmp$x##5049 == n##a64v}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":26,"startCol":25,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["l","{lq_tmp$x##9713 : Turtle.Line.Line^\"lq_tmp$x##1314\" | lq_tmp$x##9713 == l##a6uX}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":26,"startCol":24,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","[Main.Entry]"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":53,"startCol":34,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824571","xcmp:{lq_tmp$x##4360 : Main.Entry^\"lq_tmp$x##4359\" | $k_##4358[VV##4357:=lq_tmp$x##4360][lq_tmp$db##14:=Data.Time.Clock.Internal.UTCTime.utctDay][lq_tmp$db##16:=Main.entryDate]} -> {lq_tmp$x##4356 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##4355\" \"lq_tmp$x##4363\" | $k_##4354[VV##4353:=lq_tmp$x##4356][lq_tmp$db##14:=Data.Time.Clock.Internal.UTCTime.utctDay][lq_tmp$db##16:=Main.entryDate]\n                                                                                                                                                                                                                                                                       && $k_##4362[VV##4361:=lq_tmp$x##4356][lq_tmp$db##14:=Data.Time.Clock.Internal.UTCTime.utctDay][lq_tmp$db##16:=Main.entryDate][lq_tmp$x##4364:=xcmp]}"]]],[{"spanInfo":{"startLine":152,"endLine":152,"endCol":51,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##8989 : [{lq_tmp$x##9024 : ({lq_tmp$x##9018 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##9001\" | $k_##9000[VV##8999:=lq_tmp$x##9018][VV##9015:=lq_tmp$x##9024][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq]}, {lq_tmp$x##9020 : (GHC.Maybe.Maybe {lq_tmp$x##9019 : Main.Weight^\"lq_tmp$x##9004\" | $k_##9003[VV##9002:=lq_tmp$x##9019][VV##9005:=lq_tmp$x##9020][VV##9015:=lq_tmp$x##9024][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq]})^\"lq_tmp$x##9007\" | $k_##9006[VV##9005:=lq_tmp$x##9020][VV##9015:=lq_tmp$x##9024][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq]})<\\lq_tmp$x##9021 VV -> {lq_tmp$x##9023 : (GHC.Maybe.Maybe {lq_tmp$x##9022 : Main.Weight^\"lq_tmp$x##9011\" | $k_##9010[VV##9009:=lq_tmp$x##9022][VV##9012:=lq_tmp$x##9023][VV##9015:=lq_tmp$x##9024][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq][lq_tmp$x##9008:=lq_tmp$x##9021]})^\"lq_tmp$x##9014\" | $k_##9013[VV##9012:=lq_tmp$x##9023][VV##9015:=lq_tmp$x##9024][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq][lq_tmp$x##9008:=lq_tmp$x##9021]}>^\"lq_tmp$x##9017\" | $k_##9016[VV##9015:=lq_tmp$x##9024][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq]}] | len lq_tmp$x##8989 == len filledDays##a6dq}"]]],[{"spanInfo":{"startLine":126,"endLine":126,"endCol":40,"startCol":24,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.prettyPrintEntry","lq_tmp$x##4714:Main.Entry -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":25,"startCol":18,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","{lq_tmp$x##4939 : [GHC.Types.Char] | lq_tmp$x##4939 ~~ lq_anf$##7205759403792824582##d83I\n                                     && len lq_tmp$x##4939 == strLen lq_anf$##7205759403792824582##d83I\n                                     && len lq_tmp$x##4939 >= 0\n                                     && lq_tmp$x##4939 == heading##a61l}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":47,"startCol":34,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824609","{lq_tmp$x##5677 : ({lq_tmp$x##5673 : a^\"lq_tmp$x##5662\" | $k_##5661[VV##5660:=lq_tmp$x##5673][VV##5670:=lq_tmp$x##5677][lq_tmp$x##5658:=window##a6uA]}, {lq_tmp$x##5674 : Main.Weight^\"lq_tmp$x##5665\" | $k_##5664[VV##5663:=lq_tmp$x##5674][VV##5670:=lq_tmp$x##5677][lq_tmp$x##5658:=window##a6uA]})<\\lq_tmp$x##5675 VV -> {lq_tmp$x##5676 : Main.Weight^\"lq_tmp$x##5669\" | $k_##5668[VV##5667:=lq_tmp$x##5676][VV##5670:=lq_tmp$x##5677][lq_tmp$x##5658:=window##a6uA][lq_tmp$x##5666:=lq_tmp$x##5675]}>^\"lq_tmp$x##5672\" | $k_##5671[VV##5670:=lq_tmp$x##5677][lq_tmp$x##5658:=window##a6uA]\nlq_tmp$x##5677 == head window##a6uA}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":45,"startCol":41,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824595","{lq_tmp$x##5189 : GHC.Types.Double^\"lq_tmp$x##5188\" | lq_tmp$x##5189 == 0 <=> lq_anf$##7205759403792824594##d83U == 0}"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":58,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##9212 : [{lq_tmp$x##9247 : ({lq_tmp$x##9241 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##9224\" | $k_##9223[VV##9222:=lq_tmp$x##9241][VV##9238:=lq_tmp$x##9247][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq]}, {lq_tmp$x##9243 : (GHC.Maybe.Maybe {lq_tmp$x##9242 : Main.Weight^\"lq_tmp$x##9227\" | $k_##9226[VV##9225:=lq_tmp$x##9242][VV##9228:=lq_tmp$x##9243][VV##9238:=lq_tmp$x##9247][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq]})^\"lq_tmp$x##9230\" | $k_##9229[VV##9228:=lq_tmp$x##9243][VV##9238:=lq_tmp$x##9247][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq]})<\\lq_tmp$x##9244 VV -> {lq_tmp$x##9246 : (GHC.Maybe.Maybe {lq_tmp$x##9245 : Main.Weight^\"lq_tmp$x##9234\" | $k_##9233[VV##9232:=lq_tmp$x##9245][VV##9235:=lq_tmp$x##9246][VV##9238:=lq_tmp$x##9247][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq][lq_tmp$x##9231:=lq_tmp$x##9244]})^\"lq_tmp$x##9237\" | $k_##9236[VV##9235:=lq_tmp$x##9246][VV##9238:=lq_tmp$x##9247][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq][lq_tmp$x##9231:=lq_tmp$x##9244]}>^\"lq_tmp$x##9240\" | $k_##9239[VV##9238:=lq_tmp$x##9247][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq]}] | len lq_tmp$x##9212 == len filledDays##a6dq}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":47,"startCol":43,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824636","{lq_tmp$x##6793 : [GHC.Types.Char] | lq_tmp$x##6793 ~~ lq_anf$##7205759403792824635##d84z\n                                     && len lq_tmp$x##6793 == strLen lq_anf$##7205759403792824635##d84z}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":13,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["leftFolder","ds_d809:{VV##8461 : ({VV##8445 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8447\" | $k_##8446}, {VV##8451 : (GHC.Maybe.Maybe {VV##8448 : Main.Weight^\"lq_tmp$x##8450\" | $k_##8449})^\"lq_tmp$x##8453\" | $k_##8452})<\\lq_tmp$x##8454 VV -> {VV##8458 : (GHC.Maybe.Maybe {VV##8455 : Main.Weight^\"lq_tmp$x##8457\" | $k_##8456})^\"lq_tmp$x##8460\" | $k_##8459}>^\"lq_tmp$x##8463\" | $k_##8462} -> a##a64C:{VV##8481 : ({VV##8465 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8467\" | $k_##8466}, {VV##8471 : (GHC.Maybe.Maybe {VV##8468 : Main.Weight^\"lq_tmp$x##8470\" | $k_##8469})^\"lq_tmp$x##8473\" | $k_##8472})<\\lq_tmp$x##8474 VV -> {VV##8478 : (GHC.Maybe.Maybe {VV##8475 : Main.Weight^\"lq_tmp$x##8477\" | $k_##8476})^\"lq_tmp$x##8480\" | $k_##8479}>^\"lq_tmp$x##8483\" | $k_##8482} -> {VV##8501 : ({VV##8485 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8487\" | $k_##8486}, {VV##8491 : (GHC.Maybe.Maybe {VV##8488 : Main.Weight^\"lq_tmp$x##8490\" | $k_##8489})^\"lq_tmp$x##8493\" | $k_##8492})<\\lq_tmp$x##8494 VV -> {VV##8498 : (GHC.Maybe.Maybe {VV##8495 : Main.Weight^\"lq_tmp$x##8497\" | $k_##8496})^\"lq_tmp$x##8500\" | $k_##8499}>^\"lq_tmp$x##8503\" | $k_##8502}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":43,"startCol":42,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["w","{lq_tmp$x##8686 : (GHC.Maybe.Maybe {lq_tmp$x##8685 : Main.Weight^\"lq_tmp$x##8450\" \"lq_tmp$x##8457\" | $k_##8449[VV##8448:=lq_tmp$x##8685][VV##8451:=lq_tmp$x##8686][VV##8461:=lq_anf$##7205759403792824677##d85f][lq_tmp$x##8558:=lq_tmp$x##8685][lq_tmp$x##8559:=lq_tmp$x##8686][lq_tmp$x##8563:=lq_anf$##7205759403792824677##d85f][lq_tmp$x##8567:=lq_tmp$x##8685][lq_tmp$x##8568:=lq_tmp$x##8686][lq_tmp$x##8570:=lq_tmp$x##8685][lq_tmp$x##8571:=lq_tmp$x##8686][lq_tmp$x##8572:=lq_anf$##7205759403792824677##d85f][lq_tmp$x##8583:=ds_d80s]\n                                                                                                     && $k_##8456[VV##8455:=lq_tmp$x##8685][VV##8458:=lq_tmp$x##8686][VV##8461:=lq_anf$##7205759403792824677##d85f][lq_tmp$x##8454:=ds_d80s][lq_tmp$x##8560:=ds_d80s][lq_tmp$x##8561:=lq_tmp$x##8685][lq_tmp$x##8562:=lq_tmp$x##8686][lq_tmp$x##8563:=lq_anf$##7205759403792824677##d85f][lq_tmp$x##8564:=ds_d80s][lq_tmp$x##8567:=lq_tmp$x##8685][lq_tmp$x##8568:=lq_tmp$x##8686][lq_tmp$x##8569:=ds_d80s][lq_tmp$x##8570:=lq_tmp$x##8685][lq_tmp$x##8571:=lq_tmp$x##8686][lq_tmp$x##8572:=lq_anf$##7205759403792824677##d85f][lq_tmp$x##8573:=ds_d80s][lq_tmp$x##8583:=ds_d80s]})^\"lq_tmp$x##8453\" \"lq_tmp$x##8460\" | $k_##8452[VV##8451:=lq_tmp$x##8686][VV##8461:=lq_anf$##7205759403792824677##d85f][lq_tmp$x##8559:=lq_tmp$x##8686][lq_tmp$x##8563:=lq_anf$##7205759403792824677##d85f][lq_tmp$x##8568:=lq_tmp$x##8686][lq_tmp$x##8572:=lq_anf$##7205759403792824677##d85f][lq_tmp$x##8583:=ds_d80s]\nk_##8459[VV##8458:=lq_tmp$x##8686][VV##8461:=lq_anf$##7205759403792824677##d85f][lq_tmp$x##8454:=ds_d80s][lq_tmp$x##8560:=ds_d80s][lq_tmp$x##8562:=lq_tmp$x##8686][lq_tmp$x##8563:=lq_anf$##7205759403792824677##d85f][lq_tmp$x##8564:=ds_d80s][lq_tmp$x##8568:=lq_tmp$x##8686][lq_tmp$x##8569:=ds_d80s][lq_tmp$x##8571:=lq_tmp$x##8686][lq_tmp$x##8572:=lq_anf$##7205759403792824677##d85f][lq_tmp$x##8573:=ds_d80s][lq_tmp$x##8583:=ds_d80s]\nlq_tmp$x##8686 == w##a64D}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":8,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["today","{lq_tmp$x##4850 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##4849\" \"lq_tmp$x##207\" | $k_##4848[VV##4847:=lq_tmp$x##4850][lq_tmp$x##4838:=GHC.Base.$fFunctorIO][lq_tmp$x##4839:=Data.Time.Clock.Internal.UTCTime.utctDay][lq_tmp$x##4840:=Data.Time.Clock.POSIX.getCurrentTime]}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":40,"startCol":39,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d","{lq_tmp$x##8684 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8467\" | $k_##8466[VV##8465:=lq_tmp$x##8684][VV##8481:=lq_anf$##7205759403792824678##d85g][lq_tmp$x##8599:=lq_tmp$x##8684][lq_tmp$x##8605:=lq_anf$##7205759403792824678##d85g][lq_tmp$x##8608:=lq_tmp$x##8684][lq_tmp$x##8614:=lq_anf$##7205759403792824678##d85g]\n                                                                 && lq_tmp$x##8684 == d##a64E}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":25,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["filename","{lq_tmp$x##10212 : Filesystem.Path.Internal.FilePath^\"lq_tmp$x##10197\" | lq_anf$##7205759403792824704##d85G ~~ lq_tmp$x##10212\n                                                                         && len lq_anf$##7205759403792824704##d85G == stringlen lq_tmp$x##10212\n                                                                         && lq_tmp$x##10212 == filename##a3TS}"]]],[{"spanInfo":{"startLine":137,"endLine":137,"endCol":28,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","{lq_tmp$x##5154 : [GHC.Types.Char]^\"lq_tmp$x##5111\" \"lq_tmp$x##124\" | len lq_tmp$x##5154 >= 0\n                                                                      && lq_tmp$x##5154 == heading##a64x}"]]],[{"spanInfo":{"startLine":148,"endLine":148,"endCol":63,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##8898 : Main.Entry^\"lq_tmp$x##8897\" \"lq_tmp$x##647\" | $k_##8896[VV##8895:=lq_tmp$x##8898][lq_tmp$x##8887:=Data.Foldable.$36$fFoldable$91$$93$][lq_tmp$x##8888:=lq_anf$##7205759403792824683##d85l][lq_tmp$x##8889:=entries##a64z]}"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":62,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824704","{lq_tmp$x##10178 : [GHC.Types.Char] | lq_tmp$x##10178 ~~ lq_anf$##7205759403792824703##d85F\n                                      && len lq_tmp$x##10178 == strLen lq_anf$##7205759403792824703##d85F}"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":16,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.createEntryLine","lq_tmp$x##3195:Main.Weight -> (GHC.Types.IO Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":9,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["zipper","ds_d80y:{VV##7623 : ({VV##7607 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7609\" | $k_##7608}, {VV##7613 : (GHC.Maybe.Maybe {VV##7610 : Main.Weight^\"lq_tmp$x##7612\" | $k_##7611})^\"lq_tmp$x##7615\" | $k_##7614})<\\lq_tmp$x##7616 VV -> {VV##7620 : (GHC.Maybe.Maybe {VV##7617 : Main.Weight^\"lq_tmp$x##7619\" | $k_##7618})^\"lq_tmp$x##7622\" | $k_##7621}>^\"lq_tmp$x##7625\" | $k_##7624} -> ds_d80z:{VV##7643 : ({VV##7627 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7629\" | $k_##7628}, {VV##7633 : (GHC.Maybe.Maybe {VV##7630 : Main.Weight^\"lq_tmp$x##7632\" | $k_##7631})^\"lq_tmp$x##7635\" | $k_##7634})<\\lq_tmp$x##7636 VV -> {VV##7640 : (GHC.Maybe.Maybe {VV##7637 : Main.Weight^\"lq_tmp$x##7639\" | $k_##7638})^\"lq_tmp$x##7642\" | $k_##7641}>^\"lq_tmp$x##7645\" | $k_##7644} -> {VV##7660 : (GHC.Maybe.Maybe {VV##7657 : ({VV##7647 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7649\" | $k_##7648}, {VV##7650 : Main.Weight^\"lq_tmp$x##7652\" | $k_##7651})<\\lq_tmp$x##7653 VV -> {VV##7654 : Main.Weight^\"lq_tmp$x##7656\" | $k_##7655}>^\"lq_tmp$x##7659\" | $k_##7658})^\"lq_tmp$x##7662\" | $k_##7661}"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":64,"startCol":56,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["filename","{lq_tmp$x##10253 : Filesystem.Path.Internal.FilePath^\"lq_tmp$x##10197\" | lq_anf$##7205759403792824704##d85G ~~ lq_tmp$x##10253\n                                                                         && len lq_anf$##7205759403792824704##d85G == stringlen lq_tmp$x##10253\n                                                                         && lq_tmp$x##10253 == filename##a3TS}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":105,"startCol":68,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824616","GHC.Types.Double"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":43,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824716","{lq_tmp$x##10517 : GHC.Types.Int^\"lq_tmp$x##10516\" | lq_tmp$x##10517 == lq_anf$##7205759403792824713##d85P * lq_anf$##7205759403792824715##d85R}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":92,"startCol":36,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824556","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":207,"endLine":207,"endCol":34,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824630","[(Data.Time.Calendar.Days.Day, Data.Time.Calendar.Days.Day, GHC.Types.Double)]"]]],[{"spanInfo":{"startLine":162,"endLine":165,"endCol":73,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824661","{lq_tmp$x##7990 : GHC.Prim.Addr# | lq_tmp$x##7990 == \"/Users/matt/dev/haskell/weight-tracker/src/Main.hs:(162,3)-(165,72)|function zipper\"}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":60,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824639","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":27,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824686","lq_tmp$x##92:(GHC.Maybe.Maybe {lq_tmp$x##9545 : GHC.Types.Double^\"lq_tmp$x##9544\" \"lq_tmp$x##94\" | $k_##9543[VV##9542:=lq_tmp$x##9545][lq_tmp$x##88:=Main.Weight]}) -> (GHC.Maybe.Maybe {lq_tmp$x##9549 : Main.Weight^\"lq_tmp$x##9548\" \"lq_tmp$x##96\" | $k_##9547[VV##9546:=lq_tmp$x##9549][lq_tmp$x##88:=Main.Weight]})"]]],[{"spanInfo":{"startLine":222,"endLine":222,"endCol":17,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","{n : GHC.Types.Int | n > 0}"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":50,"startCol":41,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["rightFold","{lq_tmp$x##9465 : [{lq_tmp$x##9456 : ({lq_tmp$x##9450 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##9224\" | $k_##9223[VV##9222:=lq_tmp$x##9450][VV##9238:=lq_tmp$x##9456][lq_tmp$x##9212:=lq_tmp$x##9465][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq][lq_tmp$x##9241:=lq_tmp$x##9450][lq_tmp$x##9247:=lq_tmp$x##9456]}, {lq_tmp$x##9452 : (GHC.Maybe.Maybe {lq_tmp$x##9451 : Main.Weight^\"lq_tmp$x##9227\" | $k_##9226[VV##9225:=lq_tmp$x##9451][VV##9228:=lq_tmp$x##9452][VV##9238:=lq_tmp$x##9456][lq_tmp$x##9212:=lq_tmp$x##9465][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq][lq_tmp$x##9242:=lq_tmp$x##9451][lq_tmp$x##9243:=lq_tmp$x##9452][lq_tmp$x##9247:=lq_tmp$x##9456]})^\"lq_tmp$x##9230\" | $k_##9229[VV##9228:=lq_tmp$x##9452][VV##9238:=lq_tmp$x##9456][lq_tmp$x##9212:=lq_tmp$x##9465][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq][lq_tmp$x##9243:=lq_tmp$x##9452][lq_tmp$x##9247:=lq_tmp$x##9456]})<\\lq_tmp$x##9466 VV -> {lq_tmp$x##9455 : (GHC.Maybe.Maybe {lq_tmp$x##9454 : Main.Weight^\"lq_tmp$x##9234\" | $k_##9233[VV##9232:=lq_tmp$x##9454][VV##9235:=lq_tmp$x##9455][VV##9238:=lq_tmp$x##9456][lq_tmp$x##9212:=lq_tmp$x##9465][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq][lq_tmp$x##9231:=lq_tmp$x##9466][lq_tmp$x##9244:=lq_tmp$x##9466][lq_tmp$x##9245:=lq_tmp$x##9454][lq_tmp$x##9246:=lq_tmp$x##9455][lq_tmp$x##9247:=lq_tmp$x##9456][lq_tmp$x##9453:=lq_tmp$x##9466]})^\"lq_tmp$x##9237\" | $k_##9236[VV##9235:=lq_tmp$x##9455][VV##9238:=lq_tmp$x##9456][lq_tmp$x##9212:=lq_tmp$x##9465][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq][lq_tmp$x##9231:=lq_tmp$x##9466][lq_tmp$x##9244:=lq_tmp$x##9466][lq_tmp$x##9246:=lq_tmp$x##9455][lq_tmp$x##9247:=lq_tmp$x##9456][lq_tmp$x##9453:=lq_tmp$x##9466]}>^\"lq_tmp$x##9240\" | $k_##9239[VV##9238:=lq_tmp$x##9456][lq_tmp$x##9212:=lq_tmp$x##9465][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq][lq_tmp$x##9247:=lq_tmp$x##9456]}] | len lq_tmp$x##9465 == len filledDays##a6dq\nlen lq_tmp$x##9465 >= 0\nlq_tmp$x##9465 == rightFold##a6ds}"]]],[{"spanInfo":{"startLine":240,"endLine":240,"endCol":24,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.lineToEntry","lq_tmp$x##10092:Turtle.Line.Line -> (GHC.Maybe.Maybe Main.Entry)"]]],[{"spanInfo":{"startLine":207,"endLine":207,"endCol":33,"startCol":31,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{lq_tmp$x##6652 : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len lq_tmp$x##6652 >= 0\n                                                                 && lq_tmp$x##6652 == es##a6nZ}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":48,"startCol":42,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##8098 : ({lq_tmp$x##8107 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8106\" | $k_##8105[VV##8104:=lq_tmp$x##8107][lq_tmp$x##8101:=d1##a64F][lq_tmp$x##8102:=ds_d80A]}, {lq_tmp$x##8111 : Main.Weight^\"lq_tmp$x##8110\" | $k_##8109[VV##8108:=lq_tmp$x##8111][lq_tmp$x##8101:=d1##a64F][lq_tmp$x##8102:=ds_d80A]})<\\lq_tmp$x##8103 VV -> {lq_tmp$x##8111 : Main.Weight^\"lq_tmp$x##8110\" \"lq_tmp$x##8114\" | $k_##8113[VV##8112:=lq_tmp$x##8111][lq_tmp$x##8101:=d1##a64F][lq_tmp$x##8102:=ds_d80A][lq_tmp$x##8115:=lq_tmp$x##8103]}> | x_Tuple22 lq_tmp$x##8098 == ds_d80A\nx_Tuple21 lq_tmp$x##8098 == d1##a64F\nsnd lq_tmp$x##8098 == ds_d80A\nfst lq_tmp$x##8098 == d1##a64F}"]]],[{"spanInfo":{"startLine":207,"endLine":208,"endCol":61,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824631","{lq_tmp$x##6693 : ({lq_tmp$x##6685 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6659\" | $k_##6658[VV##6657:=lq_tmp$x##6685][VV##6675:=lq_tmp$x##6693]}, {lq_tmp$x##6686 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6662\" | $k_##6661[VV##6660:=lq_tmp$x##6686][VV##6675:=lq_tmp$x##6693]}, {lq_tmp$x##6687 : GHC.Types.Double^\"lq_tmp$x##6665\" | $k_##6664[VV##6663:=lq_tmp$x##6687][VV##6675:=lq_tmp$x##6693]})<\\lq_tmp$x##6694 VV -> {lq_tmp$x##6689 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6669\" | $k_##6668[VV##6667:=lq_tmp$x##6689][VV##6675:=lq_tmp$x##6693][lq_tmp$x##6666:=lq_tmp$x##6694][lq_tmp$x##6688:=lq_tmp$x##6694]}, \\lq_tmp$x##6695 lq_tmp$x##6696 VV -> {lq_tmp$x##6692 : GHC.Types.Double^\"lq_tmp$x##6674\" | $k_##6673[VV##6672:=lq_tmp$x##6692][VV##6675:=lq_tmp$x##6693][lq_tmp$x##6670:=lq_tmp$x##6695][lq_tmp$x##6671:=lq_tmp$x##6696][lq_tmp$x##6690:=lq_tmp$x##6695][lq_tmp$x##6691:=lq_tmp$x##6696]}>^\"lq_tmp$x##6677\" | $k_##6676[VV##6675:=lq_tmp$x##6693]\nlq_tmp$x##6693 == ds_d81B}"]]],[{"spanInfo":{"startLine":233,"endLine":233,"endCol":21,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["earliest","Main.Entry"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":92,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824557","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":158,"endLine":159,"endCol":44,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824680","{lq_tmp$x##8701 : GHC.Prim.Addr# | lq_tmp$x##8701 == \"/Users/matt/dev/haskell/weight-tracker/src/Main.hs:(158,3)-(159,43)|function leftFolder\"}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":65,"startCol":59,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["window","{lq_tmp$x##5757 : [{lq_tmp$x##5750 : ({lq_tmp$x##5746 : a^\"lq_tmp$x##5601\" | $k_##5600[VV##5599:=lq_tmp$x##5746][VV##5609:=lq_tmp$x##5750][VV##5626:=lq_tmp$x##5757]}, {lq_tmp$x##5747 : Main.Weight^\"lq_tmp$x##5604\" | $k_##5603[VV##5602:=lq_tmp$x##5747][VV##5609:=lq_tmp$x##5750][VV##5626:=lq_tmp$x##5757]})<\\lq_tmp$x##5758 VV -> {lq_tmp$x##5749 : Main.Weight^\"lq_tmp$x##5608\" | $k_##5607[VV##5606:=lq_tmp$x##5749][VV##5609:=lq_tmp$x##5750][VV##5626:=lq_tmp$x##5757][lq_tmp$x##5605:=lq_tmp$x##5758][lq_tmp$x##5748:=lq_tmp$x##5758]}>^\"lq_tmp$x##5611\" | $k_##5610[VV##5609:=lq_tmp$x##5750][VV##5626:=lq_tmp$x##5757]}]<\\lq_tmp$x##5760 VV -> {lq_tmp$x##5756 : ({lq_tmp$x##5752 : a^\"lq_tmp$x##5615\" | $k_##5614[VV##5613:=lq_tmp$x##5752][VV##5623:=lq_tmp$x##5756][VV##5626:=lq_tmp$x##5757][lq_tmp$x##5612:=lq_tmp$x##5760][lq_tmp$x##5751:=lq_tmp$x##5760]}, {lq_tmp$x##5753 : Main.Weight^\"lq_tmp$x##5618\" | $k_##5617[VV##5616:=lq_tmp$x##5753][VV##5623:=lq_tmp$x##5756][VV##5626:=lq_tmp$x##5757][lq_tmp$x##5612:=lq_tmp$x##5760][lq_tmp$x##5751:=lq_tmp$x##5760]})<\\lq_tmp$x##5759 VV -> {lq_tmp$x##5755 : Main.Weight^\"lq_tmp$x##5622\" | $k_##5621[VV##5620:=lq_tmp$x##5755][VV##5623:=lq_tmp$x##5756][VV##5626:=lq_tmp$x##5757][lq_tmp$x##5612:=lq_tmp$x##5760][lq_tmp$x##5619:=lq_tmp$x##5759][lq_tmp$x##5751:=lq_tmp$x##5760][lq_tmp$x##5754:=lq_tmp$x##5759]}>^\"lq_tmp$x##5625\" | $k_##5624[VV##5623:=lq_tmp$x##5756][VV##5626:=lq_tmp$x##5757][lq_tmp$x##5612:=lq_tmp$x##5760][lq_tmp$x##5751:=lq_tmp$x##5760]}>^\"lq_tmp$x##5628\" | $k_##5627[VV##5626:=lq_tmp$x##5757]\nlen lq_tmp$x##5757 >= 0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && lq_tmp$x##5757 == window##a6uA}"]]],[{"spanInfo":{"startLine":110,"endLine":110,"endCol":28,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824562","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":42,"startCol":37,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["weeks","{lq_tmp$x##6490 : GHC.Types.Int | lq_tmp$x##6490 > 0\n                                  && lq_tmp$x##6490 == weeks##a6nY}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":24,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["w","{VV##3819 : Main.Weight^\"lq_tmp$x##3821\" | $k_##3820}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":105,"startCol":96,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.blankLine","{lq_tmp$x##3997 : (GHC.Types.IO ())^\"lq_tmp$x##1216\" | lq_tmp$x##3997 == Main.blankLine}"]]],[{"spanInfo":{"startLine":151,"endLine":151,"endCol":17,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["filledDays","{lq_tmp$x##8954 : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len lq_tmp$x##8954 == len allDays##a6dp}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":28,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d","{lq_tmp$x##7422 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7322\" | $k_##7321[VV##7320:=lq_tmp$x##7422]\n                                                                 && lq_tmp$x##7422 == d##a6nW}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":10,"startCol":8,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d1","{lq_tmp$x##8054 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7609\" | $k_##7608[VV##7607:=lq_tmp$x##8054][VV##7623:=lq_anf$##7205759403792824656##d84U][lq_tmp$x##7837:=lq_tmp$x##8054][lq_tmp$x##7843:=lq_anf$##7205759403792824656##d84U][lq_tmp$x##7846:=lq_tmp$x##8054][lq_tmp$x##7852:=lq_anf$##7205759403792824656##d84U]\n                                                                 && lq_tmp$x##8054 == d1##a64F}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":25,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824603","lq_tmp$x##5320:GHC.Types.Double -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":207,"endLine":208,"endCol":61,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824641","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":73,"startCol":5,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824663","{lq_tmp$x##8057 : GHC.Types.Bool | (lq_tmp$x##8057 <=> d1##a64F /= d2##a64H)\n                                   && lq_tmp$x##8057 == lq_anf$##7205759403792824662##d850}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":11,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.fromWeight","lq_tmp$x##2735:Main.Weight -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":31,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.entryDate","lq_tmp$x##4145:Main.Entry -> Data.Time.Clock.Internal.UTCTime.UTCTime"]]],[{"spanInfo":{"startLine":120,"endLine":120,"endCol":20,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["day","Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":228,"endLine":228,"endCol":30,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windows","{lq_tmp$x##6379 : [{lq_tmp$x##6365 : [{lq_tmp$x##6358 : ({lq_tmp$x##6354 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6111\" | $k_##6110[VV##6109:=lq_tmp$x##6354][VV##6119:=lq_tmp$x##6358][VV##6136:=lq_tmp$x##6365][lq_tmp$x##6103:=lq_tmp$x##6379][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6139:=lq_tmp$x##6354][lq_tmp$x##6143:=lq_tmp$x##6358][lq_tmp$x##6150:=lq_tmp$x##6365]}, {lq_tmp$x##6355 : Main.Weight^\"lq_tmp$x##6114\" | $k_##6113[VV##6112:=lq_tmp$x##6355][VV##6119:=lq_tmp$x##6358][VV##6136:=lq_tmp$x##6365][lq_tmp$x##6103:=lq_tmp$x##6379][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6140:=lq_tmp$x##6355][lq_tmp$x##6143:=lq_tmp$x##6358][lq_tmp$x##6150:=lq_tmp$x##6365]})<\\lq_tmp$x##6380 VV -> {lq_tmp$x##6357 : Main.Weight^\"lq_tmp$x##6118\" | $k_##6117[VV##6116:=lq_tmp$x##6357][VV##6119:=lq_tmp$x##6358][VV##6136:=lq_tmp$x##6365][lq_tmp$x##6103:=lq_tmp$x##6379][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6115:=lq_tmp$x##6380][lq_tmp$x##6141:=lq_tmp$x##6380][lq_tmp$x##6142:=lq_tmp$x##6357][lq_tmp$x##6143:=lq_tmp$x##6358][lq_tmp$x##6150:=lq_tmp$x##6365][lq_tmp$x##6356:=lq_tmp$x##6380]}>^\"lq_tmp$x##6121\" | $k_##6120[VV##6119:=lq_tmp$x##6358][VV##6136:=lq_tmp$x##6365][lq_tmp$x##6103:=lq_tmp$x##6379][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6143:=lq_tmp$x##6358][lq_tmp$x##6150:=lq_tmp$x##6365]}]<\\lq_tmp$x##6382 VV -> {lq_tmp$x##6364 : ({lq_tmp$x##6360 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6125\" | $k_##6124[VV##6123:=lq_tmp$x##6360][VV##6133:=lq_tmp$x##6364][VV##6136:=lq_tmp$x##6365][lq_tmp$x##6103:=lq_tmp$x##6379][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6122:=lq_tmp$x##6382][lq_tmp$x##6144:=lq_tmp$x##6382][lq_tmp$x##6145:=lq_tmp$x##6360][lq_tmp$x##6149:=lq_tmp$x##6364][lq_tmp$x##6150:=lq_tmp$x##6365][lq_tmp$x##6359:=lq_tmp$x##6382]}, {lq_tmp$x##6361 : Main.Weight^\"lq_tmp$x##6128\" | $k_##6127[VV##6126:=lq_tmp$x##6361][VV##6133:=lq_tmp$x##6364][VV##6136:=lq_tmp$x##6365][lq_tmp$x##6103:=lq_tmp$x##6379][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6122:=lq_tmp$x##6382][lq_tmp$x##6144:=lq_tmp$x##6382][lq_tmp$x##6146:=lq_tmp$x##6361][lq_tmp$x##6149:=lq_tmp$x##6364][lq_tmp$x##6150:=lq_tmp$x##6365][lq_tmp$x##6359:=lq_tmp$x##6382]})<\\lq_tmp$x##6381 VV -> {lq_tmp$x##6363 : Main.Weight^\"lq_tmp$x##6132\" | $k_##6131[VV##6130:=lq_tmp$x##6363][VV##6133:=lq_tmp$x##6364][VV##6136:=lq_tmp$x##6365][lq_tmp$x##6103:=lq_tmp$x##6379][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6122:=lq_tmp$x##6382][lq_tmp$x##6129:=lq_tmp$x##6381][lq_tmp$x##6144:=lq_tmp$x##6382][lq_tmp$x##6147:=lq_tmp$x##6381][lq_tmp$x##6148:=lq_tmp$x##6363][lq_tmp$x##6149:=lq_tmp$x##6364][lq_tmp$x##6150:=lq_tmp$x##6365][lq_tmp$x##6359:=lq_tmp$x##6382][lq_tmp$x##6362:=lq_tmp$x##6381]}>^\"lq_tmp$x##6135\" | $k_##6134[VV##6133:=lq_tmp$x##6364][VV##6136:=lq_tmp$x##6365][lq_tmp$x##6103:=lq_tmp$x##6379][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6122:=lq_tmp$x##6382][lq_tmp$x##6144:=lq_tmp$x##6382][lq_tmp$x##6149:=lq_tmp$x##6364][lq_tmp$x##6150:=lq_tmp$x##6365][lq_tmp$x##6359:=lq_tmp$x##6382]}>^\"lq_tmp$x##6138\" | $k_##6137[VV##6136:=lq_tmp$x##6365][lq_tmp$x##6103:=lq_tmp$x##6379][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6150:=lq_tmp$x##6365]}] | len lq_tmp$x##6379 == len lq_anf$##7205759403792824618##d84i\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     && len lq_tmp$x##6379 >= 0\nlq_tmp$x##6379 == windows##a6o8}"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":21,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a b .\nlq_tmp$x##88:(lq_tmp$x##89:a -> b) -> lq_tmp$x##92:(GHC.Maybe.Maybe a) -> (GHC.Maybe.Maybe b)"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.$trModule","{VV##10757 : GHC.Types.Module^\"lq_tmp$x##10759\" | $k_##10758}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":55,"startCol":44,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824604","{lq_tmp$x##5328 : GHC.Types.Int | lq_tmp$x##5328 >= 0\n                                  && lq_tmp$x##5328 == len ds##a6dv}"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":44,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["last8Days","{lq_tmp$x##4915 : [Main.Entry]^\"lq_tmp$x##1257\" | len lq_tmp$x##4915 >= 0\n                                                  && lq_tmp$x##4915 == last8Days##a61n}"]]],[{"spanInfo":{"startLine":137,"endLine":137,"endCol":34,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lastN","{lq_tmp$x##5159 : [{lq_tmp$x##5156 : Main.Entry^\"lq_tmp$x##4994\" | $k_##4993[VV##4992:=lq_tmp$x##5156][lq_tmp$x##4984:=lq_tmp$x##5159][lq_tmp$x##4988:=n##a64v][lq_tmp$x##4989:=lq_anf$##7205759403792824585##d83L][lq_tmp$x##4995:=lq_tmp$x##5156]}] | (n##a64v >= 0 => len lq_tmp$x##5159 == (if len lq_anf$##7205759403792824585##d83L < n##a64v then len lq_anf$##7205759403792824585##d83L else n##a64v))\n                                                                                                                                                                                                                                                        && (not (n##a64v >= 0) => len lq_tmp$x##5159 == 0)\n                                                                                                                                                                                                                                                        && len lq_tmp$x##5159 >= 0\n                                                                                                                                                                                                                                                        && lq_tmp$x##5159 == lastN##a64y}"]]],[{"spanInfo":{"startLine":247,"endLine":250,"endCol":34,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824695","{lq_tmp$x##9895 : [Data.Text.Internal.Text] | len lq_tmp$x##9895 >= 0\n                                              && lq_tmp$x##9895 == ds_d7Zm}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":43,"startCol":41,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824594","{lq_tmp$x##5168 : GHC.Types.Double | lq_tmp$x##5168 == 10.0}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":86,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824518","(Options.Applicative.Types.Parser GHC.Types.Double)"]]],[{"spanInfo":{"startLine":110,"endLine":110,"endCol":46,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824567","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":72,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fApplicativeMaybe","{lq_tmp$x##9994 : (GHC.Base.Applicative GHC.Maybe.Maybe) | lq_tmp$x##9994 == GHC.Base.$fApplicativeMaybe}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":10,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["tup","[{lq_tmp$x##7205 : ({lq_tmp$x##7201 : GHC.Types.Int^\"lq_tmp$x##7190\" | $k_##7189[VV##7188:=lq_tmp$x##7201][VV##7198:=lq_tmp$x##7205][lq_tmp$x##88:=lq_anf$##7205759403792824646##d84K][lq_tmp$x##92:=es##a6dw]}, {lq_tmp$x##7202 : Main.Weight^\"lq_tmp$x##7193\" | $k_##7192[VV##7191:=lq_tmp$x##7202][VV##7198:=lq_tmp$x##7205][lq_tmp$x##88:=lq_anf$##7205759403792824646##d84K][lq_tmp$x##92:=es##a6dw]})<\\lq_tmp$x##7203 VV -> {lq_tmp$x##7204 : Main.Weight^\"lq_tmp$x##7197\" | $k_##7196[VV##7195:=lq_tmp$x##7204][VV##7198:=lq_tmp$x##7205][lq_tmp$x##7194:=lq_tmp$x##7203][lq_tmp$x##88:=lq_anf$##7205759403792824646##d84K][lq_tmp$x##92:=es##a6dw]}>^\"lq_tmp$x##7200\" \"lq_tmp$x##96\" | $k_##7199[VV##7198:=lq_tmp$x##7205][lq_tmp$x##88:=lq_anf$##7205759403792824646##d84K][lq_tmp$x##92:=es##a6dw]}]"]]],[{"spanInfo":{"startLine":224,"endLine":224,"endCol":30,"startCol":26,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##6013 : GHC.Types.Int | lq_tmp$x##6013 == lq_anf$##7205759403792824617##d84h\n                                  && lq_tmp$x##6013 == week##a6o5}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":45,"startCol":34,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["maybeWeight","{lq_tmp$x##4039 : (GHC.Maybe.Maybe Main.Weight)^\"lq_tmp$x##1218\" | lq_tmp$x##4039 == maybeWeight##a5yH}"]]],[{"spanInfo":{"startLine":126,"endLine":126,"endCol":21,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["System.IO.putStrLn","lq_tmp$x##4706:[GHC.Types.Char] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":241,"endLine":241,"endCol":14,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a . (Turtle.Shell.Shell a)"]]],[{"spanInfo":{"startLine":96,"endLine":96,"endCol":11,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.showWeight","lq_tmp$x##3172:Main.Weight -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":62,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824608","xcmp:{lq_tmp$x##5499 : [{lq_tmp$x##5496 : GHC.Types.Double^\"lq_tmp$x##5488\" | $k_##5487[VV##5486:=lq_tmp$x##5496][VV##5493:=lq_tmp$x##5499][lq_tmp$db##14:=lq_anf$##7205759403792824603##d843][lq_tmp$db##16:=lq_anf$##7205759403792824607##d847]}]<\\lq_tmp$x##5497 VV -> {lq_tmp$x##5498 : GHC.Types.Double^\"lq_tmp$x##5492\" | $k_##5491[VV##5490:=lq_tmp$x##5498][VV##5493:=lq_tmp$x##5499][lq_tmp$db##14:=lq_anf$##7205759403792824603##d843][lq_tmp$db##16:=lq_anf$##7205759403792824607##d847][lq_tmp$x##5489:=lq_tmp$x##5497]}>^\"lq_tmp$x##5495\" | $k_##5494[VV##5493:=lq_tmp$x##5499][lq_tmp$db##14:=lq_anf$##7205759403792824603##d843][lq_tmp$db##16:=lq_anf$##7205759403792824607##d847]} -> {lq_tmp$x##5485 : GHC.Types.Double^\"lq_tmp$x##5484\" \"lq_tmp$x##5502\" | $k_##5483[VV##5482:=lq_tmp$x##5485][lq_tmp$db##14:=lq_anf$##7205759403792824603##d843][lq_tmp$db##16:=lq_anf$##7205759403792824607##d847]\nk_##5501[VV##5500:=lq_tmp$x##5485][lq_tmp$db##14:=lq_anf$##7205759403792824603##d843][lq_tmp$db##16:=lq_anf$##7205759403792824607##d847][lq_tmp$x##5503:=xcmp]}"]]],[{"spanInfo":{"startLine":148,"endLine":148,"endCol":54,"startCol":46,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.entryDay","lq_tmp$x##8869:Main.Entry -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":37,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824527","xcmp:{lq_tmp$x##3308 : [{lq_tmp$x##3305 : GHC.Types.Char^\"lq_tmp$x##3297\" | $k_##3296[VV##3295:=lq_tmp$x##3305][VV##3302:=lq_tmp$x##3308][lq_tmp$db##14:=lq_anf$##7205759403792824525##d82N][lq_tmp$db##16:=lq_anf$##7205759403792824526##d82O]}]<\\lq_tmp$x##3306 VV -> {lq_tmp$x##3307 : GHC.Types.Char^\"lq_tmp$x##3301\" | $k_##3300[VV##3299:=lq_tmp$x##3307][VV##3302:=lq_tmp$x##3308][lq_tmp$db##14:=lq_anf$##7205759403792824525##d82N][lq_tmp$db##16:=lq_anf$##7205759403792824526##d82O][lq_tmp$x##3298:=lq_tmp$x##3306]}>^\"lq_tmp$x##3304\" | $k_##3303[VV##3302:=lq_tmp$x##3308][lq_tmp$db##14:=lq_anf$##7205759403792824525##d82N][lq_tmp$db##16:=lq_anf$##7205759403792824526##d82O]} -> {lq_tmp$x##3294 : (GHC.Types.IO {lq_tmp$x##3293 : Turtle.Line.Line^\"lq_tmp$x##3289\" \"lq_tmp$x##3311\" | $k_##3288[VV##3287:=lq_tmp$x##3293][VV##3290:=lq_tmp$x##3294][VV##3309:=lq_tmp$x##3293][VV##3312:=lq_tmp$x##3294][lq_tmp$db##14:=lq_anf$##7205759403792824525##d82N][lq_tmp$db##16:=lq_anf$##7205759403792824526##d82O]\nk_##3310[VV##3309:=lq_tmp$x##3293][VV##3312:=lq_tmp$x##3294][lq_tmp$db##14:=lq_anf$##7205759403792824525##d82N][lq_tmp$db##16:=lq_anf$##7205759403792824526##d82O][lq_tmp$x##3315:=xcmp]})^\"lq_tmp$x##3292\" \"lq_tmp$x##3314\" | $k_##3291[VV##3290:=lq_tmp$x##3294][lq_tmp$db##14:=lq_anf$##7205759403792824525##d82N][lq_tmp$db##16:=lq_anf$##7205759403792824526##d82O]\nk_##3313[VV##3312:=lq_tmp$x##3294][lq_tmp$db##14:=lq_anf$##7205759403792824525##d82N][lq_tmp$db##16:=lq_anf$##7205759403792824526##d82O][lq_tmp$x##3315:=xcmp]}"]]],[{"spanInfo":{"startLine":234,"endLine":234,"endCol":49,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":131,"endLine":131,"endCol":43,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824576","{lq_tmp$x##4546 : GHC.Types.Char | lq_tmp$x##4546 == (lit \"61\" Char)}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":5,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[":Main.main","(GHC.Types.IO {lq_tmp$x##10753 : ()^\"lq_tmp$x##10752\" \"lq_tmp$x##34\" | $k_##10751[VV##10750:=lq_tmp$x##10753][lq_tmp$x##10749:=Main.main]})"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":42,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windowSize","{lq_tmp$x##6078 : GHC.Types.Int^\"lq_tmp$x##6026\" | lq_tmp$x##6078 == week##a6o5 * n##a6o3\n                                                   && lq_tmp$x##6078 == windowSize##a6o7}"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":48,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824592","{lq_tmp$x##5057 : [GHC.Types.Char] | lq_tmp$x##5057 ~~ lq_anf$##7205759403792824591##d83R\n                                     && len lq_tmp$x##5057 == strLen lq_anf$##7205759403792824591##d83R}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":38,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(GHC.Types.IO {lq_tmp$x##4850 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##4849\" \"lq_tmp$x##207\" | $k_##4848[VV##4847:=lq_tmp$x##4850][lq_tmp$x##4838:=GHC.Base.$fFunctorIO][lq_tmp$x##4839:=Data.Time.Clock.Internal.UTCTime.utctDay][lq_tmp$x##4840:=Data.Time.Clock.POSIX.getCurrentTime]})"]]],[{"spanInfo":{"startLine":150,"endLine":150,"endCol":14,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["allDays","{lq_tmp$x##8922 : [Data.Time.Calendar.Days.Day] | len lq_tmp$x##8922 > 0}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":31,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","[(Data.Time.Calendar.Days.Day, Main.Weight)]"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":27,"startCol":18,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##3725 : (GHC.Types.IO (GHC.Maybe.Maybe Main.Weight))^\"lq_tmp$x##1219\" | lq_tmp$x##3725 == Main.parseArgs}"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":28,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##6027 : GHC.Types.Int^\"lq_tmp$x##6026\" | lq_tmp$x##6027 == week##a6o5 * n##a6o3}"]]],[{"spanInfo":{"startLine":55,"endLine":55,"endCol":35,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824710","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":50,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824688","xcmp:{lq_tmp$x##9600 : Data.Text.Internal.Text^\"lq_tmp$x##9599\" | $k_##9598[VV##9597:=lq_tmp$x##9600][lq_tmp$db##14:=lq_anf$##7205759403792824687##d85p][lq_tmp$db##16:=Data.Text.Show.unpack]} -> {lq_tmp$x##9596 : (GHC.Maybe.Maybe {lq_tmp$x##9595 : GHC.Types.Double^\"lq_tmp$x##9591\" \"lq_tmp$x##9603\" | $k_##9590[VV##9589:=lq_tmp$x##9595][VV##9592:=lq_tmp$x##9596][VV##9601:=lq_tmp$x##9595][VV##9604:=lq_tmp$x##9596][lq_tmp$db##14:=lq_anf$##7205759403792824687##d85p][lq_tmp$db##16:=Data.Text.Show.unpack]\n                                                                                                                                                                                                                                                                                                             && $k_##9602[VV##9601:=lq_tmp$x##9595][VV##9604:=lq_tmp$x##9596][lq_tmp$db##14:=lq_anf$##7205759403792824687##d85p][lq_tmp$db##16:=Data.Text.Show.unpack][lq_tmp$x##9607:=xcmp]})^\"lq_tmp$x##9594\" \"lq_tmp$x##9606\" | $k_##9593[VV##9592:=lq_tmp$x##9596][lq_tmp$db##14:=lq_anf$##7205759403792824687##d85p][lq_tmp$db##16:=Data.Text.Show.unpack]\nk_##9605[VV##9604:=lq_tmp$x##9596][lq_tmp$db##14:=lq_anf$##7205759403792824687##d85p][lq_tmp$db##16:=Data.Text.Show.unpack][lq_tmp$x##9607:=xcmp]}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":50,"startCol":44,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["parser","{lq_tmp$x##3170 : (Options.Applicative.Types.Parser {lq_tmp$x##3169 : (GHC.Maybe.Maybe {lq_tmp$x##3168 : Main.Weight^\"lq_tmp$x##2987\" \"lq_tmp$x##3023\" | $k_##2986[VV##2985:=lq_tmp$x##3168][VV##2988:=lq_tmp$x##3169][VV##2991:=lq_tmp$x##3170][lq_tmp$db##14:=lq_anf$##7205759403792824519##d82H][lq_tmp$db##16:=lq_anf$##7205759403792824520##d82I][lq_tmp$x##2975:=parserMaybeDouble##a5Ts][lq_tmp$x##2997:=lq_tmp$x##3168][lq_tmp$x##2998:=lq_tmp$x##3169][lq_tmp$x##2999:=lq_tmp$x##3170][lq_tmp$x##3011:=parserMaybeDouble##a5Ts][xcmp:=Main.Weight]\n                                                                                                                                                         && $k_##3022[VV##3021:=lq_tmp$x##3168][lq_tmp$db##14:=lq_anf$##7205759403792824519##d82H][lq_tmp$db##16:=lq_anf$##7205759403792824520##d82I][lq_tmp$x##2997:=lq_tmp$x##3168][lq_tmp$x##2998:=lq_tmp$x##3169][lq_tmp$x##2999:=lq_tmp$x##3170][lq_tmp$x##3011:=parserMaybeDouble##a5Ts][lq_tmp$x##3030:=Main.Weight][xcmp:=Main.Weight]})^\"lq_tmp$x##2990\" \"lq_tmp$x##3026\" | $k_##2989[VV##2988:=lq_tmp$x##3169][VV##2991:=lq_tmp$x##3170][lq_tmp$db##14:=lq_anf$##7205759403792824519##d82H][lq_tmp$db##16:=lq_anf$##7205759403792824520##d82I][lq_tmp$x##2975:=parserMaybeDouble##a5Ts][lq_tmp$x##2998:=lq_tmp$x##3169][lq_tmp$x##2999:=lq_tmp$x##3170][lq_tmp$x##3011:=parserMaybeDouble##a5Ts][xcmp:=Main.Weight]\nk_##3025[VV##3024:=lq_tmp$x##3169][lq_tmp$db##14:=lq_anf$##7205759403792824519##d82H][lq_tmp$db##16:=lq_anf$##7205759403792824520##d82I][lq_tmp$x##2998:=lq_tmp$x##3169][lq_tmp$x##2999:=lq_tmp$x##3170][lq_tmp$x##3011:=parserMaybeDouble##a5Ts][lq_tmp$x##3030:=Main.Weight][xcmp:=Main.Weight]})^\"lq_tmp$x##2993\" \"lq_tmp$x##3029\" | $k_##2992[VV##2991:=lq_tmp$x##3170][lq_tmp$db##14:=lq_anf$##7205759403792824519##d82H][lq_tmp$db##16:=lq_anf$##7205759403792824520##d82I][lq_tmp$x##2975:=parserMaybeDouble##a5Ts][lq_tmp$x##2999:=lq_tmp$x##3170][lq_tmp$x##3011:=parserMaybeDouble##a5Ts][xcmp:=Main.Weight]\nk_##3028[VV##3027:=lq_tmp$x##3170][lq_tmp$db##14:=lq_anf$##7205759403792824519##d82H][lq_tmp$db##16:=lq_anf$##7205759403792824520##d82I][lq_tmp$x##2999:=lq_tmp$x##3170][lq_tmp$x##3011:=parserMaybeDouble##a5Ts][lq_tmp$x##3030:=Main.Weight][xcmp:=Main.Weight]\nlq_tmp$x##3170 == parser##a5yR}"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":14,"startCol":10,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a b .\nlq_tmp$x##88:(lq_tmp$x##89:a -> b) -> lq_tmp$x##92:(Options.Applicative.Types.Parser a) -> (Options.Applicative.Types.Parser b)"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":104,"startCol":98,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["window","{lq_tmp$x##5936 : [{lq_tmp$x##5929 : ({lq_tmp$x##5925 : a^\"lq_tmp$x##5601\" | $k_##5600[VV##5599:=lq_tmp$x##5925][VV##5609:=lq_tmp$x##5929][VV##5626:=lq_tmp$x##5936]}, {lq_tmp$x##5926 : Main.Weight^\"lq_tmp$x##5604\" | $k_##5603[VV##5602:=lq_tmp$x##5926][VV##5609:=lq_tmp$x##5929][VV##5626:=lq_tmp$x##5936]})<\\lq_tmp$x##5937 VV -> {lq_tmp$x##5928 : Main.Weight^\"lq_tmp$x##5608\" | $k_##5607[VV##5606:=lq_tmp$x##5928][VV##5609:=lq_tmp$x##5929][VV##5626:=lq_tmp$x##5936][lq_tmp$x##5605:=lq_tmp$x##5937][lq_tmp$x##5927:=lq_tmp$x##5937]}>^\"lq_tmp$x##5611\" | $k_##5610[VV##5609:=lq_tmp$x##5929][VV##5626:=lq_tmp$x##5936]}]<\\lq_tmp$x##5939 VV -> {lq_tmp$x##5935 : ({lq_tmp$x##5931 : a^\"lq_tmp$x##5615\" | $k_##5614[VV##5613:=lq_tmp$x##5931][VV##5623:=lq_tmp$x##5935][VV##5626:=lq_tmp$x##5936][lq_tmp$x##5612:=lq_tmp$x##5939][lq_tmp$x##5930:=lq_tmp$x##5939]}, {lq_tmp$x##5932 : Main.Weight^\"lq_tmp$x##5618\" | $k_##5617[VV##5616:=lq_tmp$x##5932][VV##5623:=lq_tmp$x##5935][VV##5626:=lq_tmp$x##5936][lq_tmp$x##5612:=lq_tmp$x##5939][lq_tmp$x##5930:=lq_tmp$x##5939]})<\\lq_tmp$x##5938 VV -> {lq_tmp$x##5934 : Main.Weight^\"lq_tmp$x##5622\" | $k_##5621[VV##5620:=lq_tmp$x##5934][VV##5623:=lq_tmp$x##5935][VV##5626:=lq_tmp$x##5936][lq_tmp$x##5612:=lq_tmp$x##5939][lq_tmp$x##5619:=lq_tmp$x##5938][lq_tmp$x##5930:=lq_tmp$x##5939][lq_tmp$x##5933:=lq_tmp$x##5938]}>^\"lq_tmp$x##5625\" | $k_##5624[VV##5623:=lq_tmp$x##5935][VV##5626:=lq_tmp$x##5936][lq_tmp$x##5612:=lq_tmp$x##5939][lq_tmp$x##5930:=lq_tmp$x##5939]}>^\"lq_tmp$x##5628\" | $k_##5627[VV##5626:=lq_tmp$x##5936]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  && len lq_tmp$x##5936 >= 0\nlq_tmp$x##5936 == window##a6uA}"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":10,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.blankLine","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":51,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824685","{lq_tmp$x##9314 : [{lq_tmp$x##9401 : (GHC.Maybe.Maybe {lq_tmp$x##9400 : ({lq_tmp$x##9396 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##9382\" | $k_##9381[VV##9380:=lq_tmp$x##9396][VV##9390:=lq_tmp$x##9400][VV##9393:=lq_tmp$x##9401][lq_tmp$x##9322:=zipper##a64B][lq_tmp$x##9323:=leftFold##a6dr][lq_tmp$x##9324:=rightFold##a6ds]}, {lq_tmp$x##9397 : Main.Weight^\"lq_tmp$x##9385\" | $k_##9384[VV##9383:=lq_tmp$x##9397][VV##9390:=lq_tmp$x##9400][VV##9393:=lq_tmp$x##9401][lq_tmp$x##9322:=zipper##a64B][lq_tmp$x##9323:=leftFold##a6dr][lq_tmp$x##9324:=rightFold##a6ds]})<\\lq_tmp$x##9398 VV -> {lq_tmp$x##9399 : Main.Weight^\"lq_tmp$x##9389\" | $k_##9388[VV##9387:=lq_tmp$x##9399][VV##9390:=lq_tmp$x##9400][VV##9393:=lq_tmp$x##9401][lq_tmp$x##9322:=zipper##a64B][lq_tmp$x##9323:=leftFold##a6dr][lq_tmp$x##9324:=rightFold##a6ds][lq_tmp$x##9386:=lq_tmp$x##9398]}>^\"lq_tmp$x##9392\" | $k_##9391[VV##9390:=lq_tmp$x##9400][VV##9393:=lq_tmp$x##9401][lq_tmp$x##9322:=zipper##a64B][lq_tmp$x##9323:=leftFold##a6dr][lq_tmp$x##9324:=rightFold##a6ds]})^\"lq_tmp$x##9395\" | $k_##9394[VV##9393:=lq_tmp$x##9401][lq_tmp$x##9322:=zipper##a64B][lq_tmp$x##9323:=leftFold##a6dr][lq_tmp$x##9324:=rightFold##a6ds]}] | len lq_tmp$x##9314 <= len leftFold##a6dr\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         && len lq_tmp$x##9314 <= len rightFold##a6ds}"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":45,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.displayEntries","lq_tmp$x##4932:[GHC.Types.Char] -> lq_tmp$x##4933:[Main.Entry] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":34,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824590","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":62,"startCol":46,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824626","{lq_tmp$x##6498 : [GHC.Types.Char] | lq_tmp$x##6498 ~~ lq_anf$##7205759403792824625##d84p\n                                     && len lq_tmp$x##6498 == strLen lq_anf$##7205759403792824625##d84p}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":52,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824546","(GHC.Maybe.Maybe {lq_tmp$x##3774 : (GHC.Types.IO {lq_tmp$x##3773 : ()^\"lq_tmp$x##3769\" | $k_##3768[VV##3767:=lq_tmp$x##3773][VV##3770:=lq_tmp$x##3774][lq_tmp$x##3758:=GHC.Base.$fFunctorMaybe][lq_tmp$x##3759:=lq_anf$##7205759403792824545##d837][lq_tmp$x##3760:=maybeWeight##a5yH]})^\"lq_tmp$x##3772\" \"lq_tmp$x##207\" | $k_##3771[VV##3770:=lq_tmp$x##3774][lq_tmp$x##3758:=GHC.Base.$fFunctorMaybe][lq_tmp$x##3759:=lq_anf$##7205759403792824545##d837][lq_tmp$x##3760:=maybeWeight##a5yH]})"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":46,"startCol":36,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824596","{lq_tmp$x##5211 : GHC.Types.Double^\"lq_tmp$x##5210\" | lq_tmp$x##5211 == n##a6du * lq_anf$##7205759403792824595##d83V}"]]],[{"spanInfo":{"startLine":126,"endLine":126,"endCol":41,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824581","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":56,"startCol":55,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["e","{lq_tmp$x##7103 : Main.Entry^\"lq_tmp$x##7084\" | $k_##7083[VV##7082:=lq_tmp$x##7103]\n                                                && lq_tmp$x##7103 == e##a6dy}"]]],[{"spanInfo":{"startLine":233,"endLine":233,"endCol":12,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.fillEntries","lq_tmp$x##7539:Main.Entry -> lq_tmp$x##7540:Main.Entry -> {ds : [Data.Time.Calendar.Days.Day] | len ds > 0}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":21,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["orig","{lq_tmp$x##3572 : (Turtle.Shell.Shell Turtle.Line.Line)^\"lq_tmp$x##744\" | lq_tmp$x##3572 == orig##a5yM}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":31,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["day","{lq_tmp$x##4346 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##1250\" | lq_tmp$x##4346 == day##a64r}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":58,"startCol":26,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Bool> .\nlq_tmp$x##7399:a -> lq_tmp$x##7400:{lq_tmp$x##7391 : b<p2 lq_tmp$x##7399> | true} -> {lq_tmp$x##7396 : (a, b)<\\lq_tmp$x##7401 VV -> {lq_tmp$x##7395 : b<p2 lq_tmp$x##7401> | true}> | x_Tuple22 lq_tmp$x##7396 == lq_tmp$x##7400\n                                                                                                                                                                                      && x_Tuple21 lq_tmp$x##7396 == lq_tmp$x##7399\n                                                                                                                                                                                      && snd lq_tmp$x##7396 == lq_tmp$x##7400\n                                                                                                                                                                                      && fst lq_tmp$x##7396 == lq_tmp$x##7399}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":12,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.blankLine","{lq_tmp$x##10740 : (GHC.Types.IO ())^\"lq_tmp$x##1216\" | lq_tmp$x##10740 == Main.blankLine}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":39,"startCol":15,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824633","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":31,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base..","forall b\n       c\n       a <r :: a c -> Bool, q :: a b -> Bool, p :: b c -> Bool> .\n{xcmp :: a, wcmp :: {VV : b<q xcmp> | true} |- {VV : c<p wcmp> | true} <: {VV : c<r xcmp> | true}} =>\nlq_tmp$db##14:(ycmp:b -> {VV : c<p ycmp> | true}) -> lq_tmp$db##16:(zcmp:a -> {VV : b<q zcmp> | true}) -> xcmp:a -> {VV : c<r xcmp> | true}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":34,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824711","{lq_tmp$x##10441 : GHC.Types.Int | lq_tmp$x##10441 >= 0\n                                   && lq_tmp$x##10441 == len allDaysWithWeights##a49F}"]]],[{"spanInfo":{"startLine":149,"endLine":149,"endCol":18,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["latestEntry","{lq_tmp$x##8820 : Main.Entry^\"lq_tmp$x##8819\" \"lq_tmp$x##635\" | $k_##8818[VV##8817:=lq_tmp$x##8820][lq_tmp$x##8809:=Data.Foldable.$36$fFoldable$91$$93$][lq_tmp$x##8810:=lq_anf$##7205759403792824682##d85k][lq_tmp$x##8811:=entries##a64z]}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":59,"startCol":43,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824638","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":131,"endLine":131,"endCol":44,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824578","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":105,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{lq_tmp$x##3985 : (GHC.Base.Monad GHC.Types.IO) | lq_tmp$x##3985 == GHC.Base.$fMonadIO}"]]],[{"spanInfo":{"startLine":113,"endLine":113,"endCol":20,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.displayFromLastWeek","lq_tmp$x##4808:[Main.Entry] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":149,"endLine":149,"endCol":63,"startCol":56,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["entries","{lq_tmp$x##8836 : [Main.Entry]^\"lq_tmp$x##1303\" | len lq_tmp$x##8836 >= 0\n                                                  && lq_tmp$x##8836 == entries##a64z}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":63,"startCol":25,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824618","[[{lq_tmp$x##6077 : ({lq_tmp$x##6073 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6062\" | $k_##6061[VV##6060:=lq_tmp$x##6073][VV##6070:=lq_tmp$x##6077][lq_tmp$x##6053:=windowSize##a6o7][lq_tmp$x##6054:=windowEveryNDays##a6o6][lq_tmp$x##6055:=es##a6o4]}, {lq_tmp$x##6074 : Main.Weight^\"lq_tmp$x##6065\" | $k_##6064[VV##6063:=lq_tmp$x##6074][VV##6070:=lq_tmp$x##6077][lq_tmp$x##6053:=windowSize##a6o7][lq_tmp$x##6054:=windowEveryNDays##a6o6][lq_tmp$x##6055:=es##a6o4]})<\\lq_tmp$x##6075 VV -> {lq_tmp$x##6076 : Main.Weight^\"lq_tmp$x##6069\" | $k_##6068[VV##6067:=lq_tmp$x##6076][VV##6070:=lq_tmp$x##6077][lq_tmp$x##6053:=windowSize##a6o7][lq_tmp$x##6054:=windowEveryNDays##a6o6][lq_tmp$x##6055:=es##a6o4][lq_tmp$x##6066:=lq_tmp$x##6075]}>^\"lq_tmp$x##6072\" \"lq_tmp$x##656\" | $k_##6071[VV##6070:=lq_tmp$x##6077][lq_tmp$x##6053:=windowSize##a6o7][lq_tmp$x##6054:=windowEveryNDays##a6o6][lq_tmp$x##6055:=es##a6o4]}]]"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":73,"startCol":72,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["e","{lq_tmp$x##7129 : Main.Entry^\"lq_tmp$x##7084\" | $k_##7083[VV##7082:=lq_tmp$x##7129]\n                                                && lq_tmp$x##7129 == e##a6dy}"]]],[{"spanInfo":{"startLine":110,"endLine":110,"endCol":36,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824565","{lq_tmp$x##4211 : [GHC.Types.Char] | lq_tmp$x##4211 ~~ lq_anf$##7205759403792824564##d83q\n                                     && len lq_tmp$x##4211 == strLen lq_anf$##7205759403792824564##d83q}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":25,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["allDaysWithWeights","[(Data.Time.Calendar.Days.Day, Main.Weight)]"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":69,"startCol":68,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824719","{lq_tmp$x##10546 : GHC.Types.Int | lq_tmp$x##10546 == lq_anf$##7205759403792824718##d85U}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":66,"startCol":49,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824612","{lq_tmp$x##5775 : a^\"lq_tmp$x##5774\" | $k_##5773[VV##5772:=lq_tmp$x##5775][lq_tmp$x##5770:=lq_anf$##7205759403792824611##d84b]\n                                       && lq_tmp$x##5775 == fst lq_anf$##7205759403792824611##d84b}"]]],[{"spanInfo":{"startLine":126,"endLine":126,"endCol":11,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{lq_tmp$x##4766 : [Main.Entry]^\"lq_tmp$x##1271\" | len lq_tmp$x##4766 >= 0\n                                                  && lq_tmp$x##4766 == es##a64t}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":75,"startCol":18,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Bool> .\nlq_tmp$x##7140:a -> lq_tmp$x##7141:{lq_tmp$x##7132 : b<p2 lq_tmp$x##7140> | true} -> {lq_tmp$x##7137 : (a, b)<\\lq_tmp$x##7142 VV -> {lq_tmp$x##7136 : b<p2 lq_tmp$x##7142> | true}> | x_Tuple22 lq_tmp$x##7137 == lq_tmp$x##7141\n                                                                                                                                                                                      && x_Tuple21 lq_tmp$x##7137 == lq_tmp$x##7140\n                                                                                                                                                                                      && snd lq_tmp$x##7137 == lq_tmp$x##7141\n                                                                                                                                                                                      && fst lq_tmp$x##7137 == lq_tmp$x##7140}"]]],[{"spanInfo":{"startLine":110,"endLine":110,"endCol":28,"startCol":24,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["time","{lq_tmp$x##4194 : Data.Time.Clock.Internal.UTCTime.UTCTime^\"lq_tmp$x##959\" | lq_tmp$x##4194 == time##a61i}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":47,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824610","{lq_tmp$x##5707 : a^\"lq_tmp$x##5706\" | $k_##5705[VV##5704:=lq_tmp$x##5707][lq_tmp$x##5702:=lq_anf$##7205759403792824609##d849]\n                                       && lq_tmp$x##5707 == fst lq_anf$##7205759403792824609##d849}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":40,"startCol":39,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["w","{lq_tmp$x##3385 : Main.Weight^\"lq_tmp$x##1226\" | lq_tmp$x##3385 == w##a5yO}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":43,"startCol":42,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824715","{lq_tmp$x##10500 : GHC.Types.Int | lq_tmp$x##10500 == lq_anf$##7205759403792824714##d85Q}"]]],[{"spanInfo":{"startLine":148,"endLine":148,"endCol":55,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824683","lq_tmp$x##8854:{lq_tmp$x##8863 : Main.Entry^\"lq_tmp$x##8862\" \"lq_tmp$x##691\" | $k_##8861[VV##8860:=lq_tmp$x##8863][lq_tmp$x##8852:=Data.Time.Calendar.Days.$fOrdDay][lq_tmp$x##8853:=Main.entryDay]} -> lq_tmp$x##8855:{lq_tmp$x##8863 : Main.Entry^\"lq_tmp$x##8862\" \"lq_tmp$x##693\" | $k_##8861[VV##8860:=lq_tmp$x##8863][lq_tmp$x##8852:=Data.Time.Calendar.Days.$fOrdDay][lq_tmp$x##8853:=Main.entryDay]} -> GHC.Types.Ordering"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":50,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Control.Monad.IO.Class.$fMonadIOIO","{lq_tmp$x##3166 : (Control.Monad.IO.Class.MonadIO GHC.Types.IO) | lq_tmp$x##3166 == Control.Monad.IO.Class.$fMonadIOIO}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":52,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824647","GHC.Types.Int"]]],[{"spanInfo":{"startLine":151,"endLine":151,"endCol":52,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##8954 : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len lq_tmp$x##8954 == len allDays##a6dp}"]]],[{"spanInfo":{"startLine":109,"endLine":109,"endCol":17,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.prettyPrintEntry","lq_tmp$x##4147:Main.Entry -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":39,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824675","{lq_tmp$x##8758 : ({lq_tmp$x##8752 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8467\" | $k_##8466[VV##8465:=lq_tmp$x##8752][VV##8481:=lq_tmp$x##8758][lq_tmp$x##8504:=lq_tmp$x##8752][lq_tmp$x##8510:=lq_tmp$x##8758][lq_tmp$x##8513:=lq_tmp$x##8752][lq_tmp$x##8519:=lq_tmp$x##8758]\n                                                                                    && $k_##8466[VV##8465:=lq_tmp$x##8752][VV##8481:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8504:=lq_tmp$x##8752][lq_tmp$x##8510:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8513:=lq_tmp$x##8752][lq_tmp$x##8519:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8530:=ds_d80p][lq_tmp$x##8531:=ds_d80q]}, {lq_tmp$x##8754 : (GHC.Maybe.Maybe {lq_tmp$x##8753 : Main.Weight^\"lq_tmp$x##8470\" | $k_##8469[VV##8468:=lq_tmp$x##8753][VV##8471:=lq_tmp$x##8754][VV##8481:=lq_tmp$x##8758][lq_tmp$x##8505:=lq_tmp$x##8753][lq_tmp$x##8506:=lq_tmp$x##8754][lq_tmp$x##8510:=lq_tmp$x##8758][lq_tmp$x##8514:=lq_tmp$x##8753][lq_tmp$x##8515:=lq_tmp$x##8754][lq_tmp$x##8519:=lq_tmp$x##8758]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         && $k_##8469[VV##8468:=lq_tmp$x##8753][VV##8471:=lq_tmp$x##8754][VV##8481:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8505:=lq_tmp$x##8753][lq_tmp$x##8506:=lq_tmp$x##8754][lq_tmp$x##8510:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8514:=lq_tmp$x##8753][lq_tmp$x##8515:=lq_tmp$x##8754][lq_tmp$x##8519:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8530:=ds_d80p][lq_tmp$x##8531:=ds_d80q]})^\"lq_tmp$x##8473\" | $k_##8472[VV##8471:=lq_tmp$x##8754][VV##8481:=lq_tmp$x##8758][lq_tmp$x##8506:=lq_tmp$x##8754][lq_tmp$x##8510:=lq_tmp$x##8758][lq_tmp$x##8515:=lq_tmp$x##8754][lq_tmp$x##8519:=lq_tmp$x##8758]\nk_##8472[VV##8471:=lq_tmp$x##8754][VV##8481:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8506:=lq_tmp$x##8754][lq_tmp$x##8510:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8515:=lq_tmp$x##8754][lq_tmp$x##8519:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8530:=ds_d80p][lq_tmp$x##8531:=ds_d80q]})<\\lq_tmp$x##8759 VV -> {lq_tmp$x##8757 : (GHC.Maybe.Maybe {lq_tmp$x##8756 : Main.Weight^\"lq_tmp$x##8477\" \"lq_tmp$x##8470\" | $k_##8476[VV##8475:=lq_tmp$x##8756][VV##8478:=lq_tmp$x##8757][VV##8481:=lq_tmp$x##8758][lq_tmp$x##8474:=lq_tmp$x##8759][lq_tmp$x##8507:=lq_tmp$x##8759][lq_tmp$x##8508:=lq_tmp$x##8756][lq_tmp$x##8509:=lq_tmp$x##8757][lq_tmp$x##8510:=lq_tmp$x##8758][lq_tmp$x##8511:=lq_tmp$x##8759][lq_tmp$x##8516:=lq_tmp$x##8759][lq_tmp$x##8517:=lq_tmp$x##8756][lq_tmp$x##8518:=lq_tmp$x##8757][lq_tmp$x##8519:=lq_tmp$x##8758][lq_tmp$x##8520:=lq_tmp$x##8759][lq_tmp$x##8755:=lq_tmp$x##8759]\nk_##8476[VV##8475:=lq_tmp$x##8756][VV##8478:=lq_tmp$x##8515][VV##8481:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8474:=lq_tmp$x##8759][lq_tmp$x##8507:=lq_tmp$x##8759][lq_tmp$x##8508:=lq_tmp$x##8756][lq_tmp$x##8509:=lq_tmp$x##8515][lq_tmp$x##8510:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8511:=lq_tmp$x##8759][lq_tmp$x##8514:=lq_tmp$x##8756][lq_tmp$x##8516:=lq_tmp$x##8759][lq_tmp$x##8517:=lq_tmp$x##8756][lq_tmp$x##8518:=lq_tmp$x##8515][lq_tmp$x##8519:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8520:=lq_tmp$x##8759][lq_tmp$x##8530:=ds_d80p][lq_tmp$x##8531:=ds_d80q][lq_tmp$x##8537:=lq_tmp$x##8759][lq_tmp$x##8755:=lq_tmp$x##8759]})^\"lq_tmp$x##8480\" \"lq_tmp$x##8473\" | $k_##8479[VV##8478:=lq_tmp$x##8757][VV##8481:=lq_tmp$x##8758][lq_tmp$x##8474:=lq_tmp$x##8759][lq_tmp$x##8507:=lq_tmp$x##8759][lq_tmp$x##8509:=lq_tmp$x##8757][lq_tmp$x##8510:=lq_tmp$x##8758][lq_tmp$x##8511:=lq_tmp$x##8759][lq_tmp$x##8516:=lq_tmp$x##8759][lq_tmp$x##8518:=lq_tmp$x##8757][lq_tmp$x##8519:=lq_tmp$x##8758][lq_tmp$x##8520:=lq_tmp$x##8759][lq_tmp$x##8755:=lq_tmp$x##8759]\nk_##8479[VV##8478:=lq_tmp$x##8757][VV##8481:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8474:=lq_tmp$x##8759][lq_tmp$x##8507:=lq_tmp$x##8759][lq_tmp$x##8509:=lq_tmp$x##8757][lq_tmp$x##8510:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8511:=lq_tmp$x##8759][lq_tmp$x##8515:=lq_tmp$x##8757][lq_tmp$x##8516:=lq_tmp$x##8759][lq_tmp$x##8518:=lq_tmp$x##8757][lq_tmp$x##8519:=lq_anf$##7205759403792824675##d85d][lq_tmp$x##8520:=lq_tmp$x##8759][lq_tmp$x##8530:=ds_d80p][lq_tmp$x##8531:=ds_d80q][lq_tmp$x##8537:=lq_tmp$x##8759][lq_tmp$x##8755:=lq_tmp$x##8759]}>^\"lq_tmp$x##8483\" | $k_##8482[VV##8481:=lq_tmp$x##8758][lq_tmp$x##8510:=lq_tmp$x##8758][lq_tmp$x##8519:=lq_tmp$x##8758]\nlq_tmp$x##8758 == a##a64C\nx_Tuple22 lq_tmp$x##8758 == ds_d80q\nx_Tuple21 lq_tmp$x##8758 == ds_d80p\nsnd lq_tmp$x##8758 == ds_d80q\nfst lq_tmp$x##8758 == ds_d80p\nlq_tmp$x##8758 == GHC.Tuple.(,) ds_d80p ds_d80q\nx_Tuple22 lq_tmp$x##8758 == ds_d80q\nx_Tuple21 lq_tmp$x##8758 == ds_d80p\nsnd lq_tmp$x##8758 == ds_d80q\nfst lq_tmp$x##8758 == ds_d80p\nlq_tmp$x##8758 == lq_anf$##7205759403792824675##d85d}"]]],[{"spanInfo":{"startLine":246,"endLine":246,"endCol":14,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["l","Turtle.Line.Line"]]],[{"spanInfo":{"startLine":150,"endLine":150,"endCol":48,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["earliestEntry","{lq_tmp$x##8928 : Main.Entry^\"lq_tmp$x##8897\" \"lq_tmp$x##647\" | $k_##8896[VV##8895:=lq_tmp$x##8928][lq_tmp$x##8887:=Data.Foldable.$36$fFoldable$91$$93$][lq_tmp$x##8888:=lq_anf$##7205759403792824683##d85l][lq_tmp$x##8889:=entries##a64z][lq_tmp$x##8898:=lq_tmp$x##8928]\n                                                                && lq_tmp$x##8928 == earliestEntry##a6dn}"]]],[{"spanInfo":{"startLine":67,"endLine":67,"endCol":17,"startCol":15,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["fp","Filesystem.Path.Internal.FilePath"]]],[{"spanInfo":{"startLine":233,"endLine":233,"endCol":28,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["latest","Main.Entry"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":58,"startCol":48,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["filledDays","{lq_tmp$x##9293 : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len lq_tmp$x##9293 == len allDays##a6dp\n                                                                                   && len lq_tmp$x##9293 >= 0\n                                                                                   && lq_tmp$x##9293 == filledDays##a6dq}"]]],[{"spanInfo":{"startLine":195,"endLine":195,"endCol":35,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["ds","{lq_tmp$x##7535 : [Data.Time.Calendar.Days.Day]^\"lq_tmp$x##7294\" | len lq_tmp$x##7535 >= 0\n                                                                   && lq_tmp$x##7535 == ds##a6nT}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":51,"startCol":50,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d","{lq_tmp$x##7355 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7322\" | $k_##7321[VV##7320:=lq_tmp$x##7355]\n                                                                 && lq_tmp$x##7355 == d##a6nW}"]]],[{"spanInfo":{"startLine":180,"endLine":180,"endCol":22,"startCol":19,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["tup","{lq_tmp$x##7273 : [{lq_tmp$x##7266 : ({lq_tmp$x##7262 : GHC.Types.Int^\"lq_tmp$x##7190\" | $k_##7189[VV##7188:=lq_tmp$x##7262][VV##7198:=lq_tmp$x##7266][lq_tmp$x##7178:=lq_tmp$x##7273][lq_tmp$x##7201:=lq_tmp$x##7262][lq_tmp$x##7205:=lq_tmp$x##7266][lq_tmp$x##88:=lq_anf$##7205759403792824646##d84K][lq_tmp$x##92:=es##a6dw]}, {lq_tmp$x##7263 : Main.Weight^\"lq_tmp$x##7193\" | $k_##7192[VV##7191:=lq_tmp$x##7263][VV##7198:=lq_tmp$x##7266][lq_tmp$x##7178:=lq_tmp$x##7273][lq_tmp$x##7202:=lq_tmp$x##7263][lq_tmp$x##7205:=lq_tmp$x##7266][lq_tmp$x##88:=lq_anf$##7205759403792824646##d84K][lq_tmp$x##92:=es##a6dw]})<\\lq_tmp$x##7274 VV -> {lq_tmp$x##7265 : Main.Weight^\"lq_tmp$x##7197\" | $k_##7196[VV##7195:=lq_tmp$x##7265][VV##7198:=lq_tmp$x##7266][lq_tmp$x##7178:=lq_tmp$x##7273][lq_tmp$x##7194:=lq_tmp$x##7274][lq_tmp$x##7203:=lq_tmp$x##7274][lq_tmp$x##7204:=lq_tmp$x##7265][lq_tmp$x##7205:=lq_tmp$x##7266][lq_tmp$x##7264:=lq_tmp$x##7274][lq_tmp$x##88:=lq_anf$##7205759403792824646##d84K][lq_tmp$x##92:=es##a6dw]}>^\"lq_tmp$x##7200\" \"lq_tmp$x##96\" | $k_##7199[VV##7198:=lq_tmp$x##7266][lq_tmp$x##7178:=lq_tmp$x##7273][lq_tmp$x##7205:=lq_tmp$x##7266][lq_tmp$x##88:=lq_anf$##7205759403792824646##d84K][lq_tmp$x##92:=es##a6dw]}]^\"lq_tmp$x##7175\" \"lq_tmp$x##95\" | len lq_tmp$x##7273 >= 0\nlq_tmp$x##7273 == tup##a6dx}"]]],[{"spanInfo":{"startLine":239,"endLine":239,"endCol":15,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.linesToEntries","lq_tmp$x##10052:(Turtle.Shell.Shell Turtle.Line.Line) -> (Turtle.Shell.Shell Main.Entry)"]]],[{"spanInfo":{"startLine":178,"endLine":180,"endCol":22,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Hashable.Class.$fHashableInt","{lq_tmp$x##7261 : (Data.Hashable.Class.Hashable GHC.Types.Int) | lq_tmp$x##7261 == Data.Hashable.Class.$fHashableInt}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":43,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824523","{lq_tmp$x##3132 : Turtle.Options.Description^\"lq_tmp$x##3131\" | lq_anf$##7205759403792824522##d82K ~~ lq_tmp$x##3132\n                                                                && len lq_anf$##7205759403792824522##d82K == stringlen lq_tmp$x##3132}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":57,"startCol":26,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824536","(Turtle.Shell.Shell {lq_tmp$x##3544 : Turtle.Line.Line^\"lq_tmp$x##3543\" \"lq_tmp$x##579\" | $k_##3542[VV##3541:=lq_tmp$x##3544][lq_tmp$x##575:=lq_anf$##7205759403792824535##d82X]})"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":16,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["dayWithWeight","dMap##a6nV:{VV##7316 : (Data.HashMap.Base.HashMap {VV##7310 : GHC.Types.Int^\"lq_tmp$x##7312\" | $k_##7311} {VV##7313 : Main.Weight^\"lq_tmp$x##7315\" | $k_##7314})^\"lq_tmp$x##7318\" | $k_##7317} -> d##a6nW:{VV##7320 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7322\" | $k_##7321} -> {VV##7340 : ({VV##7324 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7326\" | $k_##7325}, {VV##7330 : (GHC.Maybe.Maybe {VV##7327 : Main.Weight^\"lq_tmp$x##7329\" | $k_##7328})^\"lq_tmp$x##7332\" | $k_##7331})<\\lq_tmp$x##7333 VV -> {VV##7337 : (GHC.Maybe.Maybe {VV##7334 : Main.Weight^\"lq_tmp$x##7336\" | $k_##7335})^\"lq_tmp$x##7339\" | $k_##7338}>^\"lq_tmp$x##7342\" | $k_##7341}"]]],[{"spanInfo":{"startLine":248,"endLine":248,"endCol":25,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824691","{lq_tmp$x##9741 : Data.Text.Internal.Text^\"lq_tmp$x##9740\" | lq_anf$##7205759403792824690##d85s ~~ lq_tmp$x##9741\n                                                             && len lq_anf$##7205759403792824690##d85s == stringlen lq_tmp$x##9741}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":39,"startCol":36,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["end","{lq_tmp$x##6776 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6662\" \"lq_tmp$x##6669\" | $k_##6661[VV##6660:=lq_tmp$x##6776][VV##6675:=lq_anf$##7205759403792824631##d84v][lq_tmp$x##6686:=lq_tmp$x##6776][lq_tmp$x##6693:=lq_anf$##7205759403792824631##d84v][lq_tmp$x##6699:=lq_tmp$x##6776][lq_tmp$x##6706:=lq_anf$##7205759403792824631##d84v][lq_tmp$x##6725:=start##a6o0]\n                                                                                  && $k_##6668[VV##6667:=lq_tmp$x##6776][VV##6675:=lq_anf$##7205759403792824631##d84v][lq_tmp$x##6666:=start##a6o0][lq_tmp$x##6688:=start##a6o0][lq_tmp$x##6689:=lq_tmp$x##6776][lq_tmp$x##6693:=lq_anf$##7205759403792824631##d84v][lq_tmp$x##6694:=start##a6o0][lq_tmp$x##6699:=lq_tmp$x##6776][lq_tmp$x##6701:=start##a6o0][lq_tmp$x##6702:=lq_tmp$x##6776][lq_tmp$x##6706:=lq_anf$##7205759403792824631##d84v][lq_tmp$x##6707:=start##a6o0][lq_tmp$x##6725:=start##a6o0]\n                                                                                  && lq_tmp$x##6776 == end##a6o1}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":23,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824579","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":195,"endLine":195,"endCol":28,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["entryMap","{lq_tmp$x##7461 : (Data.HashMap.Base.HashMap GHC.Types.Int Main.Weight)^\"lq_tmp$x##1299\" | lq_tmp$x##7461 == entryMap##a6nX}"]]],[{"spanInfo":{"startLine":150,"endLine":150,"endCol":60,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##8922 : [Data.Time.Calendar.Days.Day] | len lq_tmp$x##8922 > 0}"]]],[{"spanInfo":{"startLine":235,"endLine":235,"endCol":47,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824650","Data.Time.Clock.Internal.UTCTime.UTCTime"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":23,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":24,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824511","{lq_tmp$x##2742 : [{lq_tmp$x##2747 : GHC.Types.Char^\"lq_tmp$x##2746\" | $k_##2745[VV##2744:=lq_tmp$x##2747]}]<\\lq_tmp$x##2743 VV -> {lq_tmp$x##2747 : GHC.Types.Char^\"lq_tmp$x##2746\" \"lq_tmp$x##2750\" | $k_##2749[VV##2748:=lq_tmp$x##2747][lq_tmp$x##2751:=lq_tmp$x##2743]}> | len lq_tmp$x##2742 == 0}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":27,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(Turtle.Shell.Shell Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":126,"endLine":126,"endCol":41,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824580","xcmp:{lq_tmp$x##4667 : Main.Entry^\"lq_tmp$x##4666\" | $k_##4665[VV##4664:=lq_tmp$x##4667][lq_tmp$db##14:=System.IO.putStrLn][lq_tmp$db##16:=Main.prettyPrintEntry]} -> {lq_tmp$x##4663 : (GHC.Types.IO {lq_tmp$x##4662 : ()^\"lq_tmp$x##4658\" \"lq_tmp$x##4670\" | $k_##4657[VV##4656:=lq_tmp$x##4662][VV##4659:=lq_tmp$x##4663][VV##4668:=lq_tmp$x##4662][VV##4671:=lq_tmp$x##4663][lq_tmp$db##14:=System.IO.putStrLn][lq_tmp$db##16:=Main.prettyPrintEntry]\n                                                                                                                                                                                                                                                               && $k_##4669[VV##4668:=lq_tmp$x##4662][VV##4671:=lq_tmp$x##4663][lq_tmp$db##14:=System.IO.putStrLn][lq_tmp$db##16:=Main.prettyPrintEntry][lq_tmp$x##4674:=xcmp]})^\"lq_tmp$x##4661\" \"lq_tmp$x##4673\" | $k_##4660[VV##4659:=lq_tmp$x##4663][lq_tmp$db##14:=System.IO.putStrLn][lq_tmp$db##16:=Main.prettyPrintEntry]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                     && $k_##4672[VV##4671:=lq_tmp$x##4663][lq_tmp$db##14:=System.IO.putStrLn][lq_tmp$db##16:=Main.prettyPrintEntry][lq_tmp$x##4674:=xcmp]}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":26,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"Data.Text.Internal.Text"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":87,"startCol":77,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.fromWeight","lq_tmp$x##5853:Main.Weight -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":48,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824593","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":15,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["savedWeights","{lq_tmp$x##10362 : [{lq_tmp$x##10359 : Main.Entry^\"lq_tmp$x##10351\" | $k_##10350[VV##10349:=lq_tmp$x##10359][VV##10356:=lq_tmp$x##10362][lq_tmp$x##10330:=GHC.Base.$fFunctorIO][lq_tmp$x##10331:=lq_anf$##7205759403792824706##d85I][lq_tmp$x##10332:=lq_anf$##7205759403792824709##d85L]}]<\\lq_tmp$x##10360 VV -> {lq_tmp$x##10361 : Main.Entry^\"lq_tmp$x##10355\" | $k_##10354[VV##10353:=lq_tmp$x##10361][VV##10356:=lq_tmp$x##10362][lq_tmp$x##10330:=GHC.Base.$fFunctorIO][lq_tmp$x##10331:=lq_anf$##7205759403792824706##d85I][lq_tmp$x##10332:=lq_anf$##7205759403792824709##d85L][lq_tmp$x##10352:=lq_tmp$x##10360]}>^\"lq_tmp$x##10358\" \"lq_tmp$x##207\" | $k_##10357[VV##10356:=lq_tmp$x##10362][lq_tmp$x##10330:=GHC.Base.$fFunctorIO][lq_tmp$x##10331:=lq_anf$##7205759403792824706##d85I][lq_tmp$x##10332:=lq_anf$##7205759403792824709##d85L]}"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":16,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["rightFold","{lq_tmp$x##9212 : [{lq_tmp$x##9247 : ({lq_tmp$x##9241 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##9224\" | $k_##9223[VV##9222:=lq_tmp$x##9241][VV##9238:=lq_tmp$x##9247][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq]}, {lq_tmp$x##9243 : (GHC.Maybe.Maybe {lq_tmp$x##9242 : Main.Weight^\"lq_tmp$x##9227\" | $k_##9226[VV##9225:=lq_tmp$x##9242][VV##9228:=lq_tmp$x##9243][VV##9238:=lq_tmp$x##9247][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq]})^\"lq_tmp$x##9230\" | $k_##9229[VV##9228:=lq_tmp$x##9243][VV##9238:=lq_tmp$x##9247][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq]})<\\lq_tmp$x##9244 VV -> {lq_tmp$x##9246 : (GHC.Maybe.Maybe {lq_tmp$x##9245 : Main.Weight^\"lq_tmp$x##9234\" | $k_##9233[VV##9232:=lq_tmp$x##9245][VV##9235:=lq_tmp$x##9246][VV##9238:=lq_tmp$x##9247][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq][lq_tmp$x##9231:=lq_tmp$x##9244]})^\"lq_tmp$x##9237\" | $k_##9236[VV##9235:=lq_tmp$x##9246][VV##9238:=lq_tmp$x##9247][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq][lq_tmp$x##9231:=lq_tmp$x##9244]}>^\"lq_tmp$x##9240\" | $k_##9239[VV##9238:=lq_tmp$x##9247][lq_tmp$x##9218:=lq_anf$##7205759403792824684##d85m][lq_tmp$x##9219:=filledDays##a6dq]}] | len lq_tmp$x##9212 == len filledDays##a6dq}"]]],[{"spanInfo":{"startLine":194,"endLine":195,"endCol":35,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fFunctor[]","{lq_tmp$x##7519 : (GHC.Base.Functor []) | lq_tmp$x##7519 == GHC.Base.$fFunctor[]}"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":42,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824624","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":109,"endLine":110,"endCol":46,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824560","{lq_tmp$x##4150 : Main.Entry^\"lq_tmp$x##1243\" | lq_tmp$x##4150 == ds_d7ZL}"]]],[{"spanInfo":{"startLine":240,"endLine":240,"endCol":35,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(Turtle.Shell.Shell {lq_tmp$x##10085 : (GHC.Maybe.Maybe {lq_tmp$x##10084 : Main.Entry^\"lq_tmp$x##10080\" | $k_##10079[VV##10078:=lq_tmp$x##10084][VV##10081:=lq_tmp$x##10085][lq_tmp$x##10069:=Turtle.Shell.$fFunctorShell][lq_tmp$x##10070:=Main.lineToEntry][lq_tmp$x##10071:=sLines##a6uV]})^\"lq_tmp$x##10083\" \"lq_tmp$x##207\" | $k_##10082[VV##10081:=lq_tmp$x##10085][lq_tmp$x##10069:=Turtle.Shell.$fFunctorShell][lq_tmp$x##10070:=Main.lineToEntry][lq_tmp$x##10071:=sLines##a6uV]})"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":40,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824540","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":74,"endLine":78,"endCol":33,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{lq_tmp$x##3706 : (GHC.Base.Monad GHC.Types.IO) | lq_tmp$x##3706 == GHC.Base.$fMonadIO}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":57,"startCol":53,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["dMap","{lq_tmp$x##7388 : (Data.HashMap.Base.HashMap {lq_tmp$x##7386 : GHC.Types.Int^\"lq_tmp$x##7312\" | $k_##7311[VV##7310:=lq_tmp$x##7386][VV##7316:=lq_tmp$x##7388]} {lq_tmp$x##7387 : Main.Weight^\"lq_tmp$x##7315\" | $k_##7314[VV##7313:=lq_tmp$x##7387][VV##7316:=lq_tmp$x##7388]})^\"lq_tmp$x##7318\" | $k_##7317[VV##7316:=lq_tmp$x##7388]\n                                                                                                                                                                                                                                                                                                   && lq_tmp$x##7388 == dMap##a6nV}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":17,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["now","{lq_tmp$x##3449 : [GHC.Types.Char]^\"lq_tmp$x##537\" | len lq_tmp$x##3449 >= 0\n                                                     && lq_tmp$x##3449 == now##a5yP}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":21,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["dMap","{VV##7316 : (Data.HashMap.Base.HashMap {VV##7310 : GHC.Types.Int^\"lq_tmp$x##7312\" | $k_##7311} {VV##7313 : Main.Weight^\"lq_tmp$x##7315\" | $k_##7314})^\"lq_tmp$x##7318\" | $k_##7317}"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":15,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["entryMap","(Data.HashMap.Base.HashMap GHC.Types.Int Main.Weight)"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":43,"startCol":41,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{lq_tmp$x##4892 : [Main.Entry]^\"lq_tmp$x##1277\" | len lq_tmp$x##4892 >= 0\n                                                  && lq_tmp$x##4892 == es##a61k}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":46,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":93,"endLine":93,"endCol":47,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["parserMaybeDouble","{lq_tmp$x##3104 : (Options.Applicative.Types.Parser (GHC.Maybe.Maybe {lq_tmp$x##3102 : GHC.Types.Double^\"lq_tmp$x##2885\" \"lq_tmp$x##709\" | $k_##2884[VV##2883:=lq_tmp$x##3102][lq_tmp$x##2875:=lq_tmp$x##3103][lq_tmp$x##2879:=Options.Applicative.Types.$fAlternativeParser][lq_tmp$x##2880:=lq_anf$##7205759403792824518##d82G][lq_tmp$x##2882:=lq_tmp$x##3104][lq_tmp$x##2886:=lq_tmp$x##3102]}))^\"lq_tmp$x##2881\" \"lq_tmp$x##708\" | lq_tmp$x##3104 == parserMaybeDouble##a5Ts}"]]],[{"spanInfo":{"startLine":136,"endLine":136,"endCol":33,"startCol":31,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{lq_tmp$x##4973 : [Main.Entry]^\"lq_tmp$x##1285\" | len lq_tmp$x##4973 >= 0\n                                                  && lq_tmp$x##4973 == es##a64w}"]]],[{"spanInfo":{"startLine":228,"endLine":228,"endCol":18,"startCol":6,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a .\nlq_tmp$x##6210:{lq_tmp$x##6196 : [{lq_tmp$x##6189 : ({lq_tmp$x##6185 : a^\"lq_tmp$x##5601\" | $k_##5600[VV##5599:=lq_tmp$x##6185][VV##5609:=lq_tmp$x##6189][VV##5626:=lq_tmp$x##6196]}, {lq_tmp$x##6186 : Main.Weight^\"lq_tmp$x##5604\" | $k_##5603[VV##5602:=lq_tmp$x##6186][VV##5609:=lq_tmp$x##6189][VV##5626:=lq_tmp$x##6196]})<\\lq_tmp$x##6211 VV -> {lq_tmp$x##6188 : Main.Weight^\"lq_tmp$x##5608\" | $k_##5607[VV##5606:=lq_tmp$x##6188][VV##5609:=lq_tmp$x##6189][VV##5626:=lq_tmp$x##6196][lq_tmp$x##5605:=lq_tmp$x##6211][lq_tmp$x##6187:=lq_tmp$x##6211][lq_tmp$x##6207:=lq_tmp$x##6211]}>^\"lq_tmp$x##5611\" | $k_##5610[VV##5609:=lq_tmp$x##6189][VV##5626:=lq_tmp$x##6196]}]<\\lq_tmp$x##6213 VV -> {lq_tmp$x##6195 : ({lq_tmp$x##6191 : a^\"lq_tmp$x##5615\" | $k_##5614[VV##5613:=lq_tmp$x##6191][VV##5623:=lq_tmp$x##6195][VV##5626:=lq_tmp$x##6196][lq_tmp$x##5612:=lq_tmp$x##6213][lq_tmp$x##6190:=lq_tmp$x##6213][lq_tmp$x##6209:=lq_tmp$x##6213]}, {lq_tmp$x##6192 : Main.Weight^\"lq_tmp$x##5618\" | $k_##5617[VV##5616:=lq_tmp$x##6192][VV##5623:=lq_tmp$x##6195][VV##5626:=lq_tmp$x##6196][lq_tmp$x##5612:=lq_tmp$x##6213][lq_tmp$x##6190:=lq_tmp$x##6213][lq_tmp$x##6209:=lq_tmp$x##6213]})<\\lq_tmp$x##6212 VV -> {lq_tmp$x##6194 : Main.Weight^\"lq_tmp$x##5622\" | $k_##5621[VV##5620:=lq_tmp$x##6194][VV##5623:=lq_tmp$x##6195][VV##5626:=lq_tmp$x##6196][lq_tmp$x##5612:=lq_tmp$x##6213][lq_tmp$x##5619:=lq_tmp$x##6212][lq_tmp$x##6190:=lq_tmp$x##6213][lq_tmp$x##6193:=lq_tmp$x##6212][lq_tmp$x##6208:=lq_tmp$x##6212][lq_tmp$x##6209:=lq_tmp$x##6213]}>^\"lq_tmp$x##5625\" | $k_##5624[VV##5623:=lq_tmp$x##6195][VV##5626:=lq_tmp$x##6196][lq_tmp$x##5612:=lq_tmp$x##6213][lq_tmp$x##6190:=lq_tmp$x##6213][lq_tmp$x##6209:=lq_tmp$x##6213]}>^\"lq_tmp$x##5628\" | $k_##5627[VV##5626:=lq_tmp$x##6196]} -> {lq_tmp$x##6205 : ({lq_tmp$x##6197 : a^\"lq_tmp$x##5632\" | $k_##5631[VV##5630:=lq_tmp$x##6197][VV##5648:=lq_tmp$x##6205][window##a6uA:=lq_tmp$x##6210]}, {lq_tmp$x##6198 : a^\"lq_tmp$x##5635\" | $k_##5634[VV##5633:=lq_tmp$x##6198][VV##5648:=lq_tmp$x##6205][window##a6uA:=lq_tmp$x##6210]}, {lq_tmp$x##6199 : GHC.Types.Double^\"lq_tmp$x##5638\" | $k_##5637[VV##5636:=lq_tmp$x##6199][VV##5648:=lq_tmp$x##6205][window##a6uA:=lq_tmp$x##6210]})<\\lq_tmp$x##6214 VV -> {lq_tmp$x##6201 : a^\"lq_tmp$x##5642\" | $k_##5641[VV##5640:=lq_tmp$x##6201][VV##5648:=lq_tmp$x##6205][lq_tmp$x##5639:=lq_tmp$x##6214][lq_tmp$x##6200:=lq_tmp$x##6214][window##a6uA:=lq_tmp$x##6210]}, \\lq_tmp$x##6215 lq_tmp$x##6216 VV -> {lq_tmp$x##6204 : GHC.Types.Double^\"lq_tmp$x##5647\" | $k_##5646[VV##5645:=lq_tmp$x##6204][VV##5648:=lq_tmp$x##6205][lq_tmp$x##5643:=lq_tmp$x##6215][lq_tmp$x##5644:=lq_tmp$x##6216][lq_tmp$x##6202:=lq_tmp$x##6215][lq_tmp$x##6203:=lq_tmp$x##6216][window##a6uA:=lq_tmp$x##6210]}>^\"lq_tmp$x##5650\" | $k_##5649[VV##5648:=lq_tmp$x##6205][window##a6uA:=lq_tmp$x##6210]}"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":24,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824588","{lq_tmp$x##5018 : [GHC.Types.Char] | lq_tmp$x##5018 ~~ lq_anf$##7205759403792824587##d83N\n                                     && len lq_tmp$x##5018 == strLen lq_anf$##7205759403792824587##d83N}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":25,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824705","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":59,"startCol":43,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windowEveryNDays","{lq_tmp$x##6079 : GHC.Types.Int | lq_tmp$x##6079 == lq_anf$##7205759403792824617##d84h\n                                  && lq_tmp$x##6079 == week##a6o5\n                                  && lq_tmp$x##6079 == windowEveryNDays##a6o6}"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":76,"startCol":66,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a . (Control.Foldl.Fold a [a])"]]],[{"spanInfo":{"startLine":134,"endLine":134,"endCol":18,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","[Main.Entry]"]]],[{"spanInfo":{"startLine":240,"endLine":240,"endCol":35,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["sLines","{lq_tmp$x##10094 : (Turtle.Shell.Shell Turtle.Line.Line)^\"lq_tmp$x##1319\" | lq_tmp$x##10094 == sLines##a6uV}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":47,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824598","{lq_tmp$x##5246 : GHC.Types.Double^\"lq_tmp$x##5245\" | lq_tmp$x##5246 == lq_anf$##7205759403792824597##d83X}"]]],[{"spanInfo":{"startLine":130,"endLine":130,"endCol":19,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824574","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":93,"startCol":90,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a b .\nlq_tmp$x##5795:(a, b) -> {lq_tmp$x##5792 : b | lq_tmp$x##5792 == snd lq_tmp$x##5795}"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":28,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","{lq_tmp$x##6031 : GHC.Types.Int | lq_tmp$x##6031 > 0\n                                  && lq_tmp$x##6031 == n##a6o3}"]]],[{"spanInfo":{"startLine":235,"endLine":235,"endCol":14,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lastDay","Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":12,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.blankLine","{lq_tmp$x##10644 : (GHC.Types.IO ())^\"lq_tmp$x##1216\" | lq_tmp$x##10644 == Main.blankLine}"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":9,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a . lq_tmp$x##99:a -> (GHC.Types.IO a)"]]],[{"spanInfo":{"startLine":222,"endLine":222,"endCol":20,"startCol":18,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{ts : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len ts >= n##a6o3 * 7}"]]],[{"spanInfo":{"startLine":120,"endLine":120,"endCol":14,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.fromLastNDays","lq_tmp$x##4308:GHC.Integer.Type.Integer -> lq_tmp$x##4309:Data.Time.Calendar.Days.Day -> lq_tmp$x##4310:[Main.Entry] -> [Main.Entry]"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":40,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["today","{lq_tmp$x##4888 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##4849\" \"lq_tmp$x##207\" | $k_##4848[VV##4847:=lq_tmp$x##4888][lq_tmp$x##4838:=GHC.Base.$fFunctorIO][lq_tmp$x##4839:=Data.Time.Clock.Internal.UTCTime.utctDay][lq_tmp$x##4840:=Data.Time.Clock.POSIX.getCurrentTime][lq_tmp$x##4850:=lq_tmp$x##4888]\n                                                                                 && lq_tmp$x##4888 == today##a61m}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":51,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"[(Data.Time.Calendar.Days.Day, Main.Weight)]"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":54,"startCol":10,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824573","xcmp:{lq_tmp$x##4438 : Main.Entry^\"lq_tmp$x##4437\" | $k_##4436[VV##4435:=lq_tmp$x##4438][lq_tmp$db##14:=lq_anf$##7205759403792824569##d83v][lq_tmp$db##16:=lq_anf$##7205759403792824572##d83y]} -> {lq_tmp$x##4434 : GHC.Types.Bool^\"lq_tmp$x##4433\" \"lq_tmp$x##4441\" | $k_##4432[VV##4431:=lq_tmp$x##4434][lq_tmp$db##14:=lq_anf$##7205759403792824569##d83v][lq_tmp$db##16:=lq_anf$##7205759403792824572##d83y]\n                                                                                                                                                                                                                                                                        && $k_##4440[VV##4439:=lq_tmp$x##4434][lq_tmp$db##14:=lq_anf$##7205759403792824569##d83v][lq_tmp$db##16:=lq_anf$##7205759403792824572##d83y][lq_tmp$x##4442:=xcmp]}"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":34,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824583","{lq_tmp$x##4866 : GHC.Integer.Type.Integer | lq_tmp$x##4866 == 8}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":14,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windows","{lq_tmp$x##6103 : [{lq_tmp$x##6150 : [{lq_tmp$x##6143 : ({lq_tmp$x##6139 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6111\" | $k_##6110[VV##6109:=lq_tmp$x##6139][VV##6119:=lq_tmp$x##6143][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i]}, {lq_tmp$x##6140 : Main.Weight^\"lq_tmp$x##6114\" | $k_##6113[VV##6112:=lq_tmp$x##6140][VV##6119:=lq_tmp$x##6143][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i]})<\\lq_tmp$x##6141 VV -> {lq_tmp$x##6142 : Main.Weight^\"lq_tmp$x##6118\" | $k_##6117[VV##6116:=lq_tmp$x##6142][VV##6119:=lq_tmp$x##6143][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6115:=lq_tmp$x##6141]}>^\"lq_tmp$x##6121\" | $k_##6120[VV##6119:=lq_tmp$x##6143][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i]}]<\\lq_tmp$x##6144 VV -> {lq_tmp$x##6149 : ({lq_tmp$x##6145 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6125\" | $k_##6124[VV##6123:=lq_tmp$x##6145][VV##6133:=lq_tmp$x##6149][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6122:=lq_tmp$x##6144]}, {lq_tmp$x##6146 : Main.Weight^\"lq_tmp$x##6128\" | $k_##6127[VV##6126:=lq_tmp$x##6146][VV##6133:=lq_tmp$x##6149][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6122:=lq_tmp$x##6144]})<\\lq_tmp$x##6147 VV -> {lq_tmp$x##6148 : Main.Weight^\"lq_tmp$x##6132\" | $k_##6131[VV##6130:=lq_tmp$x##6148][VV##6133:=lq_tmp$x##6149][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6122:=lq_tmp$x##6144][lq_tmp$x##6129:=lq_tmp$x##6147]}>^\"lq_tmp$x##6135\" | $k_##6134[VV##6133:=lq_tmp$x##6149][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6122:=lq_tmp$x##6144]}>^\"lq_tmp$x##6138\" | $k_##6137[VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i]}] | len lq_tmp$x##6103 == len lq_anf$##7205759403792824618##d84i}"]]],[{"spanInfo":{"startLine":149,"endLine":149,"endCol":54,"startCol":46,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.entryDay","lq_tmp$x##8791:Main.Entry -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":12,"startCol":11,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["i","GHC.Types.Int"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":14,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","{lq_tmp$x##4817 : [GHC.Types.Char] | lq_tmp$x##4817 ~~ lq_anf$##7205759403792824582##d83I\n                                     && len lq_tmp$x##4817 == strLen lq_anf$##7205759403792824582##d83I}"]]],[{"spanInfo":{"startLine":120,"endLine":120,"endCol":16,"startCol":15,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":148,"endLine":148,"endCol":20,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["earliestEntry","{lq_tmp$x##8898 : Main.Entry^\"lq_tmp$x##8897\" \"lq_tmp$x##647\" | $k_##8896[VV##8895:=lq_tmp$x##8898][lq_tmp$x##8887:=Data.Foldable.$36$fFoldable$91$$93$][lq_tmp$x##8888:=lq_anf$##7205759403792824683##d85l][lq_tmp$x##8889:=entries##a64z]}"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":28,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824622","{lq_tmp$x##6459 : [GHC.Types.Char] | lq_tmp$x##6459 ~~ lq_anf$##7205759403792824621##d84l\n                                     && len lq_tmp$x##6459 == strLen lq_anf$##7205759403792824621##d84l}"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":36,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(Data.HashMap.Base.HashMap GHC.Types.Int Main.Weight)"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":16,"startCol":8,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824662","{lq_tmp$x##8041 : GHC.Types.Bool | lq_tmp$x##8041 <=> d1##a64F /= d2##a64H}"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":19,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Time.Clock.Internal.UTCTime.utctDay","lq_tmp$x##4141:Data.Time.Clock.Internal.UTCTime.UTCTime -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":38,"startCol":24,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Time.Clock.POSIX.getCurrentTime","{lq_tmp$x##4858 : (GHC.Types.IO Data.Time.Clock.Internal.UTCTime.UTCTime)^\"lq_tmp$x##454\" | lq_tmp$x##4858 == Data.Time.Clock.POSIX.getCurrentTime}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":11,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["text","Data.Text.Internal.Text"]]],[{"spanInfo":{"startLine":235,"endLine":235,"endCol":46,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["latest","{lq_tmp$x##7548 : Main.Entry | lq_tmp$x##7548 == latest##a6uS}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":50,"startCol":42,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Text.Show.unpack","lq_tmp$x##9647:Data.Text.Internal.Text -> {lq_tmp$x##9645 : [GHC.Types.Char] | len lq_tmp$x##9645 == tlen lq_tmp$x##9647}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":27,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.Weight","lq_tmp$x##9553:GHC.Types.Double -> Main.Weight"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":37,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824526","xcmp:{lq_tmp$x##3250 : [{lq_tmp$x##3247 : GHC.Types.Char^\"lq_tmp$x##3239\" | $k_##3238[VV##3237:=lq_tmp$x##3247][VV##3244:=lq_tmp$x##3250][lq_tmp$db##14:=Turtle.Line.unsafeTextToLine][lq_tmp$db##16:=Data.Text.pack]}]<\\lq_tmp$x##3248 VV -> {lq_tmp$x##3249 : GHC.Types.Char^\"lq_tmp$x##3243\" | $k_##3242[VV##3241:=lq_tmp$x##3249][VV##3244:=lq_tmp$x##3250][lq_tmp$db##14:=Turtle.Line.unsafeTextToLine][lq_tmp$db##16:=Data.Text.pack][lq_tmp$x##3240:=lq_tmp$x##3248]}>^\"lq_tmp$x##3246\" | $k_##3245[VV##3244:=lq_tmp$x##3250][lq_tmp$db##14:=Turtle.Line.unsafeTextToLine][lq_tmp$db##16:=Data.Text.pack]} -> {lq_tmp$x##3236 : Turtle.Line.Line^\"lq_tmp$x##3235\" \"lq_tmp$x##3253\" | $k_##3234[VV##3233:=lq_tmp$x##3236][lq_tmp$db##14:=Turtle.Line.unsafeTextToLine][lq_tmp$db##16:=Data.Text.pack]\nk_##3252[VV##3251:=lq_tmp$x##3236][lq_tmp$db##14:=Turtle.Line.unsafeTextToLine][lq_tmp$db##16:=Data.Text.pack][lq_tmp$x##3254:=xcmp]}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":17,"startCol":15,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","[Main.Entry]"]]],[{"spanInfo":{"startLine":250,"endLine":250,"endCol":34,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a .\n{lq_tmp$x##10046 : (GHC.Maybe.Maybe a) | isJust lq_tmp$x##10046 <=> false}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":45,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a .\n{lq_tmp$x##7717 : (GHC.Maybe.Maybe a) | isJust lq_tmp$x##7717 <=> false}"]]],[{"spanInfo":{"startLine":131,"endLine":131,"endCol":39,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824575","{lq_tmp$x##4521 : GHC.Types.Int | lq_tmp$x##4521 >= 0\n                                  && lq_tmp$x##4521 == len heading##a64u}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":57,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824648","(GHC.Maybe.Maybe {lq_tmp$x##7380 : Main.Weight^\"lq_tmp$x##7379\" \"lq_tmp$x##605\" | $k_##7378[VV##7377:=lq_tmp$x##7380][lq_tmp$x##7371:=GHC.Classes.$fEqInt][lq_tmp$x##7372:=Data.Hashable.Class.$fHashableInt][lq_tmp$x##7373:=lq_anf$##7205759403792824647##d84L][lq_tmp$x##7374:=dMap##a6nV]})"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":57,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(Turtle.Shell.Shell {lq_tmp$x##3570 : Turtle.Line.Line^\"lq_tmp$x##3569\" \"lq_tmp$x##520\" | $k_##3568[VV##3567:=lq_tmp$x##3570][lq_tmp$x##513:=orig##a5yM][lq_tmp$x##516:=lq_anf$##7205759403792824536##d82Y]})"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":46,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824558","(GHC.Maybe.Maybe {lq_tmp$x##4030 : (GHC.Types.IO {lq_tmp$x##4029 : ()^\"lq_tmp$x##4025\" | $k_##4024[VV##4023:=lq_tmp$x##4029][VV##4026:=lq_tmp$x##4030][lq_tmp$x##4014:=GHC.Base.$fFunctorMaybe][lq_tmp$x##4015:=showSavedWeight##a5yI][lq_tmp$x##4016:=maybeWeight##a5yH]})^\"lq_tmp$x##4028\" \"lq_tmp$x##207\" | $k_##4027[VV##4026:=lq_tmp$x##4030][lq_tmp$x##4014:=GHC.Base.$fFunctorMaybe][lq_tmp$x##4015:=showSavedWeight##a5yI][lq_tmp$x##4016:=maybeWeight##a5yH]})"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":57,"startCol":42,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824666","xcmp:{lq_tmp$x##8146 : GHC.Types.Double^\"lq_tmp$x##8145\" | $k_##8144[VV##8143:=lq_tmp$x##8146][lq_tmp$db##14:=lq_anf$##7205759403792824665##d853][lq_tmp$db##16:=Main.Weight]} -> {lq_tmp$x##8142 : ({lq_tmp$x##8138 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8127\" \"lq_tmp$x##8149\" | $k_##8126[VV##8125:=lq_tmp$x##8138][VV##8135:=lq_tmp$x##8142][VV##8147:=lq_tmp$x##8138][VV##8150:=lq_tmp$x##8139][VV##8154:=lq_tmp$x##8141][VV##8157:=lq_tmp$x##8142][lq_tmp$db##14:=lq_anf$##7205759403792824665##d853][lq_tmp$db##16:=Main.Weight]\n                                                                                                                                                                                                                                                                                       && $k_##8148[VV##8147:=lq_tmp$x##8138][VV##8150:=lq_tmp$x##8139][VV##8154:=lq_tmp$x##8141][VV##8157:=lq_tmp$x##8142][lq_tmp$db##14:=lq_anf$##7205759403792824665##d853][lq_tmp$db##16:=Main.Weight][lq_tmp$x##8160:=xcmp]}, {lq_tmp$x##8139 : Main.Weight^\"lq_tmp$x##8130\" \"lq_tmp$x##8152\" | $k_##8129[VV##8128:=lq_tmp$x##8139][VV##8135:=lq_tmp$x##8142][VV##8147:=lq_tmp$x##8138][VV##8150:=lq_tmp$x##8139][VV##8154:=lq_tmp$x##8141][VV##8157:=lq_tmp$x##8142][lq_tmp$db##14:=lq_anf$##7205759403792824665##d853][lq_tmp$db##16:=Main.Weight]\nk_##8151[VV##8147:=lq_tmp$x##8138][VV##8150:=lq_tmp$x##8139][VV##8154:=lq_tmp$x##8141][VV##8157:=lq_tmp$x##8142][lq_tmp$db##14:=lq_anf$##7205759403792824665##d853][lq_tmp$db##16:=Main.Weight][lq_tmp$x##8160:=xcmp]})<\\lq_tmp$x##8140 VV -> {lq_tmp$x##8141 : Main.Weight^\"lq_tmp$x##8134\" \"lq_tmp$x##8156\" | $k_##8133[VV##8132:=lq_tmp$x##8141][VV##8135:=lq_tmp$x##8142][VV##8147:=lq_tmp$x##8138][VV##8150:=lq_tmp$x##8139][VV##8154:=lq_tmp$x##8141][VV##8157:=lq_tmp$x##8142][lq_tmp$db##14:=lq_anf$##7205759403792824665##d853][lq_tmp$db##16:=Main.Weight][lq_tmp$x##8131:=lq_tmp$x##8140]\nk_##8155[VV##8147:=lq_tmp$x##8138][VV##8150:=lq_tmp$x##8139][VV##8154:=lq_tmp$x##8141][VV##8157:=lq_tmp$x##8142][lq_tmp$db##14:=lq_anf$##7205759403792824665##d853][lq_tmp$db##16:=Main.Weight][lq_tmp$x##8160:=xcmp]}>^\"lq_tmp$x##8137\" \"lq_tmp$x##8159\" | $k_##8136[VV##8135:=lq_tmp$x##8142][lq_tmp$db##14:=lq_anf$##7205759403792824665##d853][lq_tmp$db##16:=Main.Weight]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         && $k_##8158[VV##8157:=lq_tmp$x##8142][lq_tmp$db##14:=lq_anf$##7205759403792824665##d853][lq_tmp$db##16:=Main.Weight][lq_tmp$x##8160:=xcmp]}"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":43,"startCol":19,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"[Main.Entry]"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":105,"startCol":76,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824615","[{lq_tmp$x##5909 : GHC.Types.Double^\"lq_tmp$x##5908\" \"lq_tmp$x##207\" | $k_##5907[VV##5906:=lq_tmp$x##5909][lq_tmp$x##5880:=GHC.Base.$36$fFunctor$91$$93$][lq_tmp$x##5881:=lq_anf$##7205759403792824614##d84e][lq_tmp$x##5882:=window##a6uA]}]"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":76,"startCol":44,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824709","(GHC.Types.IO {lq_tmp$x##10302 : [{lq_tmp$x##10299 : Turtle.Line.Line^\"lq_tmp$x##10291\" | $k_##10290[VV##10289:=lq_tmp$x##10299][VV##10296:=lq_tmp$x##10302][lq_tmp$x##10280:=Control.Monad.IO.Class.$fMonadIOIO][lq_tmp$x##10281:=lq_anf$##7205759403792824707##d85J][lq_tmp$x##10282:=lq_anf$##7205759403792824708##d85K]}]<\\lq_tmp$x##10300 VV -> {lq_tmp$x##10301 : Turtle.Line.Line^\"lq_tmp$x##10295\" | $k_##10294[VV##10293:=lq_tmp$x##10301][VV##10296:=lq_tmp$x##10302][lq_tmp$x##10280:=Control.Monad.IO.Class.$fMonadIOIO][lq_tmp$x##10281:=lq_anf$##7205759403792824707##d85J][lq_tmp$x##10282:=lq_anf$##7205759403792824708##d85K][lq_tmp$x##10292:=lq_tmp$x##10300]}>^\"lq_tmp$x##10298\" \"lq_tmp$x##764\" | $k_##10297[VV##10296:=lq_tmp$x##10302][lq_tmp$x##10280:=Control.Monad.IO.Class.$fMonadIOIO][lq_tmp$x##10281:=lq_anf$##7205759403792824707##d85J][lq_tmp$x##10282:=lq_anf$##7205759403792824708##d85K]})"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":106,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Tuple.(,,)","forall a b c <p3 :: b-> a c -> Bool, p2 :: a b -> Bool> .\nlq_tmp$x##5971:a -> lq_tmp$x##5972:{lq_tmp$x##5957 : b<p2 lq_tmp$x##5971> | true} -> lq_tmp$x##5973:{lq_tmp$x##5958 : c<p3 lq_tmp$x##5972 lq_tmp$x##5971> | true} -> {lq_tmp$x##5967 : (a, b, c)<\\lq_tmp$x##5974 VV -> {lq_tmp$x##5963 : b<p2 lq_tmp$x##5974> | true}, \\lq_tmp$x##5975 lq_tmp$x##5976 VV -> {lq_tmp$x##5966 : c<p3 lq_tmp$x##5975 lq_tmp$x##5976> | true}> | x_Tuple33 lq_tmp$x##5967 == lq_tmp$x##5973\n                                                                                                                                                                                                                                                                                                                                                                             && x_Tuple32 lq_tmp$x##5967 == lq_tmp$x##5972\n                                                                                                                                                                                                                                                                                                                                                                             && x_Tuple31 lq_tmp$x##5967 == lq_tmp$x##5971}"]]],[{"spanInfo":{"startLine":124,"endLine":126,"endCol":41,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{lq_tmp$x##4792 : (GHC.Base.Monad GHC.Types.IO) | lq_tmp$x##4792 == GHC.Base.$fMonadIO}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":91,"startCol":69,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824554","{lq_tmp$x##3875 : [GHC.Types.Char] | lq_tmp$x##3875 ~~ lq_anf$##7205759403792824553##d83f\n                                     && len lq_tmp$x##3875 == strLen lq_anf$##7205759403792824553##d83f}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":54,"startCol":52,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["ds","{lq_tmp$x##5349 : [GHC.Types.Double] | len lq_tmp$x##5349 > 0\n                                       && len lq_tmp$x##5349 >= 0\n                                       && lq_tmp$x##5349 == ds##a6dv}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":55,"startCol":31,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##5367 : GHC.Types.Double^\"lq_tmp$x##5366\" | lq_tmp$x##5367 == lq_anf$##7205759403792824604##d844}"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":19,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.updateSavedWeights","lq_tmp$x##3509:Filesystem.Path.Internal.FilePath -> lq_tmp$x##3510:Main.Weight -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":66,"startCol":53,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824611","{lq_tmp$x##5745 : ({lq_tmp$x##5741 : a^\"lq_tmp$x##5730\" | $k_##5729[VV##5728:=lq_tmp$x##5741][VV##5738:=lq_tmp$x##5745][lq_tmp$x##5726:=window##a6uA]}, {lq_tmp$x##5742 : Main.Weight^\"lq_tmp$x##5733\" | $k_##5732[VV##5731:=lq_tmp$x##5742][VV##5738:=lq_tmp$x##5745][lq_tmp$x##5726:=window##a6uA]})<\\lq_tmp$x##5743 VV -> {lq_tmp$x##5744 : Main.Weight^\"lq_tmp$x##5737\" | $k_##5736[VV##5735:=lq_tmp$x##5744][VV##5738:=lq_tmp$x##5745][lq_tmp$x##5726:=window##a6uA][lq_tmp$x##5734:=lq_tmp$x##5743]}>^\"lq_tmp$x##5740\" | $k_##5739[VV##5738:=lq_tmp$x##5745][lq_tmp$x##5726:=window##a6uA]}"]]],[{"spanInfo":{"startLine":223,"endLine":223,"endCol":15,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824617","{lq_tmp$x##6005 : GHC.Prim.Int# | lq_tmp$x##6005 == 7}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":57,"startCol":44,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824642","Data.Time.Clock.Internal.UTCTime.UTCTime"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":29,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a .\n{lq_tmp$x##8425 : (GHC.Maybe.Maybe a) | isJust lq_tmp$x##8425 <=> false}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":73,"startCol":60,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824645","Main.Weight"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":62,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824607","xcmp:{lq_tmp$x##5445 : [{lq_tmp$x##5442 : GHC.Types.Double^\"lq_tmp$x##5434\" | $k_##5433[VV##5432:=lq_tmp$x##5442][VV##5439:=lq_tmp$x##5445][lq_tmp$db##14:=lq_anf$##7205759403792824605##d845][lq_tmp$db##16:=lq_anf$##7205759403792824606##d846]}]<\\lq_tmp$x##5443 VV -> {lq_tmp$x##5444 : GHC.Types.Double^\"lq_tmp$x##5438\" | $k_##5437[VV##5436:=lq_tmp$x##5444][VV##5439:=lq_tmp$x##5445][lq_tmp$db##14:=lq_anf$##7205759403792824605##d845][lq_tmp$db##16:=lq_anf$##7205759403792824606##d846][lq_tmp$x##5435:=lq_tmp$x##5443]}>^\"lq_tmp$x##5441\" | $k_##5440[VV##5439:=lq_tmp$x##5445][lq_tmp$db##14:=lq_anf$##7205759403792824605##d845][lq_tmp$db##16:=lq_anf$##7205759403792824606##d846]} -> {lq_tmp$x##5431 : GHC.Types.Double^\"lq_tmp$x##5430\" \"lq_tmp$x##5448\" | $k_##5429[VV##5428:=lq_tmp$x##5431][lq_tmp$db##14:=lq_anf$##7205759403792824605##d845][lq_tmp$db##16:=lq_anf$##7205759403792824606##d846]\nk_##5447[VV##5446:=lq_tmp$x##5431][lq_tmp$db##14:=lq_anf$##7205759403792824605##d845][lq_tmp$db##16:=lq_anf$##7205759403792824606##d846][lq_tmp$x##5449:=xcmp]}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":91,"startCol":53,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824555","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":17,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["filename","{lq_tmp$x##10198 : Filesystem.Path.Internal.FilePath^\"lq_tmp$x##10197\" | lq_anf$##7205759403792824704##d85G ~~ lq_tmp$x##10198\n                                                                         && len lq_anf$##7205759403792824704##d85G == stringlen lq_tmp$x##10198}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":57,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824535","(GHC.Types.IO Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":41,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824514","{lq_tmp$x##2808 : Turtle.Options.ArgName^\"lq_tmp$x##2807\" | lq_anf$##7205759403792824513##d82B ~~ lq_tmp$x##2808\n                                                            && len lq_anf$##7205759403792824513##d82B == stringlen lq_tmp$x##2808}"]]],[{"spanInfo":{"startLine":67,"endLine":71,"endCol":46,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824559","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":222,"endLine":222,"endCol":15,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.movingAverages","lq_tmp$x##5585:{n : GHC.Types.Int | n > 0} -> lq_tmp$x##5586:{ts : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len ts >= lq_tmp$x##5585 * 7} -> [(Data.Time.Calendar.Days.Day, Data.Time.Calendar.Days.Day, GHC.Types.Double)]"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":9,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["parser","{lq_tmp$x##2999 : (Options.Applicative.Types.Parser {lq_tmp$x##2998 : (GHC.Maybe.Maybe {lq_tmp$x##2997 : Main.Weight^\"lq_tmp$x##2987\" \"lq_tmp$x##3023\" | $k_##2986[VV##2985:=lq_tmp$x##2997][VV##2988:=lq_tmp$x##2998][VV##2991:=lq_tmp$x##2999][lq_tmp$db##14:=lq_anf$##7205759403792824519##d82H][lq_tmp$db##16:=lq_anf$##7205759403792824520##d82I][lq_tmp$x##2975:=parserMaybeDouble##a5Ts][lq_tmp$x##3011:=parserMaybeDouble##a5Ts][xcmp:=Main.Weight]\n                                                                                                                                                         && $k_##3022[VV##3021:=lq_tmp$x##2997][lq_tmp$db##14:=lq_anf$##7205759403792824519##d82H][lq_tmp$db##16:=lq_anf$##7205759403792824520##d82I][lq_tmp$x##3011:=parserMaybeDouble##a5Ts][lq_tmp$x##3030:=Main.Weight][xcmp:=Main.Weight]})^\"lq_tmp$x##2990\" \"lq_tmp$x##3026\" | $k_##2989[VV##2988:=lq_tmp$x##2998][VV##2991:=lq_tmp$x##2999][lq_tmp$db##14:=lq_anf$##7205759403792824519##d82H][lq_tmp$db##16:=lq_anf$##7205759403792824520##d82I][lq_tmp$x##2975:=parserMaybeDouble##a5Ts][lq_tmp$x##3011:=parserMaybeDouble##a5Ts][xcmp:=Main.Weight]\n                                                                                                                                                                                                                                                                                                                                                                                                                                     && $k_##3025[VV##3024:=lq_tmp$x##2998][lq_tmp$db##14:=lq_anf$##7205759403792824519##d82H][lq_tmp$db##16:=lq_anf$##7205759403792824520##d82I][lq_tmp$x##3011:=parserMaybeDouble##a5Ts][lq_tmp$x##3030:=Main.Weight][xcmp:=Main.Weight]})^\"lq_tmp$x##2993\" \"lq_tmp$x##3029\" | $k_##2992[VV##2991:=lq_tmp$x##2999][lq_tmp$db##14:=lq_anf$##7205759403792824519##d82H][lq_tmp$db##16:=lq_anf$##7205759403792824520##d82I][lq_tmp$x##2975:=parserMaybeDouble##a5Ts][lq_tmp$x##3011:=parserMaybeDouble##a5Ts][xcmp:=Main.Weight]\nk_##3028[VV##3027:=lq_tmp$x##2999][lq_tmp$db##14:=lq_anf$##7205759403792824519##d82H][lq_tmp$db##16:=lq_anf$##7205759403792824520##d82I][lq_tmp$x##3011:=parserMaybeDouble##a5Ts][lq_tmp$x##3030:=Main.Weight][xcmp:=Main.Weight]}"]]],[{"spanInfo":{"startLine":87,"endLine":87,"endCol":10,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.parseArgs","(GHC.Types.IO (GHC.Maybe.Maybe Main.Weight))"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":24,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["path","Filesystem.Path.Internal.FilePath"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":51,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["maybeWeight","{lq_tmp$x##3783 : (GHC.Maybe.Maybe Main.Weight)^\"lq_tmp$x##1218\" | lq_tmp$x##3783 == maybeWeight##a5yH}"]]],[{"spanInfo":{"startLine":67,"endLine":67,"endCol":14,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.saveWeightArg","lq_tmp$x##3721:Filesystem.Path.Internal.FilePath -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":76,"startCol":19,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(GHC.Types.IO {lq_tmp$x##10362 : [{lq_tmp$x##10359 : Main.Entry^\"lq_tmp$x##10351\" | $k_##10350[VV##10349:=lq_tmp$x##10359][VV##10356:=lq_tmp$x##10362][lq_tmp$x##10330:=GHC.Base.$fFunctorIO][lq_tmp$x##10331:=lq_anf$##7205759403792824706##d85I][lq_tmp$x##10332:=lq_anf$##7205759403792824709##d85L]}]<\\lq_tmp$x##10360 VV -> {lq_tmp$x##10361 : Main.Entry^\"lq_tmp$x##10355\" | $k_##10354[VV##10353:=lq_tmp$x##10361][VV##10356:=lq_tmp$x##10362][lq_tmp$x##10330:=GHC.Base.$fFunctorIO][lq_tmp$x##10331:=lq_anf$##7205759403792824706##d85I][lq_tmp$x##10332:=lq_anf$##7205759403792824709##d85L][lq_tmp$x##10352:=lq_tmp$x##10360]}>^\"lq_tmp$x##10358\" \"lq_tmp$x##207\" | $k_##10357[VV##10356:=lq_tmp$x##10362][lq_tmp$x##10330:=GHC.Base.$fFunctorIO][lq_tmp$x##10331:=lq_anf$##7205759403792824706##d85I][lq_tmp$x##10332:=lq_anf$##7205759403792824709##d85L]})"]]],[{"spanInfo":{"startLine":236,"endLine":236,"endCol":29,"startCol":18,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["earliestDay","{lq_tmp$x##7587 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##457\" | lq_tmp$x##7587 == earliestDay##a6uT}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":8,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.average","lq_tmp$x##5303:{ds : [GHC.Types.Double] | len ds > 0} -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":32,"startCol":10,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824539","{lq_tmp$x##3602 : Filesystem.Path.Internal.FilePath^\"lq_tmp$x##3601\" | lq_anf$##7205759403792824538##d830 ~~ lq_tmp$x##3602\n                                                                       && len lq_anf$##7205759403792824538##d830 == stringlen lq_tmp$x##3602}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":44,"startCol":8,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824717","{lq_tmp$x##10527 : GHC.Types.Bool | lq_tmp$x##10527 <=> lq_anf$##7205759403792824711##d85N >= lq_anf$##7205759403792824716##d85S}"]]],[{"spanInfo":{"startLine":136,"endLine":136,"endCol":34,"startCol":15,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##4984 : [{lq_tmp$x##4995 : Main.Entry^\"lq_tmp$x##4994\" | $k_##4993[VV##4992:=lq_tmp$x##4995][lq_tmp$x##4988:=n##a64v][lq_tmp$x##4989:=lq_anf$##7205759403792824585##d83L]}] | (n##a64v >= 0 => len lq_tmp$x##4984 == (if len lq_anf$##7205759403792824585##d83L < n##a64v then len lq_anf$##7205759403792824585##d83L else n##a64v))\n                                                                                                                                                                                        && (not (n##a64v >= 0) => len lq_tmp$x##4984 == 0)}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":40,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824532","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":31,"startCol":19,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824570","lq_tmp$x##4345:Data.Time.Calendar.Days.Day -> GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":85,"startCol":42,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824517","{lq_tmp$x##2845 : (Data.Optional.Optional Turtle.Options.HelpMessage)^\"lq_tmp$x##2843\" | lq_anf$##7205759403792824516##d82E ~~ lq_tmp$x##2845\n                                                                                         && len lq_anf$##7205759403792824516##d82E == stringlen lq_tmp$x##2845}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":89,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":14,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["updated","(Turtle.Shell.Shell {lq_tmp$x##3570 : Turtle.Line.Line^\"lq_tmp$x##3569\" \"lq_tmp$x##520\" | $k_##3568[VV##3567:=lq_tmp$x##3570][lq_tmp$x##513:=orig##a5yM][lq_tmp$x##516:=lq_anf$##7205759403792824536##d82Y]})"]]],[{"spanInfo":{"startLine":149,"endLine":149,"endCol":63,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##8820 : Main.Entry^\"lq_tmp$x##8819\" \"lq_tmp$x##635\" | $k_##8818[VV##8817:=lq_tmp$x##8820][lq_tmp$x##8809:=Data.Foldable.$36$fFoldable$91$$93$][lq_tmp$x##8810:=lq_anf$##7205759403792824682##d85k][lq_tmp$x##8811:=entries##a64z]}"]]],[{"spanInfo":{"startLine":205,"endLine":208,"endCol":61,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{lq_tmp$x##7040 : (GHC.Base.Monad GHC.Types.IO) | lq_tmp$x##7040 == GHC.Base.$fMonadIO}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":20,"startCol":18,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["ds","[Data.Time.Calendar.Days.Day]"]]],[{"spanInfo":{"startLine":222,"endLine":228,"endCol":30,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824619","lq_tmp$x##6210:{lq_tmp$x##6196 : [{lq_tmp$x##6189 : ({lq_tmp$x##6220 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6219\" \"lq_tmp$x##5601\" | $k_##6218[VV##6217:=lq_tmp$x##6220]\n                                                                                                                                       && $k_##5600[VV##5599:=lq_tmp$x##6220][VV##5609:=lq_tmp$x##6189][VV##5626:=lq_tmp$x##6196][lq_tmp$x##6185:=lq_tmp$x##6220]}, {lq_tmp$x##6186 : Main.Weight^\"lq_tmp$x##5604\" | $k_##5603[VV##5602:=lq_tmp$x##6186][VV##5609:=lq_tmp$x##6189][VV##5626:=lq_tmp$x##6196]})<\\lq_tmp$x##6211 VV -> {lq_tmp$x##6188 : Main.Weight^\"lq_tmp$x##5608\" | $k_##5607[VV##5606:=lq_tmp$x##6188][VV##5609:=lq_tmp$x##6189][VV##5626:=lq_tmp$x##6196][lq_tmp$x##5605:=lq_tmp$x##6211][lq_tmp$x##6187:=lq_tmp$x##6211][lq_tmp$x##6207:=lq_tmp$x##6211]}>^\"lq_tmp$x##5611\" | $k_##5610[VV##5609:=lq_tmp$x##6189][VV##5626:=lq_tmp$x##6196]}]<\\lq_tmp$x##6213 VV -> {lq_tmp$x##6195 : ({lq_tmp$x##6220 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6219\" \"lq_tmp$x##5615\" | $k_##5614[VV##5613:=lq_tmp$x##6220][VV##5623:=lq_tmp$x##6195][VV##5626:=lq_tmp$x##6196][lq_tmp$x##5612:=lq_tmp$x##6213][lq_tmp$x##6190:=lq_tmp$x##6213][lq_tmp$x##6191:=lq_tmp$x##6220][lq_tmp$x##6209:=lq_tmp$x##6213]}, {lq_tmp$x##6192 : Main.Weight^\"lq_tmp$x##5618\" | $k_##5617[VV##5616:=lq_tmp$x##6192][VV##5623:=lq_tmp$x##6195][VV##5626:=lq_tmp$x##6196][lq_tmp$x##5612:=lq_tmp$x##6213][lq_tmp$x##6190:=lq_tmp$x##6213][lq_tmp$x##6209:=lq_tmp$x##6213]})<\\lq_tmp$x##6212 VV -> {lq_tmp$x##6194 : Main.Weight^\"lq_tmp$x##5622\" | $k_##5621[VV##5620:=lq_tmp$x##6194][VV##5623:=lq_tmp$x##6195][VV##5626:=lq_tmp$x##6196][lq_tmp$x##5612:=lq_tmp$x##6213][lq_tmp$x##5619:=lq_tmp$x##6212][lq_tmp$x##6190:=lq_tmp$x##6213][lq_tmp$x##6193:=lq_tmp$x##6212][lq_tmp$x##6208:=lq_tmp$x##6212][lq_tmp$x##6209:=lq_tmp$x##6213]}>^\"lq_tmp$x##5625\" | $k_##5624[VV##5623:=lq_tmp$x##6195][VV##5626:=lq_tmp$x##6196][lq_tmp$x##5612:=lq_tmp$x##6213][lq_tmp$x##6190:=lq_tmp$x##6213][lq_tmp$x##6209:=lq_tmp$x##6213]}>^\"lq_tmp$x##5628\" | $k_##5627[VV##5626:=lq_tmp$x##6196]} -> {lq_tmp$x##6205 : ({lq_tmp$x##6220 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6219\" \"lq_tmp$x##5632\" | $k_##6218[VV##6217:=lq_tmp$x##6220]\nk_##5631[VV##5630:=lq_tmp$x##6220][VV##5648:=lq_tmp$x##6205][lq_tmp$x##6197:=lq_tmp$x##6220][window##a6uA:=lq_tmp$x##6210]}, {lq_tmp$x##6220 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6219\" \"lq_tmp$x##5635\" | $k_##6218[VV##6217:=lq_tmp$x##6220]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          && $k_##5634[VV##5633:=lq_tmp$x##6220][VV##5648:=lq_tmp$x##6205][lq_tmp$x##6198:=lq_tmp$x##6220][window##a6uA:=lq_tmp$x##6210]}, {lq_tmp$x##6199 : GHC.Types.Double^\"lq_tmp$x##5638\" | $k_##5637[VV##5636:=lq_tmp$x##6199][VV##5648:=lq_tmp$x##6205][window##a6uA:=lq_tmp$x##6210]})<\\lq_tmp$x##6214 VV -> {lq_tmp$x##6220 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6219\" \"lq_tmp$x##5642\" | $k_##5641[VV##5640:=lq_tmp$x##6220][VV##5648:=lq_tmp$x##6205][lq_tmp$x##5639:=lq_tmp$x##6214][lq_tmp$x##6200:=lq_tmp$x##6214][lq_tmp$x##6201:=lq_tmp$x##6220][window##a6uA:=lq_tmp$x##6210]}, \\lq_tmp$x##6215 lq_tmp$x##6216 VV -> {lq_tmp$x##6204 : GHC.Types.Double^\"lq_tmp$x##5647\" | $k_##5646[VV##5645:=lq_tmp$x##6204][VV##5648:=lq_tmp$x##6205][lq_tmp$x##5643:=lq_tmp$x##6215][lq_tmp$x##5644:=lq_tmp$x##6216][lq_tmp$x##6202:=lq_tmp$x##6215][lq_tmp$x##6203:=lq_tmp$x##6216][window##a6uA:=lq_tmp$x##6210]}>^\"lq_tmp$x##5650\" | $k_##5649[VV##5648:=lq_tmp$x##6205][window##a6uA:=lq_tmp$x##6210]}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":50,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"xcmp:{lq_tmp$x##9670 : Data.Text.Internal.Text^\"lq_tmp$x##9669\" | $k_##9668[VV##9667:=lq_tmp$x##9670][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q]} -> {lq_tmp$x##9666 : (GHC.Maybe.Maybe {lq_tmp$x##9665 : Main.Weight^\"lq_tmp$x##9661\" \"lq_tmp$x##9673\" | $k_##9660[VV##9659:=lq_tmp$x##9665][VV##9662:=lq_tmp$x##9666][VV##9671:=lq_tmp$x##9665][VV##9674:=lq_tmp$x##9666][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q]\n                                                                                                                                                                                                                                                                                                                     && $k_##9672[VV##9671:=lq_tmp$x##9665][VV##9674:=lq_tmp$x##9666][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q][lq_tmp$x##9677:=xcmp]})^\"lq_tmp$x##9664\" \"lq_tmp$x##9676\" | $k_##9663[VV##9662:=lq_tmp$x##9666][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q]\nk_##9675[VV##9674:=lq_tmp$x##9666][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q][lq_tmp$x##9677:=xcmp]}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":65,"startCol":64,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["w","{lq_tmp$x##3867 : Main.Weight^\"lq_tmp$x##3821\" | $k_##3820[VV##3819:=lq_tmp$x##3867]\n                                                 && lq_tmp$x##3867 == w##a5yJ}"]]],[{"spanInfo":{"startLine":135,"endLine":135,"endCol":14,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":32,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.Entry","lq_tmp$x##9962:Data.Time.Clock.Internal.UTCTime.UTCTime -> lq_tmp$x##9963:Main.Weight -> Main.Entry"]]],[{"spanInfo":{"startLine":152,"endLine":152,"endCol":51,"startCol":41,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["filledDays","{lq_tmp$x##9070 : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len lq_tmp$x##9070 == len allDays##a6dp\n                                                                                   && len lq_tmp$x##9070 >= 0\n                                                                                   && lq_tmp$x##9070 == filledDays##a6dq}"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":62,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824627","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":47,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824597","GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":36,"startCol":34,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{lq_tmp$x##7440 : [Main.Entry]^\"lq_tmp$x##7290\" | len lq_tmp$x##7440 >= 0\n                                                  && lq_tmp$x##7440 == es##a6nS}"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":47,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824684","lq_tmp$x##9089:{lq_tmp$x##9142 : ({lq_tmp$x##9136 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##9119\" | $k_##9118[VV##9117:=lq_tmp$x##9136][VV##9133:=lq_tmp$x##9142][lq_tmp$x##9088:=leftFolder##a64A]}, {lq_tmp$x##9138 : (GHC.Maybe.Maybe {lq_tmp$x##9137 : Main.Weight^\"lq_tmp$x##9122\" | $k_##9121[VV##9120:=lq_tmp$x##9137][VV##9123:=lq_tmp$x##9138][VV##9133:=lq_tmp$x##9142][lq_tmp$x##9088:=leftFolder##a64A]})^\"lq_tmp$x##9125\" | $k_##9124[VV##9123:=lq_tmp$x##9138][VV##9133:=lq_tmp$x##9142][lq_tmp$x##9088:=leftFolder##a64A]})<\\lq_tmp$x##9139 VV -> {lq_tmp$x##9141 : (GHC.Maybe.Maybe {lq_tmp$x##9140 : Main.Weight^\"lq_tmp$x##9129\" | $k_##9128[VV##9127:=lq_tmp$x##9140][VV##9130:=lq_tmp$x##9141][VV##9133:=lq_tmp$x##9142][lq_tmp$x##9088:=leftFolder##a64A][lq_tmp$x##9126:=lq_tmp$x##9139]})^\"lq_tmp$x##9132\" | $k_##9131[VV##9130:=lq_tmp$x##9141][VV##9133:=lq_tmp$x##9142][lq_tmp$x##9088:=leftFolder##a64A][lq_tmp$x##9126:=lq_tmp$x##9139]}>^\"lq_tmp$x##9135\" \"lq_tmp$x##236\" | $k_##9134[VV##9133:=lq_tmp$x##9142][lq_tmp$x##9088:=leftFolder##a64A]} -> lq_tmp$x##9090:{lq_tmp$x##9116 : ({lq_tmp$x##9110 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##9093\" | $k_##9092[VV##9091:=lq_tmp$x##9110][VV##9107:=lq_tmp$x##9116][lq_tmp$x##9088:=leftFolder##a64A]}, {lq_tmp$x##9112 : (GHC.Maybe.Maybe {lq_tmp$x##9111 : Main.Weight^\"lq_tmp$x##9096\" | $k_##9095[VV##9094:=lq_tmp$x##9111][VV##9097:=lq_tmp$x##9112][VV##9107:=lq_tmp$x##9116][lq_tmp$x##9088:=leftFolder##a64A]})^\"lq_tmp$x##9099\" | $k_##9098[VV##9097:=lq_tmp$x##9112][VV##9107:=lq_tmp$x##9116][lq_tmp$x##9088:=leftFolder##a64A]})<\\lq_tmp$x##9113 VV -> {lq_tmp$x##9115 : (GHC.Maybe.Maybe {lq_tmp$x##9114 : Main.Weight^\"lq_tmp$x##9103\" | $k_##9102[VV##9101:=lq_tmp$x##9114][VV##9104:=lq_tmp$x##9115][VV##9107:=lq_tmp$x##9116][lq_tmp$x##9088:=leftFolder##a64A][lq_tmp$x##9100:=lq_tmp$x##9113]})^\"lq_tmp$x##9106\" | $k_##9105[VV##9104:=lq_tmp$x##9115][VV##9107:=lq_tmp$x##9116][lq_tmp$x##9088:=leftFolder##a64A][lq_tmp$x##9100:=lq_tmp$x##9113]}>^\"lq_tmp$x##9109\" \"lq_tmp$x##238\" | $k_##9108[VV##9107:=lq_tmp$x##9116][lq_tmp$x##9088:=leftFolder##a64A]} -> {lq_tmp$x##9168 : ({lq_tmp$x##9162 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##9145\" | $k_##9144[VV##9143:=lq_tmp$x##9162][VV##9159:=lq_tmp$x##9168][lq_tmp$x##9088:=leftFolder##a64A]}, {lq_tmp$x##9164 : (GHC.Maybe.Maybe {lq_tmp$x##9163 : Main.Weight^\"lq_tmp$x##9148\" | $k_##9147[VV##9146:=lq_tmp$x##9163][VV##9149:=lq_tmp$x##9164][VV##9159:=lq_tmp$x##9168][lq_tmp$x##9088:=leftFolder##a64A]})^\"lq_tmp$x##9151\" | $k_##9150[VV##9149:=lq_tmp$x##9164][VV##9159:=lq_tmp$x##9168][lq_tmp$x##9088:=leftFolder##a64A]})<\\lq_tmp$x##9165 VV -> {lq_tmp$x##9167 : (GHC.Maybe.Maybe {lq_tmp$x##9166 : Main.Weight^\"lq_tmp$x##9155\" | $k_##9154[VV##9153:=lq_tmp$x##9166][VV##9156:=lq_tmp$x##9167][VV##9159:=lq_tmp$x##9168][lq_tmp$x##9088:=leftFolder##a64A][lq_tmp$x##9152:=lq_tmp$x##9165]})^\"lq_tmp$x##9158\" | $k_##9157[VV##9156:=lq_tmp$x##9167][VV##9159:=lq_tmp$x##9168][lq_tmp$x##9088:=leftFolder##a64A][lq_tmp$x##9152:=lq_tmp$x##9165]}>^\"lq_tmp$x##9161\" \"lq_tmp$x##239\" | $k_##9160[VV##9159:=lq_tmp$x##9168][lq_tmp$x##9088:=leftFolder##a64A]}"]]],[{"spanInfo":{"startLine":178,"endLine":178,"endCol":16,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","[Main.Entry]"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":65,"startCol":49,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824707","(Turtle.Shell.Shell Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":234,"endLine":234,"endCol":49,"startCol":29,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824651","Data.Time.Clock.Internal.UTCTime.UTCTime"]]],[{"spanInfo":{"startLine":248,"endLine":248,"endCol":30,"startCol":26,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["text","{lq_tmp$x##9762 : Data.Text.Internal.Text^\"lq_tmp$x##713\" | tlen lq_tmp$x##9762 == stringlen lq_tmp$x##9762\n                                                            && 0 <= tlen lq_tmp$x##9762\n                                                            && lq_tmp$x##9762 == text##a6uZ}"]]],[{"spanInfo":{"startLine":178,"endLine":178,"endCol":13,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.dayWeightMap","lq_tmp$x##7079:[Main.Entry] -> (Data.HashMap.Base.HashMap GHC.Types.Int Main.Weight)"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":52,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824547","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":136,"endLine":136,"endCol":34,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824585","{lq_tmp$x##4960 : [{lq_tmp$x##4969 : Main.Entry^\"lq_tmp$x##4968\" | $k_##4967[VV##4966:=lq_tmp$x##4969][lq_tmp$x##4963:=es##a64w]}] | len lq_tmp$x##4960 == len es##a64w}"]]],[{"spanInfo":{"startLine":124,"endLine":124,"endCol":15,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.displayEntries","lq_tmp$x##4619:[GHC.Types.Char] -> lq_tmp$x##4620:[Main.Entry] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":53,"startCol":44,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.entryDate","lq_tmp$x##4385:Main.Entry -> Data.Time.Clock.Internal.UTCTime.UTCTime"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":51,"startCol":39,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["savedWeights","{lq_tmp$x##10433 : [{lq_tmp$x##10430 : Main.Entry^\"lq_tmp$x##10351\" | $k_##10350[VV##10349:=lq_tmp$x##10430][VV##10356:=lq_tmp$x##10433][lq_tmp$x##10330:=GHC.Base.$fFunctorIO][lq_tmp$x##10331:=lq_anf$##7205759403792824706##d85I][lq_tmp$x##10332:=lq_anf$##7205759403792824709##d85L][lq_tmp$x##10359:=lq_tmp$x##10430][lq_tmp$x##10362:=lq_tmp$x##10433]}]<\\lq_tmp$x##10434 VV -> {lq_tmp$x##10432 : Main.Entry^\"lq_tmp$x##10355\" | $k_##10354[VV##10353:=lq_tmp$x##10432][VV##10356:=lq_tmp$x##10433][lq_tmp$x##10330:=GHC.Base.$fFunctorIO][lq_tmp$x##10331:=lq_anf$##7205759403792824706##d85I][lq_tmp$x##10332:=lq_anf$##7205759403792824709##d85L][lq_tmp$x##10352:=lq_tmp$x##10434][lq_tmp$x##10360:=lq_tmp$x##10434][lq_tmp$x##10361:=lq_tmp$x##10432][lq_tmp$x##10362:=lq_tmp$x##10433][lq_tmp$x##10431:=lq_tmp$x##10434]}>^\"lq_tmp$x##10358\" \"lq_tmp$x##207\" | $k_##10357[VV##10356:=lq_tmp$x##10433][lq_tmp$x##10330:=GHC.Base.$fFunctorIO][lq_tmp$x##10331:=lq_anf$##7205759403792824706##d85I][lq_tmp$x##10332:=lq_anf$##7205759403792824709##d85L][lq_tmp$x##10362:=lq_tmp$x##10433]\nlen lq_tmp$x##10433 >= 0\nlq_tmp$x##10433 == savedWeights##a49E}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":16,"startCol":11,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##4323 : GHC.Types.Bool | lq_tmp$x##4323 <=> ds_d7ZI < n##a64q}"]]],[{"spanInfo":{"startLine":110,"endLine":110,"endCol":46,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824568","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":56,"startCol":28,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824605","ds_d7ZE:{VV##5374 : GHC.Types.Double^\"lq_tmp$x##5376\" | $k_##5375} -> {lq_tmp$x##5390 : GHC.Types.Double^\"lq_tmp$x##5389\" | lq_tmp$x##5390 == ds_d7ZE / ds_d7ZF}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":14,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.fillKnownDays","lq_tmp$x##7280:[Main.Entry] -> lq_tmp$x##7281:[Data.Time.Calendar.Days.Day] -> {rs : [(Data.Time.Calendar.Days.Day, (GHC.Maybe.Maybe Main.Weight))] | len rs == len lq_tmp$x##7281}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":35,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824545","lq_tmp$x##3740:Main.Weight -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":45,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a .\n{lq_tmp$x##7804 : (GHC.Maybe.Maybe a) | isJust lq_tmp$x##7804 <=> false}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":15,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","{lq_tmp$x##4337 : GHC.Integer.Type.Integer^\"lq_tmp$x##1248\" | lq_tmp$x##4337 == n##a64q}"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":28,"startCol":6,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824543","{lq_tmp$x##3659 : Filesystem.Path.Internal.FilePath^\"lq_tmp$x##3658\" | lq_anf$##7205759403792824542##d834 ~~ lq_tmp$x##3659\n                                                                       && len lq_anf$##7205759403792824542##d834 == stringlen lq_tmp$x##3659}"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":45,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824582","{lq_tmp$x##4811 : GHC.Prim.Addr# | lq_tmp$x##4811 == \"Entries from the past week\"}"]]],[{"spanInfo":{"startLine":82,"endLine":82,"endCol":28,"startCol":10,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##3201 : (GHC.Types.IO [GHC.Types.Char])^\"lq_tmp$x##538\" | lq_tmp$x##3201 == Date.getCurrentTimeText}"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":50,"startCol":37,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824696","(GHC.Maybe.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":54,"startCol":50,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824600","{lq_tmp$x##5273 : GHC.Types.Double^\"lq_tmp$x##5272\" | lq_tmp$x##5273 == 0 <=> lq_anf$##7205759403792824599##d83Z == 0}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":73,"startCol":60,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824672","{lq_tmp$x##8362 : GHC.Types.Double^\"lq_tmp$x##8361\" | lq_tmp$x##8362 == lq_anf$##7205759403792824670##d858 / lq_anf$##7205759403792824671##d859}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":62,"startCol":60,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{lq_tmp$x##6091 : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len lq_tmp$x##6091 >= n##a6o3 * 7\n                                                                 && len lq_tmp$x##6091 >= 0\n                                                                 && lq_tmp$x##6091 == es##a6o4}"]]],[{"spanInfo":{"startLine":240,"endLine":240,"endCol":9,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["mEntry","{lq_tmp$x##10085 : (GHC.Maybe.Maybe {lq_tmp$x##10084 : Main.Entry^\"lq_tmp$x##10080\" | $k_##10079[VV##10078:=lq_tmp$x##10084][VV##10081:=lq_tmp$x##10085][lq_tmp$x##10069:=Turtle.Shell.$fFunctorShell][lq_tmp$x##10070:=Main.lineToEntry][lq_tmp$x##10071:=sLines##a6uV]})^\"lq_tmp$x##10083\" \"lq_tmp$x##207\" | $k_##10082[VV##10081:=lq_tmp$x##10085][lq_tmp$x##10069:=Turtle.Shell.$fFunctorShell][lq_tmp$x##10070:=Main.lineToEntry][lq_tmp$x##10071:=sLines##a6uV]}"]]],[{"spanInfo":{"startLine":116,"endLine":116,"endCol":16,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["last8Days","[Main.Entry]"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":13,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["readWeight","xcmp:{lq_tmp$x##9670 : Data.Text.Internal.Text^\"lq_tmp$x##9669\" | $k_##9668[VV##9667:=lq_tmp$x##9670][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q]} -> {lq_tmp$x##9666 : (GHC.Maybe.Maybe {lq_tmp$x##9665 : Main.Weight^\"lq_tmp$x##9661\" \"lq_tmp$x##9673\" | $k_##9660[VV##9659:=lq_tmp$x##9665][VV##9662:=lq_tmp$x##9666][VV##9671:=lq_tmp$x##9665][VV##9674:=lq_tmp$x##9666][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q]\n                                                                                                                                                                                                                                                                                                                     && $k_##9672[VV##9671:=lq_tmp$x##9665][VV##9674:=lq_tmp$x##9666][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q][lq_tmp$x##9677:=xcmp]})^\"lq_tmp$x##9664\" \"lq_tmp$x##9676\" | $k_##9663[VV##9662:=lq_tmp$x##9666][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q]\nk_##9675[VV##9674:=lq_tmp$x##9666][lq_tmp$db##14:=lq_anf$##7205759403792824686##d85o][lq_tmp$db##16:=lq_anf$##7205759403792824688##d85q][lq_tmp$x##9677:=xcmp]}"]]],[{"spanInfo":{"startLine":82,"endLine":82,"endCol":6,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["now","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":34,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["allDaysWithWeights","{lq_tmp$x##10484 : [(Data.Time.Calendar.Days.Day, Main.Weight)]^\"lq_tmp$x##1312\" | len lq_tmp$x##10484 >= 0\n                                                                                   && lq_tmp$x##10484 == allDaysWithWeights##a49F}"]]],[{"spanInfo":{"startLine":241,"endLine":241,"endCol":21,"startCol":15,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a . lq_tmp$x##99:a -> (Turtle.Shell.Shell a)"]]],[{"spanInfo":{"startLine":136,"endLine":136,"endCol":21,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","{lq_tmp$x##4996 : GHC.Types.Int^\"lq_tmp$x##1281\" | lq_tmp$x##4996 == n##a64v}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":19,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windowResult","forall a .\nwindow##a6uA:{VV##5626 : [{VV##5609 : ({VV##5599 : a^\"lq_tmp$x##5601\" | $k_##5600}, {VV##5602 : Main.Weight^\"lq_tmp$x##5604\" | $k_##5603})<\\lq_tmp$x##5605 VV -> {VV##5606 : Main.Weight^\"lq_tmp$x##5608\" | $k_##5607}>^\"lq_tmp$x##5611\" | $k_##5610}]<\\lq_tmp$x##5612 VV -> {VV##5623 : ({VV##5613 : a^\"lq_tmp$x##5615\" | $k_##5614}, {VV##5616 : Main.Weight^\"lq_tmp$x##5618\" | $k_##5617})<\\lq_tmp$x##5619 VV -> {VV##5620 : Main.Weight^\"lq_tmp$x##5622\" | $k_##5621}>^\"lq_tmp$x##5625\" | $k_##5624}>^\"lq_tmp$x##5628\" | $k_##5627} -> {VV##5648 : ({VV##5630 : a^\"lq_tmp$x##5632\" | $k_##5631}, {VV##5633 : a^\"lq_tmp$x##5635\" | $k_##5634}, {VV##5636 : GHC.Types.Double^\"lq_tmp$x##5638\" | $k_##5637})<\\lq_tmp$x##5639 VV -> {VV##5640 : a^\"lq_tmp$x##5642\" | $k_##5641}, \\lq_tmp$x##5643 lq_tmp$x##5644 VV -> {VV##5645 : GHC.Types.Double^\"lq_tmp$x##5647\" | $k_##5646}>^\"lq_tmp$x##5650\" | $k_##5649}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":22,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["showSavedWeight","w##a5yJ:{VV##3819 : Main.Weight^\"lq_tmp$x##3821\" | $k_##3820} -> {VV##3826 : (GHC.Types.IO {VV##3823 : ()^\"lq_tmp$x##3825\" | $k_##3824})^\"lq_tmp$x##3828\" | $k_##3827}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":11,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["orig","(Turtle.Shell.Shell Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":45,"startCol":44,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["i","{lq_tmp$x##5197 : GHC.Types.Int^\"lq_tmp$x##1289\" | lq_tmp$x##5197 == i##a6dt}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":45,"startCol":43,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d1","{lq_tmp$x##8117 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7609\" | $k_##7608[VV##7607:=lq_tmp$x##8117][VV##7623:=lq_anf$##7205759403792824656##d84U][lq_tmp$x##7837:=lq_tmp$x##8117][lq_tmp$x##7843:=lq_anf$##7205759403792824656##d84U][lq_tmp$x##7846:=lq_tmp$x##8117][lq_tmp$x##7852:=lq_anf$##7205759403792824656##d84U]\n                                                                 && lq_tmp$x##8117 == d1##a64F}"]]],[{"spanInfo":{"startLine":75,"endLine":75,"endCol":27,"startCol":23,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["path","{lq_tmp$x##3518 : Filesystem.Path.Internal.FilePath^\"lq_tmp$x##1230\" | lq_tmp$x##3518 == path##a5yK}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":10,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.precision","lq_tmp$x##5163:GHC.Types.Int -> lq_tmp$x##5164:GHC.Types.Double -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":136,"endLine":136,"endCol":12,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lastN","{lq_tmp$x##4984 : [{lq_tmp$x##4995 : Main.Entry^\"lq_tmp$x##4994\" | $k_##4993[VV##4992:=lq_tmp$x##4995][lq_tmp$x##4988:=n##a64v][lq_tmp$x##4989:=lq_anf$##7205759403792824585##d83L]}] | (n##a64v >= 0 => len lq_tmp$x##4984 == (if len lq_anf$##7205759403792824585##d83L < n##a64v then len lq_anf$##7205759403792824585##d83L else n##a64v))\n                                                                                                                                                                                        && (not (n##a64v >= 0) => len lq_tmp$x##4984 == 0)}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":54,"startCol":53,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["i","{lq_tmp$x##5281 : GHC.Types.Int^\"lq_tmp$x##1289\" | lq_tmp$x##5281 == i##a6dt}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":78,"startCol":76,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["es","{lq_tmp$x##7218 : [Main.Entry]^\"lq_tmp$x##1296\" | len lq_tmp$x##7218 >= 0\n                                                  && lq_tmp$x##7218 == es##a6dw}"]]],[{"spanInfo":{"startLine":239,"endLine":239,"endCol":22,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["sLines","(Turtle.Shell.Shell Turtle.Line.Line)"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":44,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$","forall r a b .\nlq_tmp$x##3465:(lq_tmp$x##3464:a -> b) -> lq_tmp$x##3466:a -> b"]]],[{"spanInfo":{"startLine":206,"endLine":206,"endCol":63,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824628","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":14,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","GHC.Types.Double"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":93,"startCol":77,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824614","xcmp:{lq_tmp$x##5832 : ({lq_tmp$x##5828 : a^\"lq_tmp$x##5817\" | $k_##5816[VV##5815:=lq_tmp$x##5828][VV##5825:=lq_tmp$x##5832][lq_tmp$db##14:=Main.fromWeight][lq_tmp$db##16:=lq_anf$##7205759403792824613##d84d]}, {lq_tmp$x##5829 : Main.Weight^\"lq_tmp$x##5820\" | $k_##5819[VV##5818:=lq_tmp$x##5829][VV##5825:=lq_tmp$x##5832][lq_tmp$db##14:=Main.fromWeight][lq_tmp$db##16:=lq_anf$##7205759403792824613##d84d]})<\\lq_tmp$x##5830 VV -> {lq_tmp$x##5831 : Main.Weight^\"lq_tmp$x##5824\" | $k_##5823[VV##5822:=lq_tmp$x##5831][VV##5825:=lq_tmp$x##5832][lq_tmp$db##14:=Main.fromWeight][lq_tmp$db##16:=lq_anf$##7205759403792824613##d84d][lq_tmp$x##5821:=lq_tmp$x##5830]}>^\"lq_tmp$x##5827\" | $k_##5826[VV##5825:=lq_tmp$x##5832][lq_tmp$db##14:=Main.fromWeight][lq_tmp$db##16:=lq_anf$##7205759403792824613##d84d]} -> {lq_tmp$x##5814 : GHC.Types.Double^\"lq_tmp$x##5813\" \"lq_tmp$x##5835\" | $k_##5812[VV##5811:=lq_tmp$x##5814][lq_tmp$db##14:=Main.fromWeight][lq_tmp$db##16:=lq_anf$##7205759403792824613##d84d]\nk_##5834[VV##5833:=lq_tmp$x##5814][lq_tmp$db##14:=Main.fromWeight][lq_tmp$db##16:=lq_anf$##7205759403792824613##d84d][lq_tmp$x##5836:=xcmp]}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":38,"startCol":37,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","{lq_tmp$x##5214 : GHC.Types.Double^\"lq_tmp$x##1291\" | lq_tmp$x##5214 == n##a6du}"]]],[{"spanInfo":{"startLine":234,"endLine":234,"endCol":18,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["earliestDay","Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":195,"endLine":195,"endCol":28,"startCol":6,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824649","lq_tmp$x##7457:{lq_tmp$x##7446 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7322\" | $k_##7321[VV##7320:=lq_tmp$x##7446][dMap##a6nV:=entryMap##a6nX][lq_tmp$x##7456:=entryMap##a6nX]} -> {lq_tmp$x##7453 : ({lq_tmp$x##7447 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7326\" | $k_##7325[VV##7324:=lq_tmp$x##7447][VV##7340:=lq_tmp$x##7453][d##a6nW:=lq_tmp$x##7457][dMap##a6nV:=entryMap##a6nX][lq_tmp$x##7456:=entryMap##a6nX]}, {lq_tmp$x##7449 : (GHC.Maybe.Maybe {lq_tmp$x##7448 : Main.Weight^\"lq_tmp$x##7329\" | $k_##7328[VV##7327:=lq_tmp$x##7448][VV##7330:=lq_tmp$x##7449][VV##7340:=lq_tmp$x##7453][d##a6nW:=lq_tmp$x##7457][dMap##a6nV:=entryMap##a6nX][lq_tmp$x##7456:=entryMap##a6nX]})^\"lq_tmp$x##7332\" | $k_##7331[VV##7330:=lq_tmp$x##7449][VV##7340:=lq_tmp$x##7453][d##a6nW:=lq_tmp$x##7457][dMap##a6nV:=entryMap##a6nX][lq_tmp$x##7456:=entryMap##a6nX]})<\\lq_tmp$x##7458 VV -> {lq_tmp$x##7452 : (GHC.Maybe.Maybe {lq_tmp$x##7451 : Main.Weight^\"lq_tmp$x##7336\" | $k_##7335[VV##7334:=lq_tmp$x##7451][VV##7337:=lq_tmp$x##7452][VV##7340:=lq_tmp$x##7453][d##a6nW:=lq_tmp$x##7457][dMap##a6nV:=entryMap##a6nX][lq_tmp$x##7333:=lq_tmp$x##7458][lq_tmp$x##7450:=lq_tmp$x##7458][lq_tmp$x##7456:=entryMap##a6nX]})^\"lq_tmp$x##7339\" | $k_##7338[VV##7337:=lq_tmp$x##7452][VV##7340:=lq_tmp$x##7453][d##a6nW:=lq_tmp$x##7457][dMap##a6nV:=entryMap##a6nX][lq_tmp$x##7333:=lq_tmp$x##7458][lq_tmp$x##7450:=lq_tmp$x##7458][lq_tmp$x##7456:=entryMap##a6nX]}>^\"lq_tmp$x##7342\" | $k_##7341[VV##7340:=lq_tmp$x##7453][d##a6nW:=lq_tmp$x##7457][dMap##a6nV:=entryMap##a6nX][lq_tmp$x##7456:=entryMap##a6nX]}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":35,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["fp","{lq_tmp$x##3741 : Filesystem.Path.Internal.FilePath^\"lq_tmp$x##1236\" | lq_tmp$x##3741 == fp##a5yG}"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":50,"startCol":27,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824697","(GHC.Maybe.Maybe lq_tmp$x##9945:{lq_tmp$x##9952 : Main.Weight^\"lq_tmp$x##9948\" | $k_##9947[VV##9946:=lq_tmp$x##9952][lq_tmp$x##9936:=GHC.Base.$fFunctorMaybe][lq_tmp$x##9937:=Main.Entry][lq_tmp$x##9938:=lq_anf$##7205759403792824696##d85y]} -> {lq_tmp$x##9953 : Main.Entry^\"lq_tmp$x##9951\" | $k_##9950[VV##9949:=lq_tmp$x##9953][lq_tmp$x##9936:=GHC.Base.$fFunctorMaybe][lq_tmp$x##9937:=Main.Entry][lq_tmp$x##9938:=lq_anf$##7205759403792824696##d85y]})"]]],[{"spanInfo":{"startLine":224,"endLine":224,"endCol":23,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["windowEveryNDays","{lq_tmp$x##6013 : GHC.Types.Int | lq_tmp$x##6013 == lq_anf$##7205759403792824617##d84h\n                                  && lq_tmp$x##6013 == week##a6o5}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":21,"startCol":20,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["e","{VV##7082 : Main.Entry^\"lq_tmp$x##7084\" | $k_##7083}"]]],[{"spanInfo":{"startLine":248,"endLine":248,"endCol":30,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824692","[Data.Text.Internal.Text]"]]],[{"spanInfo":{"startLine":129,"endLine":129,"endCol":21,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":31,"startCol":25,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["zipper","lq_tmp$x##9426:{lq_tmp$x##9408 : ({lq_tmp$x##9402 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7609\" | $k_##7608[VV##7607:=lq_tmp$x##9402][VV##7623:=lq_tmp$x##9408]}, {lq_tmp$x##9404 : (GHC.Maybe.Maybe {lq_tmp$x##9403 : Main.Weight^\"lq_tmp$x##7612\" | $k_##7611[VV##7610:=lq_tmp$x##9403][VV##7613:=lq_tmp$x##9404][VV##7623:=lq_tmp$x##9408]})^\"lq_tmp$x##7615\" | $k_##7614[VV##7613:=lq_tmp$x##9404][VV##7623:=lq_tmp$x##9408]})<\\lq_tmp$x##9428 VV -> {lq_tmp$x##9407 : (GHC.Maybe.Maybe {lq_tmp$x##9406 : Main.Weight^\"lq_tmp$x##7619\" | $k_##7618[VV##7617:=lq_tmp$x##9406][VV##7620:=lq_tmp$x##9407][VV##7623:=lq_tmp$x##9408][lq_tmp$x##7616:=lq_tmp$x##9428][lq_tmp$x##9405:=lq_tmp$x##9428][lq_tmp$x##9424:=lq_tmp$x##9428]})^\"lq_tmp$x##7622\" | $k_##7621[VV##7620:=lq_tmp$x##9407][VV##7623:=lq_tmp$x##9408][lq_tmp$x##7616:=lq_tmp$x##9428][lq_tmp$x##9405:=lq_tmp$x##9428][lq_tmp$x##9424:=lq_tmp$x##9428]}>^\"lq_tmp$x##7625\" | $k_##7624[VV##7623:=lq_tmp$x##9408]} -> lq_tmp$x##9427:{lq_tmp$x##9415 : ({lq_tmp$x##9409 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7629\" | $k_##7628[VV##7627:=lq_tmp$x##9409][VV##7643:=lq_tmp$x##9415][ds_d80y:=lq_tmp$x##9426]}, {lq_tmp$x##9411 : (GHC.Maybe.Maybe {lq_tmp$x##9410 : Main.Weight^\"lq_tmp$x##7632\" | $k_##7631[VV##7630:=lq_tmp$x##9410][VV##7633:=lq_tmp$x##9411][VV##7643:=lq_tmp$x##9415][ds_d80y:=lq_tmp$x##9426]})^\"lq_tmp$x##7635\" | $k_##7634[VV##7633:=lq_tmp$x##9411][VV##7643:=lq_tmp$x##9415][ds_d80y:=lq_tmp$x##9426]})<\\lq_tmp$x##9429 VV -> {lq_tmp$x##9414 : (GHC.Maybe.Maybe {lq_tmp$x##9413 : Main.Weight^\"lq_tmp$x##7639\" | $k_##7638[VV##7637:=lq_tmp$x##9413][VV##7640:=lq_tmp$x##9414][VV##7643:=lq_tmp$x##9415][ds_d80y:=lq_tmp$x##9426][lq_tmp$x##7636:=lq_tmp$x##9429][lq_tmp$x##9412:=lq_tmp$x##9429][lq_tmp$x##9425:=lq_tmp$x##9429]})^\"lq_tmp$x##7642\" | $k_##7641[VV##7640:=lq_tmp$x##9414][VV##7643:=lq_tmp$x##9415][ds_d80y:=lq_tmp$x##9426][lq_tmp$x##7636:=lq_tmp$x##9429][lq_tmp$x##9412:=lq_tmp$x##9429][lq_tmp$x##9425:=lq_tmp$x##9429]}>^\"lq_tmp$x##7645\" | $k_##7644[VV##7643:=lq_tmp$x##9415][ds_d80y:=lq_tmp$x##9426]} -> {lq_tmp$x##9421 : (GHC.Maybe.Maybe {lq_tmp$x##9420 : ({lq_tmp$x##9416 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7649\" | $k_##7648[VV##7647:=lq_tmp$x##9416][VV##7657:=lq_tmp$x##9420][VV##7660:=lq_tmp$x##9421][ds_d80y:=lq_tmp$x##9426][ds_d80z:=lq_tmp$x##9427]}, {lq_tmp$x##9417 : Main.Weight^\"lq_tmp$x##7652\" | $k_##7651[VV##7650:=lq_tmp$x##9417][VV##7657:=lq_tmp$x##9420][VV##7660:=lq_tmp$x##9421][ds_d80y:=lq_tmp$x##9426][ds_d80z:=lq_tmp$x##9427]})<\\lq_tmp$x##9430 VV -> {lq_tmp$x##9419 : Main.Weight^\"lq_tmp$x##7656\" | $k_##7655[VV##7654:=lq_tmp$x##9419][VV##7657:=lq_tmp$x##9420][VV##7660:=lq_tmp$x##9421][ds_d80y:=lq_tmp$x##9426][ds_d80z:=lq_tmp$x##9427][lq_tmp$x##7653:=lq_tmp$x##9430][lq_tmp$x##9418:=lq_tmp$x##9430]}>^\"lq_tmp$x##7659\" | $k_##7658[VV##7657:=lq_tmp$x##9420][VV##7660:=lq_tmp$x##9421][ds_d80y:=lq_tmp$x##9426][ds_d80z:=lq_tmp$x##9427]})^\"lq_tmp$x##7662\" | $k_##7661[VV##7660:=lq_tmp$x##9421][ds_d80y:=lq_tmp$x##9426][ds_d80z:=lq_tmp$x##9427]}"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":40,"startCol":32,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["leftFold","{lq_tmp$x##9446 : [{lq_tmp$x##9437 : ({lq_tmp$x##9431 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##9001\" | $k_##9000[VV##8999:=lq_tmp$x##9431][VV##9015:=lq_tmp$x##9437][lq_tmp$x##8989:=lq_tmp$x##9446][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq][lq_tmp$x##9018:=lq_tmp$x##9431][lq_tmp$x##9024:=lq_tmp$x##9437]}, {lq_tmp$x##9433 : (GHC.Maybe.Maybe {lq_tmp$x##9432 : Main.Weight^\"lq_tmp$x##9004\" | $k_##9003[VV##9002:=lq_tmp$x##9432][VV##9005:=lq_tmp$x##9433][VV##9015:=lq_tmp$x##9437][lq_tmp$x##8989:=lq_tmp$x##9446][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq][lq_tmp$x##9019:=lq_tmp$x##9432][lq_tmp$x##9020:=lq_tmp$x##9433][lq_tmp$x##9024:=lq_tmp$x##9437]})^\"lq_tmp$x##9007\" | $k_##9006[VV##9005:=lq_tmp$x##9433][VV##9015:=lq_tmp$x##9437][lq_tmp$x##8989:=lq_tmp$x##9446][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq][lq_tmp$x##9020:=lq_tmp$x##9433][lq_tmp$x##9024:=lq_tmp$x##9437]})<\\lq_tmp$x##9447 VV -> {lq_tmp$x##9436 : (GHC.Maybe.Maybe {lq_tmp$x##9435 : Main.Weight^\"lq_tmp$x##9011\" | $k_##9010[VV##9009:=lq_tmp$x##9435][VV##9012:=lq_tmp$x##9436][VV##9015:=lq_tmp$x##9437][lq_tmp$x##8989:=lq_tmp$x##9446][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq][lq_tmp$x##9008:=lq_tmp$x##9447][lq_tmp$x##9021:=lq_tmp$x##9447][lq_tmp$x##9022:=lq_tmp$x##9435][lq_tmp$x##9023:=lq_tmp$x##9436][lq_tmp$x##9024:=lq_tmp$x##9437][lq_tmp$x##9434:=lq_tmp$x##9447]})^\"lq_tmp$x##9014\" | $k_##9013[VV##9012:=lq_tmp$x##9436][VV##9015:=lq_tmp$x##9437][lq_tmp$x##8989:=lq_tmp$x##9446][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq][lq_tmp$x##9008:=lq_tmp$x##9447][lq_tmp$x##9021:=lq_tmp$x##9447][lq_tmp$x##9023:=lq_tmp$x##9436][lq_tmp$x##9024:=lq_tmp$x##9437][lq_tmp$x##9434:=lq_tmp$x##9447]}>^\"lq_tmp$x##9017\" | $k_##9016[VV##9015:=lq_tmp$x##9437][lq_tmp$x##8989:=lq_tmp$x##9446][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq][lq_tmp$x##9024:=lq_tmp$x##9437]}] | len lq_tmp$x##9446 == len filledDays##a6dq\nlen lq_tmp$x##9446 >= 0\nlq_tmp$x##9446 == leftFold##a6dr}"]]],[{"spanInfo":{"startLine":121,"endLine":121,"endCol":41,"startCol":34,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Time.Clock.Internal.UTCTime.utctDay","lq_tmp$x##4381:Data.Time.Clock.Internal.UTCTime.UTCTime -> Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":152,"endLine":152,"endCol":15,"startCol":7,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["leftFold","{lq_tmp$x##8989 : [{lq_tmp$x##9024 : ({lq_tmp$x##9018 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##9001\" | $k_##9000[VV##8999:=lq_tmp$x##9018][VV##9015:=lq_tmp$x##9024][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq]}, {lq_tmp$x##9020 : (GHC.Maybe.Maybe {lq_tmp$x##9019 : Main.Weight^\"lq_tmp$x##9004\" | $k_##9003[VV##9002:=lq_tmp$x##9019][VV##9005:=lq_tmp$x##9020][VV##9015:=lq_tmp$x##9024][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq]})^\"lq_tmp$x##9007\" | $k_##9006[VV##9005:=lq_tmp$x##9020][VV##9015:=lq_tmp$x##9024][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq]})<\\lq_tmp$x##9021 VV -> {lq_tmp$x##9023 : (GHC.Maybe.Maybe {lq_tmp$x##9022 : Main.Weight^\"lq_tmp$x##9011\" | $k_##9010[VV##9009:=lq_tmp$x##9022][VV##9012:=lq_tmp$x##9023][VV##9015:=lq_tmp$x##9024][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq][lq_tmp$x##9008:=lq_tmp$x##9021]})^\"lq_tmp$x##9014\" | $k_##9013[VV##9012:=lq_tmp$x##9023][VV##9015:=lq_tmp$x##9024][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq][lq_tmp$x##9008:=lq_tmp$x##9021]}>^\"lq_tmp$x##9017\" | $k_##9016[VV##9015:=lq_tmp$x##9024][lq_tmp$x##8995:=leftFolder##a64A][lq_tmp$x##8996:=filledDays##a6dq]}] | len lq_tmp$x##8989 == len filledDays##a6dq}"]]],[{"spanInfo":{"startLine":129,"endLine":131,"endCol":44,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["GHC.Base.$fMonadIO","{lq_tmp$x##4603 : (GHC.Base.Monad GHC.Types.IO) | lq_tmp$x##4603 == GHC.Base.$fMonadIO}"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":24,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{lq_tmp$x##2742 : [a]<\\lq_tmp$x##2743 VV -> {lq_tmp$x##2741 : a<p lq_tmp$x##2743> | true}> | len lq_tmp$x##2742 == 0}"]]],[{"spanInfo":{"startLine":234,"endLine":234,"endCol":48,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["earliest","{lq_tmp$x##7560 : Main.Entry | lq_tmp$x##7560 == earliest##a6uR}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":56,"startCol":50,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["weight","{lq_tmp$x##3525 : Main.Weight^\"lq_tmp$x##1232\" | lq_tmp$x##3525 == weight##a5yL}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":23,"startCol":16,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["heading","{lq_tmp$x##4638 : [GHC.Types.Char]^\"lq_tmp$x##1267\" | len lq_tmp$x##4638 >= 0\n                                                      && lq_tmp$x##4638 == heading##a64s}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":63,"startCol":17,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"{lq_tmp$x##6103 : [{lq_tmp$x##6150 : [{lq_tmp$x##6143 : ({lq_tmp$x##6139 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6111\" | $k_##6110[VV##6109:=lq_tmp$x##6139][VV##6119:=lq_tmp$x##6143][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i]}, {lq_tmp$x##6140 : Main.Weight^\"lq_tmp$x##6114\" | $k_##6113[VV##6112:=lq_tmp$x##6140][VV##6119:=lq_tmp$x##6143][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i]})<\\lq_tmp$x##6141 VV -> {lq_tmp$x##6142 : Main.Weight^\"lq_tmp$x##6118\" | $k_##6117[VV##6116:=lq_tmp$x##6142][VV##6119:=lq_tmp$x##6143][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6115:=lq_tmp$x##6141]}>^\"lq_tmp$x##6121\" | $k_##6120[VV##6119:=lq_tmp$x##6143][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i]}]<\\lq_tmp$x##6144 VV -> {lq_tmp$x##6149 : ({lq_tmp$x##6145 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##6125\" | $k_##6124[VV##6123:=lq_tmp$x##6145][VV##6133:=lq_tmp$x##6149][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6122:=lq_tmp$x##6144]}, {lq_tmp$x##6146 : Main.Weight^\"lq_tmp$x##6128\" | $k_##6127[VV##6126:=lq_tmp$x##6146][VV##6133:=lq_tmp$x##6149][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6122:=lq_tmp$x##6144]})<\\lq_tmp$x##6147 VV -> {lq_tmp$x##6148 : Main.Weight^\"lq_tmp$x##6132\" | $k_##6131[VV##6130:=lq_tmp$x##6148][VV##6133:=lq_tmp$x##6149][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6122:=lq_tmp$x##6144][lq_tmp$x##6129:=lq_tmp$x##6147]}>^\"lq_tmp$x##6135\" | $k_##6134[VV##6133:=lq_tmp$x##6149][VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i][lq_tmp$x##6122:=lq_tmp$x##6144]}>^\"lq_tmp$x##6138\" | $k_##6137[VV##6136:=lq_tmp$x##6150][lq_tmp$x##6106:=lq_anf$##7205759403792824618##d84i]}] | len lq_tmp$x##6103 == len lq_anf$##7205759403792824618##d84i}"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":78,"startCol":13,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824646","e##a6dy:{VV##7082 : Main.Entry^\"lq_tmp$x##7084\" | $k_##7083} -> {VV##7096 : ({VV##7086 : GHC.Types.Int^\"lq_tmp$x##7088\" | $k_##7087}, {VV##7089 : Main.Weight^\"lq_tmp$x##7091\" | $k_##7090})<\\lq_tmp$x##7092 VV -> {VV##7093 : Main.Weight^\"lq_tmp$x##7095\" | $k_##7094}>^\"lq_tmp$x##7098\" | $k_##7097}"]]],[{"spanInfo":{"startLine":117,"endLine":117,"endCol":45,"startCol":26,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824584","{lq_tmp$x##4902 : [{lq_tmp$x##4911 : Main.Entry^\"lq_tmp$x##4910\" | $k_##4909[VV##4908:=lq_tmp$x##4911][lq_tmp$x##4905:=last8Days##a61n]}] | len lq_tmp$x##4902 == len last8Days##a61n}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":59,"startCol":51,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824637","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":33,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824544","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":26,"startCol":9,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["parserMaybeDouble","(Options.Applicative.Types.Parser (GHC.Maybe.Maybe {lq_tmp$x##2886 : GHC.Types.Double^\"lq_tmp$x##2885\" \"lq_tmp$x##709\" | $k_##2884[VV##2883:=lq_tmp$x##2886][lq_tmp$x##2879:=Options.Applicative.Types.$fAlternativeParser][lq_tmp$x##2880:=lq_anf$##7205759403792824518##d82G]}))"]]],[{"spanInfo":{"startLine":152,"endLine":152,"endCol":40,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["leftFolder","lq_tmp$x##9050:{lq_tmp$x##9031 : ({lq_tmp$x##9025 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8447\" | $k_##8446[VV##8445:=lq_tmp$x##9025][VV##8461:=lq_tmp$x##9031]}, {lq_tmp$x##9027 : (GHC.Maybe.Maybe {lq_tmp$x##9026 : Main.Weight^\"lq_tmp$x##8450\" | $k_##8449[VV##8448:=lq_tmp$x##9026][VV##8451:=lq_tmp$x##9027][VV##8461:=lq_tmp$x##9031]})^\"lq_tmp$x##8453\" | $k_##8452[VV##8451:=lq_tmp$x##9027][VV##8461:=lq_tmp$x##9031]})<\\lq_tmp$x##9052 VV -> {lq_tmp$x##9030 : (GHC.Maybe.Maybe {lq_tmp$x##9029 : Main.Weight^\"lq_tmp$x##8457\" | $k_##8456[VV##8455:=lq_tmp$x##9029][VV##8458:=lq_tmp$x##9030][VV##8461:=lq_tmp$x##9031][lq_tmp$x##8454:=lq_tmp$x##9052][lq_tmp$x##9028:=lq_tmp$x##9052][lq_tmp$x##9048:=lq_tmp$x##9052]})^\"lq_tmp$x##8460\" | $k_##8459[VV##8458:=lq_tmp$x##9030][VV##8461:=lq_tmp$x##9031][lq_tmp$x##8454:=lq_tmp$x##9052][lq_tmp$x##9028:=lq_tmp$x##9052][lq_tmp$x##9048:=lq_tmp$x##9052]}>^\"lq_tmp$x##8463\" | $k_##8462[VV##8461:=lq_tmp$x##9031]} -> lq_tmp$x##9051:{lq_tmp$x##9038 : ({lq_tmp$x##9032 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8467\" | $k_##8466[VV##8465:=lq_tmp$x##9032][VV##8481:=lq_tmp$x##9038][ds_d809:=lq_tmp$x##9050]}, {lq_tmp$x##9034 : (GHC.Maybe.Maybe {lq_tmp$x##9033 : Main.Weight^\"lq_tmp$x##8470\" | $k_##8469[VV##8468:=lq_tmp$x##9033][VV##8471:=lq_tmp$x##9034][VV##8481:=lq_tmp$x##9038][ds_d809:=lq_tmp$x##9050]})^\"lq_tmp$x##8473\" | $k_##8472[VV##8471:=lq_tmp$x##9034][VV##8481:=lq_tmp$x##9038][ds_d809:=lq_tmp$x##9050]})<\\lq_tmp$x##9053 VV -> {lq_tmp$x##9037 : (GHC.Maybe.Maybe {lq_tmp$x##9036 : Main.Weight^\"lq_tmp$x##8477\" | $k_##8476[VV##8475:=lq_tmp$x##9036][VV##8478:=lq_tmp$x##9037][VV##8481:=lq_tmp$x##9038][ds_d809:=lq_tmp$x##9050][lq_tmp$x##8474:=lq_tmp$x##9053][lq_tmp$x##9035:=lq_tmp$x##9053][lq_tmp$x##9049:=lq_tmp$x##9053]})^\"lq_tmp$x##8480\" | $k_##8479[VV##8478:=lq_tmp$x##9037][VV##8481:=lq_tmp$x##9038][ds_d809:=lq_tmp$x##9050][lq_tmp$x##8474:=lq_tmp$x##9053][lq_tmp$x##9035:=lq_tmp$x##9053][lq_tmp$x##9049:=lq_tmp$x##9053]}>^\"lq_tmp$x##8483\" | $k_##8482[VV##8481:=lq_tmp$x##9038][ds_d809:=lq_tmp$x##9050]} -> {lq_tmp$x##9045 : ({lq_tmp$x##9039 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8487\" | $k_##8486[VV##8485:=lq_tmp$x##9039][VV##8501:=lq_tmp$x##9045][a##a64C:=lq_tmp$x##9051][ds_d809:=lq_tmp$x##9050]}, {lq_tmp$x##9041 : (GHC.Maybe.Maybe {lq_tmp$x##9040 : Main.Weight^\"lq_tmp$x##8490\" | $k_##8489[VV##8488:=lq_tmp$x##9040][VV##8491:=lq_tmp$x##9041][VV##8501:=lq_tmp$x##9045][a##a64C:=lq_tmp$x##9051][ds_d809:=lq_tmp$x##9050]})^\"lq_tmp$x##8493\" | $k_##8492[VV##8491:=lq_tmp$x##9041][VV##8501:=lq_tmp$x##9045][a##a64C:=lq_tmp$x##9051][ds_d809:=lq_tmp$x##9050]})<\\lq_tmp$x##9054 VV -> {lq_tmp$x##9044 : (GHC.Maybe.Maybe {lq_tmp$x##9043 : Main.Weight^\"lq_tmp$x##8497\" | $k_##8496[VV##8495:=lq_tmp$x##9043][VV##8498:=lq_tmp$x##9044][VV##8501:=lq_tmp$x##9045][a##a64C:=lq_tmp$x##9051][ds_d809:=lq_tmp$x##9050][lq_tmp$x##8494:=lq_tmp$x##9054][lq_tmp$x##9042:=lq_tmp$x##9054]})^\"lq_tmp$x##8500\" | $k_##8499[VV##8498:=lq_tmp$x##9044][VV##8501:=lq_tmp$x##9045][a##a64C:=lq_tmp$x##9051][ds_d809:=lq_tmp$x##9050][lq_tmp$x##8494:=lq_tmp$x##9054][lq_tmp$x##9042:=lq_tmp$x##9054]}>^\"lq_tmp$x##8503\" | $k_##8502[VV##8501:=lq_tmp$x##9045][a##a64C:=lq_tmp$x##9051][ds_d809:=lq_tmp$x##9050]}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":39,"startCol":38,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824713","{lq_tmp$x##10492 : GHC.Types.Int | lq_tmp$x##10492 == lq_anf$##7205759403792824712##d85O}"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":31,"startCol":25,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["weight","Main.Weight"]]],[{"spanInfo":{"startLine":207,"endLine":207,"endCol":30,"startCol":25,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["weeks","{lq_tmp$x##6640 : GHC.Types.Int | lq_tmp$x##6640 > 0\n                                  && lq_tmp$x##6640 == weeks##a6nY}"]]],[{"spanInfo":{"startLine":168,"endLine":168,"endCol":52,"startCol":50,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824599","{lq_tmp$x##5252 : GHC.Types.Double | lq_tmp$x##5252 == 10.0}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":40,"startCol":33,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["updated","{lq_tmp$x##3631 : (Turtle.Shell.Shell {lq_tmp$x##3630 : Turtle.Line.Line^\"lq_tmp$x##3569\" \"lq_tmp$x##520\" | $k_##3568[VV##3567:=lq_tmp$x##3630][lq_tmp$x##3564:=lq_tmp$x##3631][lq_tmp$x##3570:=lq_tmp$x##3630][lq_tmp$x##513:=orig##a5yM][lq_tmp$x##516:=lq_anf$##7205759403792824536##d82Y]})^\"lq_tmp$x##3563\" \"lq_tmp$x##519\" | lq_tmp$x##3631 == updated##a5yN}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":22,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["a","{VV##8481 : ({VV##8465 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8467\" | $k_##8466}, {VV##8471 : (GHC.Maybe.Maybe {VV##8468 : Main.Weight^\"lq_tmp$x##8470\" | $k_##8469})^\"lq_tmp$x##8473\" | $k_##8472})<\\lq_tmp$x##8474 VV -> {VV##8478 : (GHC.Maybe.Maybe {VV##8475 : Main.Weight^\"lq_tmp$x##8477\" | $k_##8476})^\"lq_tmp$x##8480\" | $k_##8479}>^\"lq_tmp$x##8483\" | $k_##8482}"]]],[{"spanInfo":{"startLine":233,"endLine":236,"endCol":37,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Data.Time.Calendar.Days.$fEnumDay","{lq_tmp$x##7586 : (GHC.Enum.Enum Data.Time.Calendar.Days.Day) | lq_tmp$x##7586 == Data.Time.Calendar.Days.$fEnumDay}"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":72,"startCol":66,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["weight","{lq_tmp$x##9972 : Data.Text.Internal.Text^\"lq_tmp$x##467\" \"lq_tmp$x##468\" | tlen lq_tmp$x##9972 == stringlen lq_tmp$x##9972\n                                                                            && 0 <= tlen lq_tmp$x##9972\n                                                                            && lq_tmp$x##9972 == weight##a6v1}"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":39,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"forall a .\nlq_tmp$x##8068:a -> {lq_tmp$x##8066 : (GHC.Maybe.Maybe a) | fromJust lq_tmp$x##8066 == lq_tmp$x##8068\n                                                            && (isJust lq_tmp$x##8066 <=> true)}"]]],[{"spanInfo":{"startLine":198,"endLine":198,"endCol":23,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d","{VV##7320 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7322\" | $k_##7321}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":59,"startCol":56,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["avg","{lq_tmp$x##6815 : GHC.Types.Double^\"lq_tmp$x##6665\" \"lq_tmp$x##6674\" | $k_##6664[VV##6663:=lq_tmp$x##6815][VV##6675:=lq_anf$##7205759403792824631##d84v][lq_tmp$x##6687:=lq_tmp$x##6815][lq_tmp$x##6693:=lq_anf$##7205759403792824631##d84v][lq_tmp$x##6700:=lq_tmp$x##6815][lq_tmp$x##6706:=lq_anf$##7205759403792824631##d84v][lq_tmp$x##6725:=start##a6o0][lq_tmp$x##6726:=end##a6o1]\n                                                                       && $k_##6673[VV##6672:=lq_tmp$x##6815][VV##6675:=lq_anf$##7205759403792824631##d84v][lq_tmp$x##6670:=end##a6o1][lq_tmp$x##6671:=start##a6o0][lq_tmp$x##6690:=end##a6o1][lq_tmp$x##6691:=start##a6o0][lq_tmp$x##6692:=lq_tmp$x##6815][lq_tmp$x##6693:=lq_anf$##7205759403792824631##d84v][lq_tmp$x##6695:=end##a6o1][lq_tmp$x##6696:=start##a6o0][lq_tmp$x##6700:=lq_tmp$x##6815][lq_tmp$x##6703:=end##a6o1][lq_tmp$x##6704:=start##a6o0][lq_tmp$x##6705:=lq_tmp$x##6815][lq_tmp$x##6706:=lq_anf$##7205759403792824631##d84v][lq_tmp$x##6708:=end##a6o1][lq_tmp$x##6709:=start##a6o0][lq_tmp$x##6725:=start##a6o0][lq_tmp$x##6726:=end##a6o1]\n                                                                       && lq_tmp$x##6815 == avg##a6o2}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":62,"startCol":59,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824606","lq_tmp$x##369:[GHC.Types.Double] -> GHC.Types.Double"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":14,"startCol":3,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["maybeWeight","(GHC.Maybe.Maybe Main.Weight)"]]],[{"spanInfo":{"startLine":129,"endLine":129,"endCol":13,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.printHeading","lq_tmp$x##4497:[GHC.Types.Char] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":134,"endLine":137,"endCol":34,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.displayEntries","lq_tmp$x##5147:[GHC.Types.Char] -> lq_tmp$x##5148:[Main.Entry] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":241,"endLine":241,"endCol":28,"startCol":22,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["mEntry","{lq_tmp$x##10170 : (GHC.Maybe.Maybe {lq_tmp$x##10169 : Main.Entry^\"lq_tmp$x##10080\" | $k_##10079[VV##10078:=lq_tmp$x##10169][VV##10081:=lq_tmp$x##10170][lq_tmp$x##10069:=Turtle.Shell.$fFunctorShell][lq_tmp$x##10070:=Main.lineToEntry][lq_tmp$x##10071:=sLines##a6uV][lq_tmp$x##10084:=lq_tmp$x##10169][lq_tmp$x##10085:=lq_tmp$x##10170]})^\"lq_tmp$x##10083\" \"lq_tmp$x##207\" | $k_##10082[VV##10081:=lq_tmp$x##10170][lq_tmp$x##10069:=Turtle.Shell.$fFunctorShell][lq_tmp$x##10070:=Main.lineToEntry][lq_tmp$x##10071:=sLines##a6uV][lq_tmp$x##10085:=lq_tmp$x##10170]\n                                                                                                                                                                                                                                                                                                                                                                                   && lq_tmp$x##10170 == mEntry##a6uW}"]]],[{"spanInfo":{"startLine":148,"endLine":148,"endCol":63,"startCol":56,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["entries","{lq_tmp$x##8914 : [Main.Entry]^\"lq_tmp$x##1303\" | len lq_tmp$x##8914 >= 0\n                                                  && lq_tmp$x##8914 == entries##a64z}"]]],[{"spanInfo":{"startLine":208,"endLine":208,"endCol":60,"startCol":5,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["System.IO.putStrLn","lq_tmp$x##6895:[GHC.Types.Char] -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":165,"endLine":165,"endCol":16,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["d2","{lq_tmp$x##8055 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##7629\" | $k_##7628[VV##7627:=lq_tmp$x##8055][VV##7643:=lq_anf$##7205759403792824659##d84X][lq_tmp$x##7937:=lq_tmp$x##8055][lq_tmp$x##7943:=lq_anf$##7205759403792824659##d84X][lq_tmp$x##7946:=lq_tmp$x##8055][lq_tmp$x##7952:=lq_anf$##7205759403792824659##d84X]\n                                                                 && lq_tmp$x##8055 == d2##a64H}"]]],[{"spanInfo":{"startLine":134,"endLine":134,"endCol":15,"startCol":14,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":46,"startCol":36,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["leftFolder","lq_tmp$x##9194:{lq_tmp$x##9175 : ({lq_tmp$x##9169 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8447\" | $k_##8446[VV##8445:=lq_tmp$x##9169][VV##8461:=lq_tmp$x##9175]}, {lq_tmp$x##9171 : (GHC.Maybe.Maybe {lq_tmp$x##9170 : Main.Weight^\"lq_tmp$x##8450\" | $k_##8449[VV##8448:=lq_tmp$x##9170][VV##8451:=lq_tmp$x##9171][VV##8461:=lq_tmp$x##9175]})^\"lq_tmp$x##8453\" | $k_##8452[VV##8451:=lq_tmp$x##9171][VV##8461:=lq_tmp$x##9175]})<\\lq_tmp$x##9196 VV -> {lq_tmp$x##9174 : (GHC.Maybe.Maybe {lq_tmp$x##9173 : Main.Weight^\"lq_tmp$x##8457\" | $k_##8456[VV##8455:=lq_tmp$x##9173][VV##8458:=lq_tmp$x##9174][VV##8461:=lq_tmp$x##9175][lq_tmp$x##8454:=lq_tmp$x##9196][lq_tmp$x##9172:=lq_tmp$x##9196][lq_tmp$x##9192:=lq_tmp$x##9196]})^\"lq_tmp$x##8460\" | $k_##8459[VV##8458:=lq_tmp$x##9174][VV##8461:=lq_tmp$x##9175][lq_tmp$x##8454:=lq_tmp$x##9196][lq_tmp$x##9172:=lq_tmp$x##9196][lq_tmp$x##9192:=lq_tmp$x##9196]}>^\"lq_tmp$x##8463\" | $k_##8462[VV##8461:=lq_tmp$x##9175]} -> lq_tmp$x##9195:{lq_tmp$x##9182 : ({lq_tmp$x##9176 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8467\" | $k_##8466[VV##8465:=lq_tmp$x##9176][VV##8481:=lq_tmp$x##9182][ds_d809:=lq_tmp$x##9194]}, {lq_tmp$x##9178 : (GHC.Maybe.Maybe {lq_tmp$x##9177 : Main.Weight^\"lq_tmp$x##8470\" | $k_##8469[VV##8468:=lq_tmp$x##9177][VV##8471:=lq_tmp$x##9178][VV##8481:=lq_tmp$x##9182][ds_d809:=lq_tmp$x##9194]})^\"lq_tmp$x##8473\" | $k_##8472[VV##8471:=lq_tmp$x##9178][VV##8481:=lq_tmp$x##9182][ds_d809:=lq_tmp$x##9194]})<\\lq_tmp$x##9197 VV -> {lq_tmp$x##9181 : (GHC.Maybe.Maybe {lq_tmp$x##9180 : Main.Weight^\"lq_tmp$x##8477\" | $k_##8476[VV##8475:=lq_tmp$x##9180][VV##8478:=lq_tmp$x##9181][VV##8481:=lq_tmp$x##9182][ds_d809:=lq_tmp$x##9194][lq_tmp$x##8474:=lq_tmp$x##9197][lq_tmp$x##9179:=lq_tmp$x##9197][lq_tmp$x##9193:=lq_tmp$x##9197]})^\"lq_tmp$x##8480\" | $k_##8479[VV##8478:=lq_tmp$x##9181][VV##8481:=lq_tmp$x##9182][ds_d809:=lq_tmp$x##9194][lq_tmp$x##8474:=lq_tmp$x##9197][lq_tmp$x##9179:=lq_tmp$x##9197][lq_tmp$x##9193:=lq_tmp$x##9197]}>^\"lq_tmp$x##8483\" | $k_##8482[VV##8481:=lq_tmp$x##9182][ds_d809:=lq_tmp$x##9194]} -> {lq_tmp$x##9189 : ({lq_tmp$x##9183 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##8487\" | $k_##8486[VV##8485:=lq_tmp$x##9183][VV##8501:=lq_tmp$x##9189][a##a64C:=lq_tmp$x##9195][ds_d809:=lq_tmp$x##9194]}, {lq_tmp$x##9185 : (GHC.Maybe.Maybe {lq_tmp$x##9184 : Main.Weight^\"lq_tmp$x##8490\" | $k_##8489[VV##8488:=lq_tmp$x##9184][VV##8491:=lq_tmp$x##9185][VV##8501:=lq_tmp$x##9189][a##a64C:=lq_tmp$x##9195][ds_d809:=lq_tmp$x##9194]})^\"lq_tmp$x##8493\" | $k_##8492[VV##8491:=lq_tmp$x##9185][VV##8501:=lq_tmp$x##9189][a##a64C:=lq_tmp$x##9195][ds_d809:=lq_tmp$x##9194]})<\\lq_tmp$x##9198 VV -> {lq_tmp$x##9188 : (GHC.Maybe.Maybe {lq_tmp$x##9187 : Main.Weight^\"lq_tmp$x##8497\" | $k_##8496[VV##8495:=lq_tmp$x##9187][VV##8498:=lq_tmp$x##9188][VV##8501:=lq_tmp$x##9189][a##a64C:=lq_tmp$x##9195][ds_d809:=lq_tmp$x##9194][lq_tmp$x##8494:=lq_tmp$x##9198][lq_tmp$x##9186:=lq_tmp$x##9198]})^\"lq_tmp$x##8500\" | $k_##8499[VV##8498:=lq_tmp$x##9188][VV##8501:=lq_tmp$x##9189][a##a64C:=lq_tmp$x##9195][ds_d809:=lq_tmp$x##9194][lq_tmp$x##8494:=lq_tmp$x##9198][lq_tmp$x##9186:=lq_tmp$x##9198]}>^\"lq_tmp$x##8503\" | $k_##8502[VV##8501:=lq_tmp$x##9189][a##a64C:=lq_tmp$x##9195][ds_d809:=lq_tmp$x##9194]}"]]],[{"spanInfo":{"startLine":147,"endLine":147,"endCol":11,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["Main.filledDays","lq_tmp$x##7601:[Main.Entry] -> [(Data.Time.Calendar.Days.Day, Main.Weight)]"]]],[{"spanInfo":{"startLine":179,"endLine":179,"endCol":58,"startCol":26,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824644","GHC.Types.Int"]]],[{"spanInfo":{"startLine":131,"endLine":131,"endCol":44,"startCol":12,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824577","{lq_tmp$x##4556 : [{lq_tmp$x##4565 : GHC.Types.Char^\"lq_tmp$x##4564\" | $k_##4563[VV##4562:=lq_tmp$x##4565][lq_tmp$x##4559:=lq_anf$##7205759403792824575##d83B][lq_tmp$x##4560:=lq_anf$##7205759403792824576##d83C]\n                                                                       && lq_tmp$x##4565 == lq_anf$##7205759403792824576##d83C}] | len lq_tmp$x##4556 == lq_anf$##7205759403792824575##d83B}"]]],[{"spanInfo":{"startLine":91,"endLine":93,"endCol":47,"startCol":5,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824520","lq_tmp$x##88:(lq_tmp$x##89:{lq_tmp$x##2950 : GHC.Types.Double^\"lq_tmp$x##2949\" \"lq_tmp$x##90\" | $k_##2948[VV##2947:=lq_tmp$x##2950]} -> {lq_tmp$x##2954 : Main.Weight^\"lq_tmp$x##2953\" \"lq_tmp$x##91\" | $k_##2952[VV##2951:=lq_tmp$x##2954]}) -> lq_tmp$x##92:(GHC.Maybe.Maybe {lq_tmp$x##2950 : GHC.Types.Double^\"lq_tmp$x##2949\" \"lq_tmp$x##94\" | $k_##2948[VV##2947:=lq_tmp$x##2950]}) -> (GHC.Maybe.Maybe {lq_tmp$x##2954 : Main.Weight^\"lq_tmp$x##2953\" \"lq_tmp$x##96\" | $k_##2952[VV##2951:=lq_tmp$x##2954]})"]]],[{"spanInfo":{"startLine":235,"endLine":235,"endCol":47,"startCol":21,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[[null,"Data.Time.Calendar.Days.Day"]]],[{"spanInfo":{"startLine":236,"endLine":236,"endCol":37,"startCol":30,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lastDay","{lq_tmp$x##7588 : Data.Time.Calendar.Days.Day^\"lq_tmp$x##457\" | lq_tmp$x##7588 == lastDay##a6uU}"]]],[{"spanInfo":{"startLine":50,"endLine":59,"endCol":89,"startCol":8,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824724","(GHC.Types.IO {lq_tmp$x##10706 : ()^\"lq_tmp$x##10705\" \"lq_tmp$x##85\" | $k_##10704[VV##10703:=lq_tmp$x##10706][lq_tmp$x##78:=lq_anf$##7205759403792824705##d85H][lq_tmp$x##81:=lq_anf$##7205759403792824723##d85Z]})"]]],[{"spanInfo":{"startLine":149,"endLine":149,"endCol":55,"startCol":35,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true},[["lq_anf$##7205759403792824682","lq_tmp$x##8776:{lq_tmp$x##8785 : Main.Entry^\"lq_tmp$x##8784\" \"lq_tmp$x##691\" | $k_##8783[VV##8782:=lq_tmp$x##8785][lq_tmp$x##8774:=Data.Time.Calendar.Days.$fOrdDay][lq_tmp$x##8775:=Main.entryDay]} -> lq_tmp$x##8777:{lq_tmp$x##8785 : Main.Entry^\"lq_tmp$x##8784\" \"lq_tmp$x##693\" | $k_##8783[VV##8782:=lq_tmp$x##8785][lq_tmp$x##8774:=Data.Time.Calendar.Days.$fOrdDay][lq_tmp$x##8775:=Main.entryDay]} -> GHC.Types.Ordering"]]]],"o_bots":[],"o_result":{"tag":"Unsafe","contents":[{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : [(a, Main.Weight)] | (not (n >= 0) => len v == 0)\n                                   && len v >= 0\n                                   && v == window}\n \n  not a subtype of Required type\n    VV : {VV : [(a, Main.Weight)] | len VV > 0}\n \n  In Context\n    window : {window : [(a, Main.Weight)] | (not (n >= 0) => len window == 0)\n                                            && len window >= 0}\n     \n    n : {n : GHC.Types.Int | n > 0}","pos":{"spanInfo":{"startLine":227,"endLine":227,"endCol":46,"startCol":40,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len v >= 0\n                                                             && v == es}\n \n  not a subtype of Required type\n    VV : {VV : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len VV >= weeks * 7}\n \n  In Context\n    es : {es : [(Data.Time.Calendar.Days.Day, Main.Weight)] | len es >= 0}\n     \n    weeks : {weeks : GHC.Types.Int | weeks > 0}","pos":{"spanInfo":{"startLine":207,"endLine":207,"endCol":33,"startCol":31,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : [GHC.Types.Double] | len v >= 0\n                                   && v == ?a}\n \n  not a subtype of Required type\n    VV : {VV : [GHC.Types.Double] | len VV > 0}\n \n  In Context\n    ?a : {?a : [GHC.Types.Double] | len ?a >= 0}","pos":{"spanInfo":{"startLine":227,"endLine":227,"endCol":105,"startCol":76,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : [(a, Main.Weight)] | (not (n >= 0) => len v == 0)\n                                   && len v >= 0\n                                   && v == window}\n \n  not a subtype of Required type\n    VV : {VV : [(a, Main.Weight)] | len VV > 0}\n \n  In Context\n    window : {window : [(a, Main.Weight)] | (not (n >= 0) => len window == 0)\n                                            && len window >= 0}\n     \n    n : {n : GHC.Types.Int | n > 0}","pos":{"spanInfo":{"startLine":227,"endLine":227,"endCol":65,"startCol":59,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : [Data.Time.Calendar.Days.Day] | len v >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [Data.Time.Calendar.Days.Day] | len VV > 0}\n ","pos":{"spanInfo":{"startLine":233,"endLine":236,"endCol":37,"startCol":1,"filename":"/Users/matt/dev/haskell/weight-tracker/src/Main.hs"},"realSpan":true}}]}}